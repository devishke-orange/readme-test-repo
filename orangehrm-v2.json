{
  "openapi": "3.1.0",
  "info": {
    "title": "OrangeHRM Open Source : REST API v2 docs",
    "version": "2.6.0"
  },
  "servers": [
    {
      "url": "{orangehrm-url}",
      "variables": {
        "orangehrm-url": {
          "default": "https://opensource-demo.orangehrmlive.com/index.php"
        }
      }
    }
  ],
  "paths": {
    "/api/v2/admin/educations/{id}": {
      "get": {
        "tags": [
          "Admin/Education"
        ],
        "summary": "Get an Education Record",
        "operationId": "get-an-education-record",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-EducationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Education"
        ],
        "summary": "Update an Education Record",
        "operationId": "update-an-education-record",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-EducationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/admin/educations": {
      "get": {
        "tags": [
          "Admin/Education"
        ],
        "summary": "List All Education Records",
        "operationId": "list-all-education-records",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "e.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-SkillModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin/Education"
        ],
        "summary": "Create an Education Record",
        "operationId": "create-an-education-record",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-SkillModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin/Education"
        ],
        "summary": "Delete Education Records",
        "operationId": "delete-education-records",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/admin/email-configuration": {
      "get": {
        "tags": [
          "Admin/Email Configuration"
        ],
        "summary": "Get Email Configuration",
        "operationId": "get-email-configuration",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-EmailConfigurationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Email Configuration"
        ],
        "summary": "Update Email Configuration",
        "operationId": "update-email-configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "mailType": {
                    "type": "string"
                  },
                  "sentAs": {
                    "type": "string"
                  },
                  "smtpHost": {
                    "type": "string"
                  },
                  "smtpPort": {
                    "type": "integer"
                  },
                  "smtpUsername": {
                    "type": "string"
                  },
                  "smtpPassword": {
                    "type": "string"
                  },
                  "smtpAuthType": {
                    "type": "string"
                  },
                  "smtpSecurityType": {
                    "type": "string"
                  },
                  "testEmailAddress": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-LanguageModel"
                    },
                    "meta": {
                      "properties": {
                        "testEmailStatus": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/email-subscriptions/{emailSubscriptionId}/subscribers": {
      "get": {
        "tags": [
          "Admin/Email Subscriber"
        ],
        "summary": "List All Email Subscribers",
        "operationId": "list-all-email-subscribers",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "emailSubscriptionId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "emailSubscriber.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-EmailSubscriberModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "name": {
                          "description": "Name of the subscription",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin/Email Subscriber"
        ],
        "summary": "Create an Email Subscriber",
        "operationId": "create-an-email-subscriber",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "emailSubscriptionId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "email"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-EmailSubscriberModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin/Email Subscriber"
        ],
        "summary": "Delete Email Subscribers",
        "operationId": "delete-email-subscribers",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "emailSubscriptionId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/admin/email-subscriptions/{emailSubscriptionId}/subscribers/{id}": {
      "get": {
        "tags": [
          "Admin/Email Subscriber"
        ],
        "summary": "Get an Email Subscriber",
        "operationId": "get-an-email-subscriber",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "emailSubscriptionId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-EmailSubscriberModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Email Subscriber"
        ],
        "summary": "Update an Email Susbcriber",
        "operationId": "update-an-email-subscriber",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "emailSubscriptionId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "email"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-EmailSubscriberModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/admin/email-subscriptions": {
      "get": {
        "tags": [
          "Admin/Email Subscription"
        ],
        "summary": "List All Email Subscriptions",
        "operationId": "get-all-email-subscriptions",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "emailSubscription.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-EmailSubscriptionModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/email-subscriptions/{id}": {
      "put": {
        "tags": [
          "Admin/Email Subscription"
        ],
        "summary": "Update an Email Subscription",
        "operationId": "update-email-susbcription",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "enabled"
                ],
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-EmailSubscriptionModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/admin/employment-statuses/{id}": {
      "get": {
        "tags": [
          "Admin/Employment Status"
        ],
        "summary": "Get an Employment Status",
        "operationId": "get-one-employment-status",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-EmploymentStatusModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Employment Status"
        ],
        "summary": "Update an Employment Status",
        "operationId": "update-an-employment-status",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-EmploymentStatusModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/admin/employment-statuses": {
      "get": {
        "tags": [
          "Admin/Employment Status"
        ],
        "summary": "List All Employment Statuses",
        "operationId": "list-all-employment-statuses",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "es.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-EmploymentStatusModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin/Employment Status"
        ],
        "summary": "Create an Employment Status",
        "operationId": "create-an-employment-status",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-EmploymentStatusModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin/Employment Status"
        ],
        "summary": "Delete Employment Statuses",
        "operationId": "delete-employment-statuses",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/admin/i18n/groups": {
      "get": {
        "tags": [
          "Admin/I18N"
        ],
        "summary": "List All I18N Groups",
        "operationId": "list-all-i18n-groups",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "g.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-I18NGroupModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/i18n/languages": {
      "get": {
        "tags": [
          "Admin/I18N"
        ],
        "summary": "List All I18N Languages",
        "operationId": "list-all-i18n-languages",
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "l.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-I18NLanguageModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/i18n/languages/{id}": {
      "put": {
        "tags": [
          "Admin/I18N"
        ],
        "summary": "Update an I18N Language",
        "operationId": "update-an-i18n-language",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Empty body as the language is enabled without any parameters",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-I18NLanguageModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/admin/i18n/languages/{languageId}/translations": {
      "get": {
        "tags": [
          "Admin/I18N"
        ],
        "summary": "List All I18N Translations",
        "operationId": "list-all-i18n-translations",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "languageId",
            "schema": {
              "description": "a valid group id of I18N-Language",
              "type": "integer"
            }
          },
          {
            "name": "sourceText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "translatedText",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "a valid group id of I18N-Group",
              "type": "integer"
            }
          },
          {
            "name": "onlyTranslated",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "langString.value"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "langStringId": {
                            "type": "integer"
                          },
                          "source": {
                            "type": "boolean"
                          },
                          "note": {
                            "type": "boolean"
                          },
                          "target": {
                            "type": "boolean"
                          },
                          "module": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "example": "langStringId: 59, note: null, source: \"Add Currency\", target: \"Valuta toevoegen\" "
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/i18n/languages/{languageId}/translations/bulk": {
      "put": {
        "tags": [
          "Admin/I18N"
        ],
        "summary": "Bulk Update I18N Translations",
        "operationId": "bulk-update-i18n-translations",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "languageId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "langStringId": {
                          "type": "integer"
                        },
                        "translatedValue": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-LanguageModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/admin/job-categories/{id}": {
      "get": {
        "tags": [
          "Admin/Job Category"
        ],
        "summary": "Get a Job Category",
        "operationId": "get-a-job-category",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-JobCategoryModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Job Category"
        ],
        "summary": "Update a Job Category",
        "operationId": "update-a-job-category",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-JobCategoryModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/admin/job-categories": {
      "get": {
        "tags": [
          "Admin/Job Category"
        ],
        "summary": "List All Job Categories",
        "operationId": "list-all-job-categories",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "jc.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-JobCategoryModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin/Job Category"
        ],
        "summary": "Create a Job Category",
        "operationId": "create-a-job-category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-JobCategoryModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin/Job Category"
        ],
        "summary": "Delete Job Categories",
        "operationId": "delete-job-categories",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/admin/job-titles/{id}/specification": {
      "get": {
        "tags": [
          "Admin/Job Specification"
        ],
        "summary": "Get Job Specification",
        "operationId": "get-job-specification",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-JobSpecificationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/admin/job-titles/{id}": {
      "get": {
        "tags": [
          "Admin/Job Title"
        ],
        "summary": "Get a Job Title",
        "operationId": "get-a-job-title",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-JobTitleModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Job Title"
        ],
        "summary": "Update a Job Title",
        "operationId": "update-a-job-title",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "title"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "default": null
                  },
                  "note": {
                    "type": "string",
                    "default": null
                  },
                  "currentJobSpecification": {
                    "type": "string",
                    "default": null,
                    "enum": [
                      "keepCurrent",
                      "deleteCurrent",
                      "replaceCurrent"
                    ]
                  },
                  "specification": {
                    "$ref": "#/components/schemas/Base64AttachmentOrNull"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-JobTitleModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/admin/job-titles": {
      "get": {
        "tags": [
          "Admin/Job Title"
        ],
        "summary": "List All Job Titles",
        "operationId": "list-all-job-titles",
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "jt.jobTitleName",
                "jt.jobDescription"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-JobTitleModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin/Job Title"
        ],
        "summary": "Create a Job Title",
        "operationId": "create-a-job-title",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "title"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "default": null
                  },
                  "note": {
                    "type": "string",
                    "default": null
                  },
                  "specification": {
                    "$ref": "#/components/schemas/Base64AttachmentOrNull"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-JobTitleModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin/Job Title"
        ],
        "summary": "Delete Job Titles",
        "operationId": "delete-job-titles",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/admin/languages/{id}": {
      "get": {
        "tags": [
          "Admin/Languages"
        ],
        "summary": "Get a Language Record",
        "operationId": "get-a-language-record",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-LanguageModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Languages"
        ],
        "summary": "Update a Language Record",
        "operationId": "update-a-language-record",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-LanguageModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/admin/languages": {
      "get": {
        "tags": [
          "Admin/Languages"
        ],
        "summary": "List All Languages Records",
        "operationId": "list-all-language-records",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "l.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-LanguageModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin/Languages"
        ],
        "summary": "Create a Language Record",
        "operationId": "create-a-language",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-LanguageModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin/Languages"
        ],
        "summary": "Delete Language Records",
        "operationId": "delete-language-records",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/admin/licenses/{id}": {
      "get": {
        "tags": [
          "Admin/License"
        ],
        "summary": "Get a License",
        "operationId": "get-a-license",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-LicenseModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Admin/License"
        ],
        "summary": "Update a License",
        "operationId": "update-a-license",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-LicenseModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/admin/licenses": {
      "get": {
        "tags": [
          "Admin/License"
        ],
        "summary": "List All Licenses",
        "operationId": "list-all-licenses",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "l.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-LicenseModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin/License"
        ],
        "summary": "Create a License",
        "operationId": "create-a-license",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-LicenseModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin/License"
        ],
        "summary": "Delete Licenses",
        "operationId": "delete-licenses",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/admin/localization": {
      "get": {
        "tags": [
          "Admin/Localization"
        ],
        "summary": "Get Localization Settings",
        "operationId": "get-localization-settings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dateFormat": {
                      "type": "string",
                      "example": "Y-m-d"
                    },
                    "language": {
                      "type": "string",
                      "example": "en_US"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/localization}": {
      "put": {
        "tags": [
          "Admin/Localization"
        ],
        "summary": "Update Localization Settings",
        "operationId": "update-localization-settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "dateFormat",
                  "language"
                ],
                "properties": {
                  "dateFormat": {
                    "type": "string",
                    "example": "en_US,nl"
                  },
                  "language": {
                    "type": "string",
                    "example": "m-d-Y,m-Y-d"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-MembershipModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/admin/locations/{id}": {
      "get": {
        "tags": [
          "Admin/Locations"
        ],
        "summary": "Get a Location",
        "operationId": "get-a-location",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-LocationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Locations"
        ],
        "summary": "Update a Location",
        "operationId": "update-a-location",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "countryCode"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "province": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "zipCode": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "fax": {
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-LocationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/admin/locations": {
      "get": {
        "tags": [
          "Admin/Locations"
        ],
        "summary": "List All Locations",
        "operationId": "list-all-locations",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "location.name",
                "location.city",
                "location.phone",
                "country.countryCode",
                "country.countryName",
                "noOfEmployees"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-LocationModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin/Locations"
        ],
        "summary": "Create a Location",
        "operationId": "create-a-location",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "countryCode"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "province": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "zipCode": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "fax": {
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-LocationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin/Locations"
        ],
        "summary": "Delete Locations",
        "operationId": "delete-locations",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/admin/memberships/{id}": {
      "get": {
        "tags": [
          "Admin/Memberships"
        ],
        "summary": "Get a Membership",
        "operationId": "get-a-membership",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-MembershipModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Memberships"
        ],
        "summary": "Update a Membership",
        "operationId": "update-a-membership",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-MembershipModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/admin/memberships": {
      "get": {
        "tags": [
          "Admin/Memberships"
        ],
        "summary": "List All Memberships",
        "operationId": "list-all-memberships",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "m.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-MembershipModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin/Memberships"
        ],
        "summary": "Create a Membership",
        "operationId": "create-a-membership",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-MembershipModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin/Memberships"
        ],
        "summary": "Delete Memberships",
        "operationId": "delete-memberships",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/admin/modules": {
      "get": {
        "tags": [
          "Admin/Modules"
        ],
        "summary": "List All Modules",
        "operationId": "list-all-modules",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "Module name and the boolean value to denote if it is enabled",
                      "type": "array",
                      "items": {
                        "properties": {
                          "admin": {
                            "type": "boolean"
                          },
                          "pim": {
                            "type": "boolean"
                          },
                          "leave": {
                            "type": "boolean"
                          },
                          "time": {
                            "type": "boolean"
                          },
                          "recruitment": {
                            "type": "boolean"
                          },
                          "performance": {
                            "type": "boolean"
                          },
                          "maintenance": {
                            "type": "boolean"
                          },
                          "mobile": {
                            "type": "boolean"
                          },
                          "directory": {
                            "type": "boolean"
                          },
                          "claim": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "example": "admin: true, pim: true, leave: false, time: true,..."
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Modules"
        ],
        "summary": "Update a Module",
        "operationId": "update-a-module",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Module name and the boolean value to denote if it is enabled",
                "properties": {
                  "admin": {
                    "type": "boolean"
                  },
                  "pim": {
                    "type": "boolean"
                  },
                  "leave": {
                    "type": "boolean"
                  },
                  "time": {
                    "type": "boolean"
                  },
                  "recruitment": {
                    "type": "boolean"
                  },
                  "performance": {
                    "type": "boolean"
                  },
                  "maintenance": {
                    "type": "boolean"
                  },
                  "mobile": {
                    "type": "boolean"
                  },
                  "directory": {
                    "type": "boolean"
                  },
                  "claim": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "Module name and the boolean value to denote if it is enabled",
                      "type": "array",
                      "items": {
                        "properties": {
                          "module": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "example": "admin: true, pim: true, leave: true, time: true,..."
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/nationalities/{id}": {
      "get": {
        "tags": [
          "Admin/Nationality"
        ],
        "summary": "Get a Nationality",
        "operationId": "get-a-nationality",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-NationalityModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Nationality"
        ],
        "summary": "Update a Nationality",
        "operationId": "update-a-nationality",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-NationalityModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/admin/nationalities": {
      "get": {
        "tags": [
          "Admin/Nationality"
        ],
        "summary": "List All Nationalities",
        "operationId": "list-all-nationalities",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "n.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-NationalityModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin/Nationality"
        ],
        "summary": "Create a Nationality",
        "operationId": "create-a-nationality",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-NationalityModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin/Nationality"
        ],
        "summary": "Delete Nationalities",
        "operationId": "delete-nationalities",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/admin/organization": {
      "get": {
        "tags": [
          "Admin/Organization"
        ],
        "summary": "Get Organization Details",
        "operationId": "get-organization-details",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-OrganizationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Organization"
        ],
        "summary": "Update Organization Details",
        "operationId": "update-organization-details",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "registrationNumber": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "fax": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "province": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "zipCode": {
                    "type": "string"
                  },
                  "street1": {
                    "type": "string"
                  },
                  "street2": {
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-OrganizationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/admin/pay-grades": {
      "get": {
        "tags": [
          "Admin/Pay Grade"
        ],
        "summary": "List All Pay Grades",
        "operationId": "list-all-pay-grades",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pg.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-PayGradeModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin/Pay Grade"
        ],
        "summary": "Create a Pay Grade",
        "operationId": "create-a-pay-grade",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-PayGradeModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin/Pay Grade"
        ],
        "summary": "Delete Pay Grades",
        "operationId": "delete-pay-grades",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/admin/pay-grades/{id}": {
      "get": {
        "tags": [
          "Admin/Pay Grade"
        ],
        "summary": "Get a Pay Grade",
        "operationId": "get-a-pay-grade",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-PayGradeModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Pay Grade"
        ],
        "summary": "Update a Pay Grade",
        "operationId": "update-a-pay-grade",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-PayGradeModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/pay-grades/{payGradeId}/currencies/allowed": {
      "get": {
        "tags": [
          "Admin/Pay Grade Currency"
        ],
        "summary": "List Allowed Currencies for Pay Grade",
        "operationId": "list-allowed-currencies-for-pay-grade",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "payGradeId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ct.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-CurrencyTypeModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/pay-grades/{payGradeId}/currencies/{id}": {
      "get": {
        "tags": [
          "Admin/Pay Grade Currency"
        ],
        "summary": "Get a Pay Grade Currency",
        "operationId": "get-a-pay-grade-currency",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "payGradeId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-PayGradeCurrencyModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Pay Grade Currency"
        ],
        "summary": "Update a Pay Grade Currency",
        "operationId": "update-a-pay-grade-currency",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "payGradeId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "currencyId",
                  "maxSalary",
                  "minSalary"
                ],
                "properties": {
                  "currencyId": {
                    "type": "string"
                  },
                  "maxSalary": {
                    "type": "integer"
                  },
                  "minSalary": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-PayGradeCurrencyModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/pay-grades/{payGradeId}/currencies": {
      "get": {
        "tags": [
          "Admin/Pay Grade Currency"
        ],
        "summary": "List All Pay Grade Currencies",
        "operationId": "list-all-pay-grade-currencies",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "payGradeId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ct.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-PayGradeCurrencyModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin/Pay Grade Currency"
        ],
        "summary": "Create a Pay Grade Currency",
        "operationId": "create-a-pay-grade-currency",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "payGradeId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "currencyId",
                  "maxSalary",
                  "minSalary"
                ],
                "properties": {
                  "currencyId": {
                    "type": "string"
                  },
                  "maxSalary": {
                    "type": "integer"
                  },
                  "minSalary": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-PayGradeCurrencyModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin/Pay Grade Currency"
        ],
        "summary": "Delete Pay Grade Currencies",
        "operationId": "delete-pay-grade-currencies",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "payGradeId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/admin/skills/{id}": {
      "get": {
        "tags": [
          "Admin/Skills"
        ],
        "summary": "Get a Skill",
        "operationId": "get-a-skill",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-SkillModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Skills"
        ],
        "summary": "Update a Skill",
        "operationId": "update-a-skill",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-SkillModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/admin/skills": {
      "get": {
        "tags": [
          "Admin/Skills"
        ],
        "summary": "List All Skills",
        "operationId": "list-all-skills",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "s.name",
                "s.description"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-SkillModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin/Skills"
        ],
        "summary": "Create a Skill",
        "operationId": "create-a-skill",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-SkillModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin/Skills"
        ],
        "summary": "Delete Skills",
        "operationId": "delete-skills",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/admin/subunits/{id}": {
      "get": {
        "tags": [
          "Admin/Subunits"
        ],
        "summary": "Get a Subunit",
        "operationId": "get-a-subunit",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-SubunitModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Subunits"
        ],
        "summary": "Update a Subunit",
        "operationId": "update-a-subunit",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "String should be unique",
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "unitId": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-SubunitModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/subunits": {
      "get": {
        "tags": [
          "Admin/Subunits"
        ],
        "summary": "List All Subunits",
        "operationId": "list-all-subunits",
        "parameters": [
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "list"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "if request paraneter 'mode' is tree SubunitTreeModel is used",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/Admin-SubunitModel"
                          },
                          {
                            "$ref": "#/components/schemas/Admin-SubunitTreeModel"
                          }
                        ]
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin/Subunits"
        ],
        "summary": "Create a Subunit",
        "operationId": "create-a-subunit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "parentId"
                ],
                "properties": {
                  "name": {
                    "description": "Should be unique",
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "parentId": {
                    "description": "Should be the id of the parent node",
                    "type": "integer",
                    "example": "1"
                  },
                  "unitId": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-SubunitModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin/Subunits"
        ],
        "summary": "Delete Subunits",
        "operationId": "delete-subunits",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-SubunitModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/users/{id}": {
      "get": {
        "tags": [
          "Admin/Users"
        ],
        "summary": "Get a User",
        "operationId": "get-a-user",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-UserModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Users"
        ],
        "summary": "Update a User",
        "operationId": "update-a-user",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "username",
                  "password",
                  "status",
                  "userRoleId",
                  "empNumber"
                ],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "userRoleId": {
                    "type": "integer"
                  },
                  "empNumber": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-UserModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/admin/users": {
      "get": {
        "tags": [
          "Admin/Users"
        ],
        "summary": "List All Users",
        "operationId": "list-all-users",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userRoleId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "u.userName",
                "u.status",
                "r.name",
                "e.firstName",
                "e.lastName",
                "r.displayName"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-UserModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin/Users"
        ],
        "summary": "Create a User",
        "operationId": "create-a-user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "username",
                  "password",
                  "status",
                  "userRoleId",
                  "empNumber"
                ],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "userRoleId": {
                    "type": "integer"
                  },
                  "empNumber": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-UserModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin/Users"
        ],
        "summary": "Delete Users",
        "operationId": "delete-users",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/admin/validation/user-name": {
      "get": {
        "tags": [
          "Admin/Users"
        ],
        "summary": "Validate Username Uniqueness",
        "operationId": "validate-username-uniqueness",
        "parameters": [
          {
            "name": "userName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "valid": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/work-shifts": {
      "get": {
        "tags": [
          "Admin/Work Shift"
        ],
        "summary": "List All Work Shifts",
        "operationId": "list-all-workfshifts",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "workShift.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin-WorkShiftModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin/Work Shift"
        ],
        "summary": "Create a Work Shift",
        "operationId": "create-a-work-shift",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "hoursPerDay",
                  "startTime",
                  "endTime"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "hoursPerDay": {
                    "type": "string"
                  },
                  "startTime": {
                    "type": "string"
                  },
                  "endTime": {
                    "type": "string"
                  },
                  "empNumbers": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-WorkShiftDetailedModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin/Work Shift"
        ],
        "summary": "Delete Work Shifts",
        "operationId": "delete-work-shifts",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/admin/work-shifts/{id}": {
      "get": {
        "tags": [
          "Admin/Work Shift"
        ],
        "summary": "Get a Work Shift",
        "operationId": "get-a-work-shift",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-WorkShiftDetailedModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Work Shift"
        ],
        "summary": "Update a Work Shift",
        "operationId": "update-a-work-shift",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "hoursPerDay",
                  "startTime",
                  "endTime"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "hoursPerDay": {
                    "type": "string"
                  },
                  "startTime": {
                    "type": "string"
                  },
                  "endTime": {
                    "type": "string"
                  },
                  "empNumbers": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-WorkShiftDetailedModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/work-shifts/employees": {
      "get": {
        "tags": [
          "Admin/Work Shift"
        ],
        "summary": "List Employees Unassigned to Work Shift",
        "operationId": "list-employees-unassigned-to-work-shift",
        "parameters": [
          {
            "name": "nameOrId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "employee.lastName",
                "employee.firstName",
                "employee.middleName",
                "employee.empNumber",
                "employee.employeeId",
                "jobTitle.jobTitleName",
                "empStatus.name",
                "subunit.name",
                "supervisor.firstName"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pim-EmployeeModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/attendance/configs": {
      "get": {
        "tags": [
          "Attendance/Configuration"
        ],
        "summary": "Get Attendance Configuration",
        "operationId": "get-attendance-configuration",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Attendance-AttendanceConfigurationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Attendance/Configuration"
        ],
        "summary": "Update Attendance Configuration",
        "operationId": "update-attendance-configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "canUserChangeCurrentTime": {
                    "type": "boolean",
                    "example": "true"
                  },
                  "canUserModifyAttendance": {
                    "type": "boolean",
                    "example": "false"
                  },
                  "canSupervisorModifyAttendance": {
                    "type": "boolean",
                    "example": "false"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Attendance-AttendanceConfigurationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/attendance/records/punch-in-overlaps": {
      "get": {
        "tags": [
          "Attendance/Overlap"
        ],
        "summary": "Check Punch In Overlap (Editing)",
        "operationId": "check-punch-in-overlap-editing",
        "parameters": [
          {
            "name": "recordId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "punchInTimezoneOffset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "punchInDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "punchInTime",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "punchOutTimezoneOffset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "punchOutDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "punchOutTime",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "valid": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/attendance/records/punch-out-overlaps": {
      "get": {
        "tags": [
          "Attendance/Overlap"
        ],
        "summary": "Check Punch Out Overlap (Editing)",
        "operationId": "check-punch-out-overlap-editing",
        "parameters": [
          {
            "name": "recordId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "punchInTimezoneOffset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "punchInDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "punchInTime",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "punchOutTimezoneOffset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "punchOutDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "punchOutTime",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "valid": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/attendance/punch-in/overlaps": {
      "get": {
        "tags": [
          "Attendance/Overlap"
        ],
        "summary": "Check Punch In Overlap",
        "operationId": "check-punch-in-overlap",
        "parameters": [
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "timezoneOffset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "valid": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/attendance/punch-out/overlaps": {
      "get": {
        "tags": [
          "Attendance/Overlap"
        ],
        "summary": "Check Punch Out Overlap",
        "operationId": "check-punch-out-overlap",
        "parameters": [
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "timezoneOffset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "valid": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/attendance/records/{id}": {
      "get": {
        "tags": [
          "Attendance/Attendance Record"
        ],
        "summary": "List an Attendance Record",
        "operationId": "list-an-attendance-record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Attendance Record Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Attendance-DetailedAttendanceRecordModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Attendance/Attendance Record"
        ],
        "summary": "Update an Attendance Record",
        "operationId": "update-an-attendance-record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Attendance Record Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "date",
                  "name",
                  "time",
                  "timezoneOffset",
                  "timezoneName"
                ],
                "properties": {
                  "punchInDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "punchInTime": {
                    "type": "string"
                  },
                  "punchInOffset": {
                    "type": "number"
                  },
                  "punchInTimezoneName": {
                    "type": "string"
                  },
                  "punchOutDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "punchOutTime": {
                    "type": "string"
                  },
                  "punchOutOffset": {
                    "type": "number"
                  },
                  "punchOutTimezoneName": {
                    "type": "string"
                  },
                  "punchOutNote": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Attendance-AttendanceRecordModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          },
          "400": {
            "description": "Bad Request - punch in/out overlap",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "oneOf": [
                        {
                          "property": "error",
                          "properties": {
                            "status": {
                              "type": "string",
                              "default": "400"
                            },
                            "message": {
                              "type": "string",
                              "default": "Punch-In Overlap Found"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "property": "error",
                          "properties": {
                            "status": {
                              "type": "string",
                              "default": "400"
                            },
                            "message": {
                              "type": "string",
                              "default": "Punch-Out Overlap Found"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/attendance/current-datetime": {
      "get": {
        "tags": [
          "Attendance/Current Date Time"
        ],
        "summary": "Get the Current Date & Time",
        "operationId": "get-the-current-date-and-time",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Attendance-DateTimeModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/attendance/employees/{empNumber}/records": {
      "get": {
        "tags": [
          "Attendance/Employee Attendance"
        ],
        "summary": "List an Employee's Attendance Records",
        "operationId": "list-an-employees-attendance-records",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "attendanceRecord.punchInUserTime"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Attendance-AttendanceRecordListModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "sum": {
                          "properties": {
                            "hours": {
                              "type": "integer"
                            },
                            "minutes": {
                              "type": "integer"
                            },
                            "label": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Attendance/Employee Attendance"
        ],
        "summary": "Update an Employee's Attendance Record",
        "operationId": "update-an-employees-attendance-record",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "date",
                  "name",
                  "time",
                  "timezoneOffset",
                  "timezoneName"
                ],
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date"
                  },
                  "time": {
                    "type": "string"
                  },
                  "timezoneOffset": {
                    "type": "string"
                  },
                  "timezoneName": {
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Attendance-AttendanceRecordModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attendance/Employee Attendance"
        ],
        "summary": "Create an Employee's Attendance Record",
        "operationId": "create-an-employees-attendance-record",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "date",
                  "name",
                  "time",
                  "timezoneOffset",
                  "timezoneName"
                ],
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date"
                  },
                  "time": {
                    "type": "string"
                  },
                  "timezoneOffset": {
                    "type": "string"
                  },
                  "timezoneName": {
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Attendance-AttendanceRecordModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Attendance/Employee Attendance"
        ],
        "summary": "Delete an Employee's Attendance Records",
        "operationId": "delete-an-employees-attendance-records",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/attendance/employees/summary": {
      "get": {
        "tags": [
          "Attendance/Employee Attendance Summary"
        ],
        "summary": "Summarize Employee Attendance",
        "operationId": "summarize-employee-attendance",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "employee.lastName"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Attendance-EmployeeAttendanceSummeryListModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/attendance/records/latest": {
      "get": {
        "tags": [
          "Attendance/Attendance Record"
        ],
        "summary": "Get the Latest Attendance Record",
        "operationId": "get-the-latest-attendance-record",
        "parameters": [
          {
            "name": "empNumber",
            "in": "query",
            "description": "Employee Number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Attendance-EmployeeLatestAttendanceRecordModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/attendance/timezones": {
      "get": {
        "tags": [
          "Attendance/Timezones"
        ],
        "summary": "List Timezones",
        "operationId": "list-timezones",
        "parameters": [
          {
            "name": "timezoneName",
            "in": "query",
            "description": "Get single timezone details by sending timezoneName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "offset": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/buzz/shares/{shareId}/comments/{commentId}": {
      "get": {
        "tags": [
          "Buzz/Comments"
        ],
        "summary": "Get a Comment on a Post",
        "operationId": "get-a-comment-on-a-post",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "shareId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "commentId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "detailed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Buzz-BuzzCommentModel"
                        },
                        {
                          "$ref": "#/components/schemas/Buzz-BuzzDetailedCommentModel"
                        }
                      ]
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Buzz/Comments"
        ],
        "summary": "Edit a Comment on a Post",
        "operationId": "edit-a-comment-on-a-post",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "shareId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "commentId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "detailed"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "text"
                ],
                "properties": {
                  "text": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Buzz-BuzzCommentModel"
                        },
                        {
                          "$ref": "#/components/schemas/Buzz-BuzzDetailedCommentModel"
                        }
                      ]
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Buzz/Comments"
        ],
        "summary": "Delete a Comment on a Post",
        "operationId": "delete-a-comment-on-a-post",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "shareId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "commentId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "commentId": {
                          "type": "integer"
                        },
                        "shareId": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/buzz/shares/{shareId}/comments": {
      "get": {
        "tags": [
          "Buzz/Comments"
        ],
        "summary": "List All Comments on a Post",
        "operationId": "list-all-comments-on-a-post",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "shareId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "detailed"
              ]
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "comment.createdAtUtc"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/Buzz-BuzzCommentModel"
                          },
                          {
                            "$ref": "#/components/schemas/Buzz-BuzzDetailedCommentModel"
                          }
                        ]
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Buzz/Comments"
        ],
        "summary": "Comment on a Post",
        "operationId": "comment-on-a-post",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "shareId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "detailed"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "text"
                ],
                "properties": {
                  "text": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Buzz-BuzzCommentModel"
                        },
                        {
                          "$ref": "#/components/schemas/Buzz-BuzzDetailedCommentModel"
                        }
                      ]
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/buzz/feed": {
      "get": {
        "tags": [
          "Buzz/Feed"
        ],
        "summary": "List the Buzz Feed",
        "operationId": "list-the-buzz-feed",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "share.createdAtUtc",
                "share.numOfLikes",
                "share.numOfComments"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Buzz-FeedPostModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/buzz/comments/{commentId}/likes": {
      "get": {
        "tags": [
          "Buzz/Comment Likes"
        ],
        "summary": "List Likes on a Comment",
        "operationId": "List-likes-on-a-comment",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "commentId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "commentLike.id",
                "commentLike.likedAtUtc"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Buzz-BuzzLikeOnCommentModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Buzz/Comment Likes"
        ],
        "summary": "Like a Comment",
        "operationId": "like-a-comment",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "commentId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Buzz-BuzzLikeOnCommentModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Liking a comment that is already liked",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "default": "Already liked"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Buzz/Comment Likes"
        ],
        "summary": "Unlike a Liked Comment",
        "operationId": "unlike-a-liked-comment",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "commentId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "commentId": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unlike a comment that is not liked",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "messsage": {
                          "type": "string",
                          "default": "Not previously liked"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/buzz/shares/{shareId}/likes": {
      "get": {
        "tags": [
          "Buzz/Share Likes"
        ],
        "summary": "List Likes on a Share/Post",
        "operationId": "list-likes-on-a-share-post",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "shareId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "shareLike.id",
                "shareLike.likedAtUtc"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Buzz-BuzzLikeOnShareModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Buzz/Share Likes"
        ],
        "summary": "Like a Share/Post",
        "operationId": "like-a-share-post",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "shareId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Buzz-BuzzLikeOnShareModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Liking a post that is already liked",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "default": "Already liked"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Buzz/Share Likes"
        ],
        "summary": "Unlike a Liked Share/Post",
        "operationId": "unlike-a-liked-share-post",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "shareId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "shareId": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unlike a post that is not liked",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "default": "Not previously liked"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/buzz/posts": {
      "post": {
        "tags": [
          "Buzz/Post"
        ],
        "summary": "Post Text, Photos or Video",
        "operationId": "post-text-photos-or-video",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "title",
                  "type"
                ],
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Buzz-Post-Text"
                  },
                  {
                    "$ref": "#/components/schemas/Buzz-Post-Photo"
                  },
                  {
                    "$ref": "#/components/schemas/Buzz-Post-Video"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/Buzz-PostModel"
                          },
                          {
                            "$ref": "#/components/schemas/Buzz-FeedPostModel"
                          }
                        ]
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/buzz/posts/{id}": {
      "get": {
        "tags": [
          "Buzz/Post"
        ],
        "summary": "Get a Post",
        "operationId": "get-a-post",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "detailed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Buzz-PostModel"
                        },
                        {
                          "$ref": "#/components/schemas/Buzz-FeedPostModel"
                        }
                      ]
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Buzz/Post"
        ],
        "summary": "Edit a Post",
        "operationId": "edit-a-post",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "detailed"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "title",
                  "type"
                ],
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Buzz-Post-Text-Edit"
                  },
                  {
                    "$ref": "#/components/schemas/Buzz-Post-Photo-Edit"
                  },
                  {
                    "$ref": "#/components/schemas/Buzz-Post-Video-Edit"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Buzz-PostModel"
                        },
                        {
                          "$ref": "#/components/schemas/Buzz-FeedPostModel"
                        }
                      ]
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/buzz/posts/{id}/shares": {
      "get": {
        "tags": [
          "Buzz/Shares"
        ],
        "summary": "List All Shares of a Post",
        "operationId": "list-all-shares-of-a-post",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": []
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Buzz-ShareModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/buzz/shares": {
      "post": {
        "tags": [
          "Buzz/Shares"
        ],
        "summary": "Share a Post",
        "operationId": "share-a-post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "shareId"
                ],
                "properties": {
                  "text": {
                    "type": "string"
                  },
                  "shareId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Buzz-ShareModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/buzz/shares/{id}": {
      "put": {
        "tags": [
          "Buzz/Shares"
        ],
        "summary": "Edit a Share",
        "operationId": "edit-a-share",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "text": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Buzz-ShareModel"
                        },
                        {
                          "$ref": "#/components/schemas/Buzz-FeedPostModel"
                        }
                      ]
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Buzz/Shares"
        ],
        "summary": "Delete a Share",
        "operationId": "delete-a-share",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "shareId": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/buzz/validation/links": {
      "get": {
        "tags": [
          "Buzz/Validation"
        ],
        "summary": "Validate Video Link",
        "operationId": "validate-video-link",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "link",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "embeddedURL": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/buzz/anniversaries": {
      "get": {
        "tags": [
          "Buzz/Employee Anniversary"
        ],
        "summary": "List Upcoming Employee Anniversaries",
        "operationId": "list-upcoming-employees-anniversaries",
        "parameters": [
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Buzz-EmployeeAnniversaryModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/claim/requests/{requestId}/attachments": {
      "get": {
        "tags": [
          "Claim/Attachments"
        ],
        "summary": "List Attachements on a Claim",
        "operationId": "list-attachments-on-a-claim",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "requestId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": []
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Claim-AttachmentModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Claim/Attachments"
        ],
        "summary": "Add Attachments to a Claim",
        "operationId": "add-attachments-to-a-claim",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "requestId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "attachment"
                ],
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "attachment": {
                    "$ref": "#/components/schemas/Base64Attachment"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Claim-AttachmentModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Claim/Attachments"
        ],
        "summary": "Remove Attachments from a Claim",
        "operationId": "remove-attachments-from-a-claim",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "requestId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/claim/requests/{requestId}/attachments/{id}": {
      "get": {
        "tags": [
          "Claim/Attachments"
        ],
        "summary": "View an Attachment on a Claim",
        "operationId": "view-an-attachment-on-a-claim",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "requestId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Claim-AttachmentModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Claim/Attachments"
        ],
        "summary": "Update an Attachment on a Claim",
        "operationId": "update-an-attachment-on-a-claim",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "requestId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "attachment": {
                    "$ref": "#/components/schemas/Base64Attachment"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Claim-AttachmentModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/claim/events": {
      "get": {
        "tags": [
          "Claim/Events"
        ],
        "summary": "List All Claim Events",
        "operationId": "list-all-claim-events",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "claimEvent.name",
                "claimEvent.status"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eventId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Claim-ClaimEventModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Claim/Events"
        ],
        "summary": "Create a Claim Event",
        "operationId": "create-a-clam-event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "status": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Claim-ClaimEventModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Claim/Events"
        ],
        "summary": "Delete Claim Events",
        "operationId": "delete-claim-events",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/claim/events/{id}": {
      "get": {
        "tags": [
          "Claim/Events"
        ],
        "summary": "Get a Claim Event",
        "operationId": "get-a-claim-event",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Claim-ClaimEventModel"
                    },
                    "meta": {
                      "properties": {
                        "canEdit": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Claim/Events"
        ],
        "summary": "Update a Claim Event",
        "operationId": "update-a-claim-event",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "status": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Claim-ClaimEventModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/claim/requests/{requestId}/expenses": {
      "get": {
        "tags": [
          "Claim/Expenses"
        ],
        "summary": "List All Expenses from a Claim",
        "operationId": "list-all-expenses-from-a-claim",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "requestId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": []
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Claim-ExpenseModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "totalAmount": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Claim/Expenses"
        ],
        "summary": "Add an Expense to a Claim",
        "operationId": "add-an-expense-to-a-claim",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "requestId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "expenseTypeId",
                  "amount",
                  "requestId",
                  "date"
                ],
                "properties": {
                  "expenseTypeId": {
                    "type": "integer"
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "maximum": 9999999999.99,
                    "minimum": 0
                  },
                  "requestId": {
                    "type": "integer"
                  },
                  "note": {
                    "type": "string",
                    "maxLength": 1000
                  },
                  "date": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Claim-ExpenseModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Claim/Expenses"
        ],
        "summary": "Remove an Expense from a Claim",
        "operationId": "remove-an-expense-from-a-claim",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "requestId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/claim/requests/{requestId}/expenses/{id}": {
      "get": {
        "tags": [
          "Claim/Expenses"
        ],
        "summary": "Get an Expense from a Claim",
        "operationId": "get-an-expense-from-a-claim",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "requestId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Claim-ExpenseModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Claim/Expenses"
        ],
        "summary": "Update an Expense from a Claim",
        "operationId": "update-an-expense-from-a-claim",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "requestId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "expenseTypeId": {
                    "type": "integer"
                  },
                  "date": {
                    "type": "string",
                    "format": "date"
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "maximum": 9999999999.99,
                    "minimum": 0
                  },
                  "note": {
                    "type": "string",
                    "maxLength": 1000
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Claim-ExpenseModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/claim/expenses/types": {
      "get": {
        "tags": [
          "Claim/Expense Types"
        ],
        "summary": "List All Expense Types",
        "operationId": "list-all-expense-types",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "expenseType.name",
                "expenseType.status"
              ]
            }
          },
          {
            "name": "expenseTypeId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Claim-ExpenseTypeModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Claim/Expense Types"
        ],
        "summary": "Create an Expense Type",
        "operationId": "create-an-expense-type",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "status": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Claim-ExpenseTypeModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Claim/Expense Types"
        ],
        "summary": "Delete Expense Types",
        "operationId": "delete-expense-types",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/claim/expenses/types/{id}": {
      "get": {
        "tags": [
          "Claim/Expense Types"
        ],
        "summary": "Get an Expense Type",
        "operationId": "get-an-expense-type",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Claim-ExpenseTypeModel"
                    },
                    "meta": {
                      "properties": {
                        "canEdit": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Claim/Expense Types"
        ],
        "summary": "Update an Expense Type",
        "operationId": "update-an-expense-type",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "status": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Claim-ExpenseTypeModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/claim/requests/{requestId}/action": {
      "put": {
        "tags": [
          "Claim/Requests"
        ],
        "summary": "Perform an Action on a Claim Request",
        "operationId": "perform-an-action-on-a-claim-request",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "requestId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Claim-RequestModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/claim/employees/{empNumber}/requests": {
      "post": {
        "tags": [
          "Claim/Requests"
        ],
        "summary": "List an Employee's Claim Requests",
        "operationId": "list-an-employees-claim-requests",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "claimEventId",
                  "currency"
                ],
                "properties": {
                  "claimEventId": {
                    "type": "integer"
                  },
                  "currencyId": {
                    "type": "string"
                  },
                  "remarks": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Claim-RequestModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/claim/employees/requests": {
      "get": {
        "tags": [
          "Claim/Requests"
        ],
        "summary": "List All Claim Requests",
        "operationId": "list-all-claim-requests",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "claimRequest.referenceId",
                "claimRequest.status",
                "claimEvent.name",
                "claimRequest.submittedDate",
                "employee.firstName"
              ]
            }
          },
          {
            "name": "referenceId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "INITIATED",
                "SUBMITTED",
                "APPROVED",
                "REJECTED",
                "CANCELLED",
                "PAID"
              ]
            }
          },
          {
            "name": "eventId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "DateTime"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "DateTime"
            }
          },
          {
            "name": "includeEmployees",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "onlyCurrent",
                "onlyPast",
                "currentAndPast"
              ]
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "summary"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/Claim-EmployeeClaimRequestModel"
                          },
                          {
                            "$ref": "#/components/schemas/Claim-ClaimRequestSummaryModel"
                          }
                        ]
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/claim/employees/{empNumber}/requests/{id}": {
      "get": {
        "tags": [
          "Claim/Requests"
        ],
        "summary": "Get an Employee's Claim Request",
        "operationId": "get-an-employees-claim-request",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Claim Request Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Claim-RequestModel"
                    },
                    "meta": {
                      "properties": {
                        "allowedActions": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "employee": {
                          "properties": {
                            "empNumber": {
                              "type": "integer"
                            },
                            "lastName": {
                              "type": "string"
                            },
                            "firstName": {
                              "type": "string"
                            },
                            "middleName": {
                              "type": "string"
                            },
                            "employeeId": {
                              "type": "string"
                            },
                            "terminationId": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/claim/requests": {
      "get": {
        "tags": [
          "Claim/My Requests"
        ],
        "summary": "List My Claim Requests",
        "operationId": "list-my-claim-requests",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "claimRequest.referenceId",
                "claimRequest.status",
                "claimEvent.name",
                "claimRequest.submittedDate"
              ]
            }
          },
          {
            "name": "referenceId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "INITIATED",
                "SUBMITTED",
                "APPROVED",
                "REJECTED",
                "CANCELLED",
                "PAID"
              ]
            }
          },
          {
            "name": "eventId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "DateTime"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "DateTime"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "summary"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/Claim-MyClaimRequestModel"
                          },
                          {
                            "$ref": "#/components/schemas/Claim-ClaimRequestSummaryModel"
                          }
                        ]
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Claim/My Requests"
        ],
        "summary": "Create My Claim Request",
        "operationId": "create-my-claim-request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "claimEventId",
                  "currency"
                ],
                "properties": {
                  "claimEventId": {
                    "type": "integer"
                  },
                  "currencyId": {
                    "type": "string"
                  },
                  "remarks": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Claim-RequestModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/claim/requests/{id}": {
      "get": {
        "tags": [
          "Claim/My Requests"
        ],
        "summary": "Get My Claim Request",
        "operationId": "get-my-claim-request",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Claim Request Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Claim-RequestModel"
                    },
                    "meta": {
                      "properties": {
                        "allowedActions": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "employee": {
                          "properties": {
                            "empNumber": {
                              "type": "integer"
                            },
                            "lastName": {
                              "type": "string"
                            },
                            "firstName": {
                              "type": "string"
                            },
                            "middleName": {
                              "type": "string"
                            },
                            "employeeId": {
                              "type": "string"
                            },
                            "terminationId": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/oauth-clients": {
      "get": {
        "tags": [
          "OAuth/OAuth Clients"
        ],
        "summary": "List All OAuth Clients",
        "operationId": "list-all-oauth-clients",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "oauthClient.id"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OAuth-OAuthClientModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "OAuth/OAuth Clients"
        ],
        "summary": "Create an OAuth Client",
        "operationId": "create-an-oauth-client",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "redirectUri": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OAuth-OAuthClientModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OAuth/OAuth Clients"
        ],
        "summary": "Delete OAuth Clients",
        "operationId": "delete-oauth-clients",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/admin/oauth-client/{id}": {
      "get": {
        "tags": [
          "OAuth/OAuth Clients"
        ],
        "summary": "Get an OAuth Client",
        "operationId": "get-an-oauth-client",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OAuth-OAuthClientModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "OAuth/OAuth Clients"
        ],
        "summary": "Update an OAuth Client",
        "operationId": "update-an-oauth-client",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "redirectUri": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OAuth-OAuthClientModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/core/about": {
      "get": {
        "tags": [
          "Core/About Organization"
        ],
        "summary": "Get Basic Organization Details",
        "operationId": "get-basic-organization-details",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Core-AboutOrganizationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/core/validation/unique": {
      "get": {
        "tags": [
          "Core/Unique Validation"
        ],
        "summary": "Validate Uniqueness",
        "operationId": "validate-uniqueness",
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "EmailSubscriber",
                "EmploymentStatus",
                "JobCategory",
                "JobTitle",
                "Location",
                "Nationality",
                "PayGrade",
                "Education",
                "Language",
                "License",
                "Membership",
                "Skill",
                "WorkShift",
                "ExpenseType",
                "ClaimEvent",
                "LeaveType",
                "Employee",
                "User",
                "TerminationReason",
                "Vacancy"
              ]
            }
          },
          {
            "name": "attributeName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "email",
                "jobTitleName",
                "name",
                "userName"
              ]
            }
          },
          {
            "name": "entityId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "matchByField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "emailNotification",
                "deleted"
              ]
            }
          },
          {
            "name": "matchByValue",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "valid": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid field name given",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "default": "Entity does not contain one or more of the given fields"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/theme/preview": {
      "post": {
        "tags": [
          "Admin/Theme"
        ],
        "summary": "Preview Theme",
        "operationId": "preview-theme",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "primaryColor",
                  "primaryFontColor",
                  "secondaryColor",
                  "secondaryFontColor",
                  "primaryGradientStartColor",
                  "primaryGradientEndColor"
                ],
                "properties": {
                  "primaryColor": {
                    "type": "string",
                    "example": "#FF7B1D"
                  },
                  "primaryFontColor": {
                    "type": "string",
                    "example": "#FFFFFF"
                  },
                  "secondaryColor": {
                    "type": "string",
                    "example": "#76BC21"
                  },
                  "secondaryFontColor": {
                    "type": "string",
                    "example": "#FFFFFF"
                  },
                  "primaryGradientStartColor": {
                    "type": "string",
                    "example": "#FF920B"
                  },
                  "primaryGradientEndColor": {
                    "type": "string",
                    "example": "#F35C17"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "--oxd-primary-one-color": {
                          "type": "string",
                          "example": "#FF7B1D"
                        },
                        "--oxd-primary-font-color": {
                          "type": "string",
                          "example": "#FFFFFF"
                        },
                        "--oxd-secondary-four-color": {
                          "type": "string",
                          "example": "#76BC21"
                        },
                        "--oxd-secondary-font-color": {
                          "type": "string",
                          "example": "#FFFFFF"
                        },
                        "--oxd-primary-gradient-start-color": {
                          "type": "string",
                          "example": "#FF920B"
                        },
                        "--oxd-primary-gradient-end-color": {
                          "type": "string",
                          "example": "#F35C17"
                        },
                        "--oxd-secondary-gradient-start-color": {
                          "type": "string",
                          "example": "#FF920B"
                        },
                        "--oxd-secondary-gradient-end-color": {
                          "type": "string",
                          "example": "#F35C17"
                        },
                        "--oxd-primary-one-lighten-5-color": {
                          "type": "string",
                          "example": "#ff8a37"
                        },
                        "--oxd-primary-one-lighten-30-color": {
                          "type": "string",
                          "example": "#ffd4b6"
                        },
                        "--oxd-primary-one-darken-5-color": {
                          "type": "string",
                          "example": "#ff6c03"
                        },
                        "--oxd-primary-one-alpha-10-color": {
                          "type": "string",
                          "example": "rgba(255, 123, 29, 0.1)"
                        },
                        "--oxd-primary-one-alpha-15-color": {
                          "type": "string",
                          "example": "rgba(255, 123, 29, 0.15)"
                        },
                        "--oxd-primary-one-alpha-20-color": {
                          "type": "string",
                          "example": "rgba(255, 123, 29, 0.2)"
                        },
                        "--oxd-primary-one-alpha-50-color": {
                          "type": "string",
                          "example": "rgba(255, 123, 29, 0.5)"
                        },
                        "--oxd-secondary-four-lighten-5-color": {
                          "type": "string",
                          "example": "#84d225"
                        },
                        "--oxd-secondary-four-darken-5-color": {
                          "type": "string",
                          "example": "#68a61d"
                        },
                        "--oxd-secondary-four-alpha-10-color": {
                          "type": "string",
                          "example": "rgba(118, 188, 33, 0.1)"
                        },
                        "--oxd-secondary-four-alpha-15-color": {
                          "type": "string",
                          "example": "rgba(118, 188, 33, 0.15)"
                        },
                        "--oxd-secondary-four-alpha-20-color": {
                          "type": "string",
                          "example": "rgba(118, 188, 33, 0.2)"
                        },
                        "--oxd-secondary-four-alpha-50-color": {
                          "type": "string",
                          "example": "rgba(118, 188, 33, 0.5)"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/theme": {
      "get": {
        "tags": [
          "Admin/Theme"
        ],
        "summary": "Get Theme Details",
        "operationId": "get-theme-details",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CorporateBranding-ThemeModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Admin/Theme"
        ],
        "summary": "Edit Theme",
        "operationId": "edit-theme",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "variables": {
                    "required": [
                      "primaryColor",
                      "primaryFontColor",
                      "secondaryColor",
                      "secondaryFontColor",
                      "primaryGradientStartColor",
                      "primaryGradientEndColor"
                    ],
                    "properties": {
                      "primaryColor": {
                        "type": "string",
                        "example": "#FF7B1D"
                      },
                      "primaryFontColor": {
                        "type": "string",
                        "example": "#FFFFFF"
                      },
                      "secondaryColor": {
                        "type": "string",
                        "example": "#76BC21"
                      },
                      "secondaryFontColor": {
                        "type": "string",
                        "example": "#FFFFFF"
                      },
                      "primaryGradientStartColor": {
                        "type": "string",
                        "example": "#FF920B"
                      },
                      "primaryGradientEndColor": {
                        "type": "string",
                        "example": "#F35C17"
                      }
                    },
                    "type": "object"
                  },
                  "showSocialMediaImages": {
                    "type": "boolean",
                    "example": true
                  },
                  "clientLogo": {
                    "$ref": "#/components/schemas/Base64Attachment"
                  },
                  "clientBanner": {
                    "$ref": "#/components/schemas/Base64Attachment"
                  },
                  "loginBanner": {
                    "$ref": "#/components/schemas/Base64Attachment"
                  },
                  "currentClientLogo": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "keepCurrent",
                      "deleteCurrent",
                      "replaceCurrent"
                    ]
                  },
                  "currentClientBanner": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "keepCurrent",
                      "deleteCurrent",
                      "replaceCurrent"
                    ]
                  },
                  "currentLoginBanner": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "keepCurrent",
                      "deleteCurrent",
                      "replaceCurrent"
                    ]
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CorporateBranding-ThemeModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin/Theme"
        ],
        "summary": "Reset Theme",
        "operationId": "reset-theme",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "success": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/directory/employees/{empNumber}": {
      "get": {
        "tags": [
          "Directory/Employees"
        ],
        "summary": "Get an Employee Directory Listing",
        "operationId": "get-an-employee-directory-listing",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "detailed",
                "detailed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/CorporateDirectory-EmployeeDirectoryModel"
                          },
                          {
                            "$ref": "#/components/schemas/CorporateDirectory-EmployeeDirectoryDetailedModel"
                          }
                        ]
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/directory/employees": {
      "get": {
        "tags": [
          "Directory/Employees"
        ],
        "summary": "Get the Employee Directory",
        "operationId": "get-the-employee-directory",
        "parameters": [
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nameOrId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobTitleId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "detailed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/CorporateDirectory-EmployeeDirectoryModel"
                          },
                          {
                            "$ref": "#/components/schemas/CorporateDirectory-EmployeeDirectoryDetailedModel"
                          }
                        ]
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/dashboard/employees/action-summary": {
      "get": {
        "tags": [
          "Dashboard/Widgets"
        ],
        "summary": "Get My Action Summary",
        "operationId": "get-my-action-summary",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": "1"
                    },
                    "group": {
                      "type": "string",
                      "example": "Leave Requests To Approve"
                    },
                    "pendingActionCount": {
                      "type": "integer",
                      "example": "1"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/dashboard/employees/locations": {
      "get": {
        "tags": [
          "Dashboard/Widgets"
        ],
        "summary": "Get Employee Distribution by Location",
        "operationId": "get-employee-distribution-by-location",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Dashboard-LocationModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "otherEmployeeCount": {
                          "type": "integer"
                        },
                        "unassignedEmployeeCount": {
                          "type": "integer"
                        },
                        "totalLocationCount": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/dashboard/employees/subunit": {
      "get": {
        "tags": [
          "Dashboard/Widgets"
        ],
        "summary": "Get Employee Distribution by Sub Unit",
        "operationId": "get-employee-distribution-by-subunit",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Dashboard-SubunitModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "otherEmployeeCount": {
                          "type": "integer"
                        },
                        "unassignedEmployeeCount": {
                          "type": "integer"
                        },
                        "totalSubunitCount": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/dashboard/employees/leaves": {
      "get": {
        "tags": [
          "Dashboard/Widgets"
        ],
        "summary": "Get Employees on Leave Today",
        "operationId": "get-employees-on-leave-today",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "leaveList.date",
                "employee.firstName"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Dashboard-EmployeeOnLeaveListModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "leavePeriodDefined": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/dashboard/config/employee-on-leave-today": {
      "get": {
        "tags": [
          "Dashboard/Widgets"
        ],
        "summary": "Get Employees on Leave Today Configuration",
        "operationId": "get-employees-on-leave-today-configuration",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "showOnlyAccessibleEmployeesOnLeaveToday": {
                      "type": "boolean",
                      "example": "false"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Dashboard/Widgets"
        ],
        "summary": "Configure Employees on Leave Today",
        "operationId": "configure-employees-on-leave-today",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "showOnlyAccessibleEmployeesOnLeaveToday"
                ],
                "properties": {
                  "showOnlyAccessibleEmployeesOnLeaveToday": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "showOnlyAccessibleEmployeesOnLeaveToday": {
                      "type": "boolean",
                      "example": "true"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/dashboard/employees/time-at-work": {
      "get": {
        "tags": [
          "Dashboard/Widgets"
        ],
        "summary": "Get My Time at Work",
        "operationId": "get-my-time-at-work",
        "parameters": [
          {
            "name": "currentDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currentTime",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timezoneOffset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "workDay": {
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "1"
                              },
                              "day": {
                                "type": "string",
                                "example": "Mon"
                              },
                              "date": {
                                "type": "string",
                                "format": "date"
                              }
                            },
                            "type": "object"
                          },
                          "totalTime": {
                            "properties": {
                              "hours": {
                                "type": "integer"
                              },
                              "minutes": {
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "meta": {
                      "properties": {
                        "lastAction": {
                          "properties": {
                            "state": {
                              "type": "string"
                            },
                            "utcDate": {
                              "type": "string",
                              "format": "date"
                            },
                            "utcTime": {
                              "type": "boolean"
                            },
                            "userDate": {
                              "type": "string",
                              "format": "date"
                            },
                            "userTime": {
                              "type": "string"
                            },
                            "timezoneOffset": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "currentDay": {
                          "properties": {
                            "currentDay": {
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "format": "date"
                                },
                                "label": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "totalTime": {
                              "properties": {
                                "hours": {
                                  "type": "integer"
                                },
                                "minutes": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "currentWeek": {
                          "properties": {
                            "startDate": {
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "format": "date"
                                },
                                "label": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "endDate": {
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "format": "date"
                                },
                                "label": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "totalTime": {
                              "properties": {
                                "hours": {
                                  "type": "integer"
                                },
                                "minutes": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "currentUser": {
                          "properties": {
                            "empNumber": {
                              "type": "integer"
                            },
                            "firstName": {
                              "type": "string"
                            },
                            "lastName": {
                              "type": "string"
                            },
                            "middleName": {
                              "type": "string"
                            },
                            "terminationId": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/dashboard/shortcuts": {
      "get": {
        "tags": [
          "Dashboard/Widgets"
        ],
        "summary": "Get Quick Launch Shortcuts",
        "operationId": "get-quick-launch-shortcuts",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "leave.assign_leave": {
                          "type": "boolean",
                          "example": "true"
                        },
                        "leave.leave_list": {
                          "type": "boolean",
                          "example": "true"
                        },
                        "leave.apply_leave": {
                          "type": "boolean",
                          "example": "true"
                        },
                        "leave.my_leave": {
                          "type": "boolean",
                          "example": "true"
                        },
                        "time.employee_timesheet": {
                          "type": "boolean",
                          "example": "true"
                        },
                        "time.my_timesheet": {
                          "type": "boolean",
                          "example": "true"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/ldap-config": {
      "get": {
        "tags": [
          "Admin/LDAP Configuration"
        ],
        "summary": "Get LDAP Configuration",
        "operationId": "get-ldap-configuration",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LDAP-LDAPConfigModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Admin/LDAP Configuration"
        ],
        "summary": "Update LDAP Configuration",
        "operationId": "update-ldap-configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "userLookupSettings",
                  "dataMapping",
                  "mergeLDAPUsersWithExistingSystemUsers",
                  "syncInterval"
                ],
                "properties": {
                  "enable": {
                    "type": "boolean"
                  },
                  "hostname": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "port": {
                    "type": "integer"
                  },
                  "encryption": {
                    "type": "string",
                    "enum": [
                      "none",
                      "tls",
                      "ssl"
                    ]
                  },
                  "ldapImplementation": {
                    "type": "string",
                    "enum": [
                      "OpenLDAP",
                      "ActiveDirectory"
                    ]
                  },
                  "bindAnonymously": {
                    "type": "boolean"
                  },
                  "bindUserDN": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "bindUserPassword": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "userLookupSettings": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "baseDN": {
                          "type": "string",
                          "maxLength": 255
                        },
                        "searchScope": {
                          "type": "string",
                          "enum": [
                            "one",
                            "sub"
                          ]
                        },
                        "userNameAttribute": {
                          "type": "string",
                          "maxLength": 100
                        },
                        "userSearchFilter": {
                          "type": "string",
                          "maxLength": 255
                        },
                        "userUniqueIdAttribute": {
                          "type": "string",
                          "maxLength": 100
                        },
                        "employeeSelectorMapping": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "field": {
                                "type": "string",
                                "enum": [
                                  [
                                    "employeeId",
                                    "workEmail",
                                    "drivingLicenseNo",
                                    "otherId",
                                    "otherEmail",
                                    "ssnNumber",
                                    "sinNumber"
                                  ]
                                ]
                              },
                              "attributeName": {
                                "type": "string",
                                "maxLength": 100
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "dataMapping": {
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "middleName": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "lastName": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "userStatus": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "workEmail": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "employeeId": {
                        "type": "string",
                        "maxLength": 100
                      }
                    },
                    "type": "object"
                  },
                  "mergeLDAPUsersWithExistingSystemUsers": {
                    "type": "boolean"
                  },
                  "syncInterval": {
                    "type": "string",
                    "maximum": 23,
                    "minimum": 1
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LDAP-LDAPConfigModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/ldap-test-connection": {
      "post": {
        "tags": [
          "Admin/LDAP Configuration"
        ],
        "summary": "Test LDAP Connection",
        "operationId": "test-ldap-connection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "hostname": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "port": {
                    "type": "integer"
                  },
                  "encryption": {
                    "type": "string",
                    "enum": [
                      "none",
                      "tls",
                      "ssl"
                    ]
                  },
                  "ldapImplementation": {
                    "type": "string",
                    "enum": [
                      "OpenLDAP",
                      "ActiveDirectory"
                    ]
                  },
                  "bindAnonymously": {
                    "type": "boolean"
                  },
                  "bindUserDN": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "bindUserPassword": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "userLookupSettings": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "baseDN": {
                          "type": "string",
                          "maxLength": 255
                        },
                        "searchScope": {
                          "type": "string",
                          "enum": [
                            "one",
                            "sub"
                          ]
                        },
                        "userNameAttribute": {
                          "type": "string"
                        },
                        "userSearchFilter": {
                          "type": "string",
                          "maxLength": 255
                        },
                        "userUniqueIdAttribute": {
                          "type": "string"
                        },
                        "employeeSelectorMapping": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "dataMapping": {
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "middleName": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "lastName": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "userStatus": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "workEmail": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "employeeId": {
                        "type": "string",
                        "maxLength": 100
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "category": {
                            "type": "string",
                            "example": "Login"
                          },
                          "checks": {
                            "properties": {
                              "label": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admin/ldap/user-sync": {
      "get": {
        "tags": [
          "Admin/LDAP User Sync"
        ],
        "summary": "Get User Sync Details",
        "operationId": "get-user-sync-details",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LDAP-LDAPSyncStatusModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin/LDAP User Sync"
        ],
        "summary": "Sync LDAP User",
        "operationId": "sync-ldap-user",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LDAP-LDAPSyncStatusModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "oneOf": [
                        {
                          "property": "error",
                          "properties": {
                            "status": {
                              "type": "string",
                              "default": "400"
                            },
                            "message": {
                              "type": "string",
                              "default": "LDAP settings not configured"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "property": "error",
                          "properties": {
                            "status": {
                              "type": "string",
                              "default": "400"
                            },
                            "message": {
                              "type": "string",
                              "default": "LDAP sync not enabled"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "property": "error",
                          "properties": {
                            "status": {
                              "type": "string",
                              "default": "400"
                            },
                            "message": {
                              "type": "string",
                              "default": "Please check the settings for your LDAP configuration"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/leave/leaves/bulk": {
      "put": {
        "tags": [
          "Leave/Employee Bulk Leave"
        ],
        "summary": "Bulk Approve/Cancel/Reject Leaves",
        "operationId": "bulk-approve-cancel-reject-leaves",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "leaveId": {
                    "type": "integer"
                  },
                  "action": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeaveModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "example": "Performed action not allowed"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/leave/leave-types/eligible": {
      "get": {
        "tags": [
          "Leave/Eligible Leave"
        ],
        "summary": "Get My Eligible Leave Types",
        "operationId": "get-my-eligible-leave-types",
        "parameters": [
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "includeAllocated",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeaveTypeModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/leave/employees/leave-requests/bulk": {
      "put": {
        "tags": [
          "Leave/Employee Bulk Leave Request"
        ],
        "summary": "Bulk Approve/Cancel/Reject Leave Requests",
        "operationId": "bulk-approve-cancel-reject-leave-requests",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "leaveRequestId": {
                    "type": "integer"
                  },
                  "action": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeaveRequestModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "example": "Leave request has multiple statuses, Performed action not allowed"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/leave/employees/leaves": {
      "get": {
        "tags": [
          "Leave/Employee Leave"
        ],
        "summary": "List All Employee Leaves",
        "operationId": "list-all-employee-leaves",
        "parameters": [
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "includeEmployees",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "onlyCurrent",
                "onlyPast",
                "currentAndPast"
              ]
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "-1 => rejected, 0 => cancelled, 1 => pending, 2 => approved, 3 => taken",
            "required": false,
            "schema": {
              "type": "integer",
              "enum": [
                -1,
                0,
                1,
                2,
                3
              ]
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "leave.date"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Leave-EmployeeLeaveModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/leave/employees/leave-balances": {
      "get": {
        "tags": [
          "Leave/Leave Balance"
        ],
        "summary": "Get an Employee's Leave Balance",
        "operationId": "get-an-employees-leave-balance",
        "parameters": [
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "leaveType.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Leave-EmployeeLeaveBalanceModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/leave/employees/{empNumber}/leave-entitlements": {
      "get": {
        "tags": [
          "Leave/Entitlements"
        ],
        "summary": "Get an Employee's Leave Entitlement",
        "operationId": "get-an-employees-leave-entitlement",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "leaveTypeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "entitlement",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-EmployeeLeaveEntitlementModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/leave/employees/leave-entitlements": {
      "get": {
        "tags": [
          "Leave/Entitlements"
        ],
        "summary": "List an Employee's Leave Entitlements",
        "operationId": "list-an-employees-leave-entitlements",
        "parameters": [
          {
            "name": "leaveTypeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "entitlement",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locationId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "subunitId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "employee.lastName",
                "employee.firstName",
                "employee.middleName",
                "employee.empNumber",
                "employee.employeeId",
                "jobTitle.jobTitleName",
                "empStatus.name",
                "subunit.name",
                "supervisor.firstName"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-BulkLeaveEntitlementMatchingEmployeeModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/leave/employees/leave-requests/{leaveRequestId}": {
      "get": {
        "tags": [
          "Leave/Employee Leave Request"
        ],
        "summary": "Get a Leave Request",
        "operationId": "get-a-leave-request",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "leaveRequestId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "detailed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Leave-LeaveRequestModel"
                        },
                        {
                          "$ref": "#/components/schemas/Leave-LeaveRequestDetailedModel"
                        }
                      ]
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Leave/Employee Leave Request"
        ],
        "summary": "Update a Leave Request",
        "operationId": "update-a-leave-request",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "leaveRequestId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "detailed"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Leave-LeaveRequestModel"
                        },
                        {
                          "$ref": "#/components/schemas/Leave-LeaveRequestDetailedModel"
                        }
                      ]
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "example": "Leave request has multiple statuses, Performed action not allowed"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/leave/employees/leave-requests": {
      "get": {
        "tags": [
          "Leave/Employee Leave Request"
        ],
        "summary": "List All Leave Requests",
        "operationId": "list-all-leave-requests",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "leave.date"
              ]
            }
          },
          {
            "name": "includeEmployees",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "onlyCurrent",
                "onlyPast",
                "currentAndPast"
              ]
            }
          },
          {
            "name": "subunitId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "-1 => rejected, 0 => cancelled, 1 => pending, 2 => approved, 3 => taken",
            "required": false,
            "schema": {
              "type": "integer",
              "enum": [
                -1,
                0,
                1,
                2,
                3
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeaveRequestDetailedModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Leave/Employee Leave Request"
        ],
        "summary": "Create a Leave Request",
        "operationId": "create-a-leave-request",
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "detailed"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "empNumber",
                  "leaveTypeId",
                  "fromDate",
                  "toDate",
                  "duration"
                ],
                "properties": {
                  "empNumber": {
                    "type": "integer"
                  },
                  "leaveTypeId": {
                    "type": "integer"
                  },
                  "fromDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "toDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "partialOption": {
                    "type": "string",
                    "enum": [
                      "none, all, start, end, start_end"
                    ]
                  },
                  "duration": {
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "full_day",
                          "half_day_morning",
                          "half_day_afternoon",
                          "specify_time"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Leave-LeaveRequestModel"
                        },
                        {
                          "$ref": "#/components/schemas/Leave-LeaveRequestDetailedModel"
                        }
                      ]
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/leave/holidays/{id}": {
      "get": {
        "tags": [
          "Leave/Configure"
        ],
        "summary": "Get a Holiday",
        "operationId": "get-a-holiday",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-HolidayModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Leave/Configure"
        ],
        "summary": "Update a Holiday",
        "operationId": "Update a Holiday",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date"
                  },
                  "length": {
                    "description": "0 - working day, 4 - half day",
                    "type": "integer",
                    "enum": [
                      0,
                      4
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "recurring": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-HolidayModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/leave/holidays": {
      "get": {
        "tags": [
          "Leave/Configure"
        ],
        "summary": "List All Holidays",
        "operationId": "list-all-holidays",
        "parameters": [
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "holiday.date"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-HolidayModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Leave/Configure"
        ],
        "summary": "Create a Holiday",
        "operationId": "create-a-holiday",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date"
                  },
                  "length": {
                    "description": "0 - working day, 4 - half day",
                    "type": "integer",
                    "enum": [
                      0,
                      4
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "recurring": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-HolidayModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Leave/Configure"
        ],
        "summary": "Delete Holidays",
        "operationId": "delete-holidays",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/leave/leave-requests/{leaveRequestId}/leaves": {
      "get": {
        "tags": [
          "Leave/Leaves"
        ],
        "summary": "List All Leaves in a Leave Request",
        "operationId": "list-all-leaves-in-a-leave-request",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "leaveRequestId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeaveDetailedModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "employee": {
                          "properties": {
                            "empNumber": {
                              "type": "integer"
                            },
                            "firstName": {
                              "type": "string"
                            },
                            "lastName": {
                              "type": "string"
                            },
                            "middleName": {
                              "type": "string"
                            },
                            "employeeId": {
                              "type": "string"
                            },
                            "terminationId": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "startDate": {
                          "type": "string",
                          "format": "date"
                        },
                        "endDate": {
                          "type": "string",
                          "format": "date"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/leave/leaves/{leaveId}": {
      "put": {
        "tags": [
          "Leave/Leaves"
        ],
        "summary": "Update a Leave",
        "operationId": "update-a-leave",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "leaveId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "APPROVE",
                      "REJECT",
                      "CANCEL"
                    ]
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeaveModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/leave/leave-balance/leave-type/{leaveTypeId}": {
      "get": {
        "tags": [
          "Leave/Leave Balance"
        ],
        "summary": "Get Leave Balance for a Leave Type",
        "operationId": "get-leave-balance-for-a-leave-type",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "leaveTypeId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "empNumber",
            "in": "query",
            "description": "Not needed if getting the leave balance of logged in user",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "balance": {
                            "properties": {
                              "asAtDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "balance": {
                                "type": "integer"
                              },
                              "endDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "entitled": {
                                "type": "integer"
                              },
                              "pending": {
                                "type": "integer"
                              },
                              "scheduled": {
                                "type": "integer"
                              },
                              "taken": {
                                "type": "integer"
                              },
                              "used": {
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "meta": {
                      "properties": {
                        "employee": {
                          "$ref": "#/components/schemas/Pim-EmployeeModel"
                        },
                        "leaveType": {
                          "$ref": "#/components/schemas/Leave-LeaveTypeModel"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/leave/leaves/{leaveId}/leave-comments": {
      "get": {
        "tags": [
          "Leave/Leave Comment"
        ],
        "summary": "List All Comments for a Leave",
        "operationId": "list-all-comments-for-a-leave",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "leaveId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeaveCommentModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Leave/Leave Comment"
        ],
        "summary": "Comment on a Leave",
        "operationId": "comment-on-a-leave",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "leaveId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeaveCommentModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/leave/leave-entitlements/{id}": {
      "get": {
        "tags": [
          "Leave/Entitlements"
        ],
        "summary": "Get a Leave Entitlement",
        "operationId": "get-a-leave-entitlement",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "summary"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Leave-LeaveEntitlementModel"
                        },
                        {
                          "$ref": "#/components/schemas/Leave-LeaveEntitlementSummaryModel"
                        }
                      ]
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Leave/Entitlements"
        ],
        "summary": "Update a Leave Entitlement",
        "operationId": "update-a-leave-entitlement",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "entitlement": {
                    "type": "integer"
                  },
                  "fromDate": {
                    "type": "number"
                  },
                  "toDate": {
                    "type": "number"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeaveEntitlementModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/leave/leave-entitlements": {
      "get": {
        "tags": [
          "Leave/Entitlements"
        ],
        "summary": "List All Leave Entitlements",
        "operationId": "list-all-leave-entitlements",
        "parameters": [
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "leaveTypeId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "leaveTypeDeleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "entitlement.fromDate",
                "leaveType.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "summary"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/Leave-LeaveEntitlementModel"
                          },
                          {
                            "$ref": "#/components/schemas/Leave-LeaveEntitlementSummaryModel"
                          }
                        ]
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "sum": {
                          "type": "number"
                        },
                        "fromDate": {
                          "type": "string"
                        },
                        "toDate": {
                          "type": "string"
                        },
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Leave/Entitlements"
        ],
        "summary": "Assign Leave Entitlements to Employees",
        "operationId": "assign-leave-entitlements-to-employees",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "entitlement",
                  "subunitId",
                  "toDate",
                  "integer"
                ],
                "properties": {
                  "empNumber": {
                    "description": "If not buk assign this is require",
                    "type": "integer"
                  },
                  "entitlement": {
                    "type": "integer"
                  },
                  "fromDate": {
                    "type": "number"
                  },
                  "toDate": {
                    "type": "number"
                  },
                  "leaveTypeId": {
                    "type": "integer"
                  },
                  "bulkAssign": {
                    "type": "boolean"
                  },
                  "locationId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeaveEntitlementModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Leave/Entitlements"
        ],
        "summary": "Delete Leave Entitlements",
        "operationId": "delete-leave-entitlements",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/leave/overlap-leaves": {
      "get": {
        "tags": [
          "Leave/Overlap Leave"
        ],
        "summary": "Get Overlapping Leaves",
        "operationId": "get-overlapping-leaves",
        "parameters": [
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "duration[type]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "full_day, half_day_afternoon"
            }
          },
          {
            "name": "duration[fromTime]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "time"
            }
          },
          {
            "name": "duration[toTime]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "time"
            }
          },
          {
            "name": "endDuration[type]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "full_day",
                "half_day_morning",
                "half_day_afternoon",
                "specify_time"
              ]
            }
          },
          {
            "name": "endDuration[fromTime]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "time"
            }
          },
          {
            "name": "endDuration[toTime]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "time"
            }
          },
          {
            "name": "partialOption",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "all",
                "start",
                "end",
                "start_end"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-OverlapLeaveModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        },
                        "isWorkShiftLengthExceeded": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/leave/leave-period": {
      "get": {
        "tags": [
          "Leave/Configure"
        ],
        "summary": "Get Current Leave Period",
        "operationId": "get-current-leave-period",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeavePeriodHistoryModel"
                    },
                    "meta": {
                      "properties": {
                        "currentLeavePeriod": {
                          "$ref": "#/components/schemas/Leave-LeavePeriodModel"
                        },
                        "leavePeriodDefined": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Leave/Configure"
        ],
        "summary": "Update Leave Period",
        "operationId": "update-leave-period",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "startDay": {
                    "type": "integer"
                  },
                  "startMonth": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeavePeriodHistoryModel"
                    },
                    "meta": {
                      "properties": {
                        "currentLeavePeriod": {
                          "$ref": "#/components/schemas/Leave-LeavePeriodModel"
                        },
                        "leavePeriodDefined": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/leave/leave-periods": {
      "get": {
        "tags": [
          "Leave/Configure"
        ],
        "summary": "List All Leave Periods",
        "operationId": "list-all-leave-periods",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeavePeriodModel"
                    },
                    "meta": {
                      "properties": {
                        "currentLeavePeriod": {
                          "$ref": "#/components/schemas/Leave-LeavePeriodModel"
                        },
                        "leavePeriodDefined": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/leave/reports": {
      "get": {
        "tags": [
          "Leave/Leave Report"
        ],
        "summary": "Get Leave Report",
        "operationId": "get-leave-report",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "employee_leave_entitlements_and_usage",
                "my_leave_entitlements_and_usage",
                "leave_type_leave_entitlements_and_usage"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "headers": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "prop": {
                                  "type": "string"
                                },
                                "size": {
                                  "type": "integer"
                                },
                                "pin": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "cellProperties": {
                                  "properties": {
                                    "class": {
                                      "properties": {
                                        "cell-action": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      }
                    },
                    "meta": {
                      "properties": {
                        "headers": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "filters": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid report name",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "default": "Invalid report name"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/leave/reports/data": {
      "get": {
        "tags": [
          "Leave/Leave Report"
        ],
        "summary": "Get Leave Report Data",
        "operationId": "get-leave-report-data",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "employee_leave_entitlements_and_usage",
                "my_leave_entitlements_and_usage",
                "leave_type_leave_entitlements_and_usage"
              ]
            }
          },
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "includeEmployees",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "onlyCurrent",
                "onlyPast",
                "currentAndPast"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "leaveTypeName": {
                            "type": "string"
                          },
                          "entitlementDays": {
                            "type": "string"
                          },
                          "pendingApprovalDays": {
                            "type": "string"
                          },
                          "scheduledDays": {
                            "type": "string"
                          },
                          "takenDays": {
                            "type": "string"
                          },
                          "balanceDays": {
                            "type": "string"
                          },
                          "leaveTypeDeleted": {
                            "type": "boolean"
                          },
                          "_url": {
                            "properties": {
                              "entitlementDays": {
                                "type": "string"
                              },
                              "pendingApprovalDays": {
                                "type": "string"
                              },
                              "scheduledDays": {
                                "type": "string"
                              },
                              "takenDays": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "employee": {
                          "properties": {
                            "empNumber": {
                              "type": "integer"
                            },
                            "firstName": {
                              "type": "string"
                            },
                            "lastName": {
                              "type": "string"
                            },
                            "middleName": {
                              "type": "string"
                            },
                            "employeeId": {
                              "type": "string"
                            },
                            "terminationId": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid report name",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "default": "Invalid report name"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/leave/leave-requests/{leaveRequestId}/leave-comments": {
      "get": {
        "tags": [
          "Leave/Leave Request Comment"
        ],
        "summary": "List Comments for a Leave Request",
        "operationId": "list-comments-for-a-leave-request",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "leaveRequestId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeaveRequestCommentModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Leave/Leave Request Comment"
        ],
        "summary": "Comment on a Leave Request",
        "operationId": "comment-on-a-leave-request",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "leaveRequestId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "maxLength": 255
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeaveRequestCommentModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/leave/leave-types/{id}": {
      "get": {
        "tags": [
          "Leave/Configure"
        ],
        "summary": "Get a Leave Type",
        "operationId": "get-a-leave-type",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeaveTypeModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Leave/Configure"
        ],
        "summary": "Update a Leave Type",
        "operationId": "update-a-leave-type",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "situational": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeaveTypeModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/leave/leave-types": {
      "get": {
        "tags": [
          "Leave/Configure"
        ],
        "summary": "List All Leave Types",
        "operationId": "list-all-leave-types",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "leaveType.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeaveTypeModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Leave/Configure"
        ],
        "summary": "Create a Leave Type",
        "operationId": "create-a-leave-type",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "situational": {
                    "type": "boolean",
                    "default": "false"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeaveTypeModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Leave/Configure"
        ],
        "summary": "Delete Leave Types",
        "operationId": "delete-leave-types",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/leave/leave-requests/{leaveRequestId}": {
      "get": {
        "tags": [
          "Leave/My Leave"
        ],
        "summary": "Get My Leave Request",
        "operationId": "get-my-leave-request",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "leaveRequestId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "default",
                "detailed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Leave-LeaveRequestDetailedModel"
                        },
                        {
                          "$ref": "#/components/schemas/Leave-LeaveRequestModel"
                        }
                      ]
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Leave/My Leave"
        ],
        "summary": "Update my Leave Request",
        "operationId": "update-my-leave-request",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "leaveRequestId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "default",
                "detailed"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "action"
                ],
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "APPROVE",
                      "REJECT",
                      "CANCEL"
                    ]
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Leave-LeaveRequestDetailedModel"
                        },
                        {
                          "$ref": "#/components/schemas/Leave-LeaveRequestModel"
                        }
                      ]
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "oneOf": [
                        {
                          "properties": {
                            "status": {
                              "type": "string",
                              "default": "400"
                            },
                            "message": {
                              "type": "string",
                              "default": "Performed action not allowed"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "status": {
                              "type": "string",
                              "default": "400"
                            },
                            "message": {
                              "type": "string",
                              "default": "Leave request has multiple statuses"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/leave/leave-requests": {
      "get": {
        "tags": [
          "Leave/My Leave"
        ],
        "summary": "List My Leave Requests",
        "operationId": "list-my-leave-requests",
        "parameters": [
          {
            "name": "leaveTypeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "includeEmployees",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "onlyCurrent",
                "onlyPast",
                "currentAndPast"
              ]
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "-1 => rejected, 0 => cancelled, 1 => pending, 2 => approved, 3 => taken",
            "required": false,
            "schema": {
              "type": "integer",
              "enum": [
                -1,
                0,
                1,
                2,
                3
              ]
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "leave.date"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-LeaveRequestDetailedModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Leave/My Leave"
        ],
        "summary": "Apply for Leave",
        "operationId": "apply-for-leave",
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "default",
                "detailed"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "duration",
                  "fromDate",
                  "toDate",
                  "leaveTypeId"
                ],
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "duration": {
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "full_day",
                          "half_day_afternoon",
                          "half_day_morning",
                          "specify_time"
                        ]
                      },
                      "fromTime": {
                        "description": "used when duration type = specify_time ",
                        "type": "number",
                        "example": "12:00"
                      },
                      "toTime": {
                        "description": "used when duration type = specify_time ",
                        "type": "number",
                        "example": "17:00"
                      }
                    },
                    "type": "object"
                  },
                  "endDuration": {
                    "description": "Used when there are partial days at both the beginning and end",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "full_day",
                          "half_day_afternoon",
                          "half_day_morning",
                          "specify_time"
                        ]
                      },
                      "fromTime": {
                        "description": "used when endDuration type = specify_time ",
                        "type": "number",
                        "example": "12:00"
                      },
                      "toTime": {
                        "description": "used when endDuration type = specify_time ",
                        "type": "number",
                        "example": "17:00"
                      }
                    },
                    "type": "object"
                  },
                  "partialOption": {
                    "type": "string",
                    "example": "start"
                  },
                  "fromDate": {
                    "type": "string"
                  },
                  "toDate": {
                    "type": "string"
                  },
                  "leaveTypeId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Leave-LeaveRequestDetailedModel"
                        },
                        {
                          "$ref": "#/components/schemas/Leave-LeaveRequestModel"
                        }
                      ]
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/leave/leave-entitlements/{id}/validation/entitlements": {
      "get": {
        "tags": [
          "Leave/Validation"
        ],
        "summary": "Validate Leave Entitlement",
        "operationId": "validate-leave-entitlement",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "entitlement",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "valid": {
                            "type": "boolean"
                          },
                          "daysUsed": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/leave/workweek": {
      "get": {
        "tags": [
          "Leave/Configure"
        ],
        "summary": "Get Work Week",
        "operationId": "get-work-week",
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "indexed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Leave-WorkWeekIndexedModel"
                        },
                        {
                          "$ref": "#/components/schemas/Leave-WorkWeekModel"
                        }
                      ]
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Leave/Configure"
        ],
        "summary": "Update Work Week",
        "operationId": "update-work-week",
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "indexed"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "0 - working day, 4 - half day, 8 - non working day",
                "required": [
                  "monday",
                  "tuesday",
                  "wednesday",
                  "thursday",
                  "friday",
                  "saturday",
                  "sunday"
                ],
                "properties": {
                  "monday": {
                    "type": "integer"
                  },
                  "tuesday": {
                    "type": "integer"
                  },
                  "wednesday": {
                    "type": "integer"
                  },
                  "thursday": {
                    "type": "integer"
                  },
                  "friday": {
                    "type": "integer"
                  },
                  "saturday": {
                    "type": "integer"
                  },
                  "sunday": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Leave-WorkWeekIndexedModel"
                        },
                        {
                          "$ref": "#/components/schemas/Leave-WorkWeekModel"
                        }
                      ]
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/maintenance/candidates/purge": {
      "delete": {
        "tags": [
          "Maintenance/Purge Candidate"
        ],
        "summary": "Purge Candidate",
        "operationId": "purge-candidate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "vacancyId"
                ],
                "properties": {
                  "vacancyId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Maintenance-PurgeCandidateModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/maintenance/candidates": {
      "get": {
        "tags": [
          "Maintenance/Purge Candidate"
        ],
        "summary": "List Purgeable Candidates for a Vacancy",
        "operationId": "list-purgeable-candidates-for-a-vacancy",
        "parameters": [
          {
            "name": "vacancyId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "vacancy.name",
                "candidate.lastName",
                "hiringManager.lastName",
                "candidate.dateOfApplication",
                "candidateVacancy.status"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Maintenance-PurgeCandidateListModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/maintenance/purge": {
      "delete": {
        "tags": [
          "Maintenance/Purge Employee"
        ],
        "summary": "Purge Employee",
        "operationId": "purge-employee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "empNumber"
                ],
                "properties": {
                  "empNumber": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Maintenance-PurgeEmployeeModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/mobile/menus": {
      "get": {
        "tags": [
          "Mobile/Menu Items"
        ],
        "summary": "List Mobile Menu Items",
        "operationId": "list-mobile-menu-items",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "children": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "name": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "example": "name: Apply Leave"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "meta": {
                      "properties": {
                        "isLeavePeriodDefined": {
                          "type": "boolean"
                        },
                        "isTimesheetPeriodDefined": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/performance/reviews/{reviewId}/evaluation/employee": {
      "get": {
        "tags": [
          "Performance/Review Evaluation by Employee"
        ],
        "summary": "Get the Employee's Evaluation in a Review",
        "operationId": "get-the-employees-evaluation-in-a-review",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "reviewId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": []
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Performance-ReviewerRatingModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "generalComment": {
                          "type": "string"
                        },
                        "kpis": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Performance-KpiSummaryModel"
                          }
                        },
                        "reviewer": {
                          "$ref": "#/components/schemas/Performance-KpiSummaryModel"
                        },
                        "allowedActions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Core-WorkflowStateModel"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Performance/Review Evaluation by Employee"
        ],
        "summary": "Update the Employee's Evaluation in a Review",
        "operationId": "update-the-employees-evaluation-in-a-review",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "reviewId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "reviewers",
                  "complete"
                ],
                "properties": {
                  "reviewers": {
                    "type": "array",
                    "items": {
                      "required": [
                        "id",
                        "rating",
                        "comment"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "rating": {
                          "type": "number"
                        },
                        "comment": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "generalComment": {
                    "type": "string"
                  },
                  "complete": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Performance-ReviewerRatingModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/performance/employees/trackers": {
      "get": {
        "tags": [
          "Performance/Trackers"
        ],
        "summary": "List All Employee Trackers",
        "operationId": "list-all-employee-trackers",
        "parameters": [
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "tracker.trackerName",
                "employee.lastName",
                "tracker.addedDate",
                "tracker.modifiedDate"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Performance-EmployeeTrackerModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/performance/employees/trackers/{id}": {
      "get": {
        "tags": [
          "Performance/Trackers"
        ],
        "summary": "Get an Employee Tracker",
        "operationId": "get-an-employee-tracker",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Performance-PerformanceTrackerModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/performance/kpis/{id}": {
      "get": {
        "tags": [
          "Performance/KPI Configuration"
        ],
        "summary": "Get a KPI",
        "operationId": "get-a-kpi",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Performance-KpiModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Performance/KPI Configuration"
        ],
        "summary": "Update a KPI",
        "operationId": "update-a-kpi",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "title",
                  "jobTitleId",
                  "minRating",
                  "maxRating"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "jobTitleId": {
                    "description": "Should be an existing Job title Id",
                    "type": "integer"
                  },
                  "minRating": {
                    "type": "integer"
                  },
                  "maxRating": {
                    "type": "integer"
                  },
                  "isDefault": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Performance-KpiModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/performance/kpis": {
      "get": {
        "tags": [
          "Performance/KPI Configuration"
        ],
        "summary": "List All KPIs",
        "operationId": "list-all-kpis",
        "parameters": [
          {
            "name": "jobTitleId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "kpi.title",
                "jobTitle.jobTitleName"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Performance-KpiModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Performance/KPI Configuration"
        ],
        "summary": "Create a KPI",
        "operationId": "create-a-kpi",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "title",
                  "jobTitleId",
                  "minRating",
                  "maxRating"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "jobTitleId": {
                    "description": "Should be an existing Job title Id",
                    "type": "integer"
                  },
                  "minRating": {
                    "type": "integer"
                  },
                  "maxRating": {
                    "type": "integer"
                  },
                  "isDefault": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Performance-KpiModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Performance/KPI Configuration"
        ],
        "summary": "Delete KPIs",
        "operationId": "delete-kpis",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/performance/reviews": {
      "get": {
        "tags": [
          "Performance/Reviews"
        ],
        "summary": "List My Reviews",
        "operationId": "list-my-reviews",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "performanceReview.statusId",
                "performanceReview.reviewPeriodStart",
                "performanceReview.dueDate",
                "reviewer.status"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Performance-DetailedPerformanceReviewModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/performance/trackers}": {
      "get": {
        "tags": [
          "Performance/Trackers"
        ],
        "summary": "List My Performance Trackers",
        "operationId": "list-my-performance-trackers",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "performanceTracker.trackerName",
                "performanceTracker.addedDate",
                "employee.empNumber",
                "employee.lastName",
                "performanceTracker.modifiedDate"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Performance-PerformanceTrackerModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/performance/manage/reviews": {
      "get": {
        "tags": [
          "Performance/Review Configuration"
        ],
        "summary": "List All Performance Reviews",
        "operationId": "list-all-performance-reviews",
        "parameters": [
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "jobTitleId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "statusId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "reviewerEmpNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "includeEmployees",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "onlyCurrent",
                "onlyPast",
                "currentAndPast"
              ]
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "employee.lastName",
                "performanceReview.reviewPeriodStart",
                "performanceReview.dueDate",
                "performanceReview.statusId",
                "jobTitle.jobTitleName",
                "reviewerEmployee.lastName"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Performance-PerformanceReviewModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Performance/Review Configuration"
        ],
        "summary": "Create a Performance Review",
        "operationId": "create-a-performance-review",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "empNumber",
                  "reviewerEmpNumber",
                  "startDate",
                  "endDate",
                  "dueDate"
                ],
                "properties": {
                  "empNumber": {
                    "type": "integer"
                  },
                  "reviewerEmpNumber": {
                    "type": "integer"
                  },
                  "startDate": {
                    "type": "number"
                  },
                  "endDate": {
                    "type": "number"
                  },
                  "dueDate": {
                    "type": "number"
                  },
                  "activate": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Performance-PerformanceReviewModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Performance/Review Configuration"
        ],
        "summary": "Delete Performance Reviews",
        "operationId": "delete-performance-reviews",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/performance/manage/reviews/{id}": {
      "get": {
        "tags": [
          "Performance/Review Configuration"
        ],
        "summary": "Get a Performance Review",
        "operationId": "get-a-performance-review",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Performance-PerformanceReviewModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Performance/Review Configuration"
        ],
        "summary": "Update a Performance Review",
        "operationId": "update-a-performance-review",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "empNumber",
                  "reviewerEmpNumber",
                  "startDate",
                  "endDate",
                  "dueDate"
                ],
                "properties": {
                  "empNumber": {
                    "type": "integer"
                  },
                  "reviewerEmpNumber": {
                    "type": "integer"
                  },
                  "startDate": {
                    "type": "number"
                  },
                  "endDate": {
                    "type": "number"
                  },
                  "dueDate": {
                    "type": "number"
                  },
                  "activate": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Performance-PerformanceReviewModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/performance/reviews/{reviewId}/actions/allowed": {
      "get": {
        "tags": [
          "Performance/Reviews"
        ],
        "summary": "Get Allowed Actions for Review",
        "operationId": "get-allowed-actions-for-review",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "reviewId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "label": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "example": "id: 1, label: Save "
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/performance/reviews/{reviewId}/evaluation/final": {
      "get": {
        "tags": [
          "Performance/Review Evaluation"
        ],
        "summary": "Get a Finalized Performance Review",
        "operationId": "get-a-finalized-performance-revew",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "reviewId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Performance-CompletedPerformanceReviewModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Performance/Review Evaluation"
        ],
        "summary": "Finalize Performance Review",
        "operationId": "finalize-performance-review",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "reviewId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "finalRating",
                  "completedDate",
                  "finalComment",
                  "complete"
                ],
                "properties": {
                  "finalRating": {
                    "type": "string"
                  },
                  "completedDate": {
                    "type": "number"
                  },
                  "finalComment": {
                    "type": "string"
                  },
                  "complete": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Performance-ReviewerRatingModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/performance/config/trackers": {
      "get": {
        "tags": [
          "Performance/Tracker Configuration"
        ],
        "summary": "List All Performance Trackers",
        "operationId": "list-all-performance-trackers",
        "parameters": [
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "performanceTracker.trackerName",
                "performanceTracker.addedDate",
                "employee.empNumber",
                "employee.lastName",
                "performanceTracker.modifiedDate"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Performance-PerformanceTrackerModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Performance/Tracker Configuration"
        ],
        "summary": "Create a Performance Tracker",
        "operationId": "create-a-performance-tracker",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "trackerName",
                  "empNumber",
                  "reviewers"
                ],
                "properties": {
                  "trackerName": {
                    "type": "string"
                  },
                  "empNumber": {
                    "description": "Should be an existing EMployee Id",
                    "type": "integer"
                  },
                  "reviewers": {
                    "type": "array",
                    "items": {
                      "description": "Should be an existing EMployee Id",
                      "type": "integer"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Performance-DetailedPerformanceTrackerModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Performance/Tracker Configuration"
        ],
        "summary": "Delete Performance Trackers",
        "operationId": "delete-performance-trackers",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/performance/config/trackers/{id}": {
      "get": {
        "tags": [
          "Performance/Tracker Configuration"
        ],
        "summary": "Get a Performance Tracker",
        "operationId": "get-a-performance-tracker",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Performance-DetailedPerformanceTrackerModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Performance/Tracker Configuration"
        ],
        "summary": "Update a Performance Tracker",
        "operationId": "update-a-performance-tracker",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "trackerName",
                  "empNumber",
                  "reviewers"
                ],
                "properties": {
                  "trackerName": {
                    "type": "string"
                  },
                  "empNumber": {
                    "description": "Should be an existing EMployee Id",
                    "type": "integer"
                  },
                  "reviewers": {
                    "type": "array",
                    "items": {
                      "description": "Should be an existing EMployee Id",
                      "type": "integer"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Performance-DetailedPerformanceTrackerModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/performance/trackers/{trackerId}/logs": {
      "get": {
        "tags": [
          "Performance/Tracker Logs"
        ],
        "summary": "List Logs for a Performance Tracker",
        "operationId": "list-logs-for-a-performance-tracker",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "trackerId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ptrLog.addedDate"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Performance-PerformanceTrackerLogModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "positive": {
                          "type": "integer"
                        },
                        "negative": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Performance/Tracker Logs"
        ],
        "summary": "Create a Log for a Performance Tracker",
        "operationId": "create-a-log-for-a-performance-tracker",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "trackerId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "achievement",
                  "comment",
                  "log"
                ],
                "properties": {
                  "achievement": {
                    "description": "Should be either 1 for postive and 2 for egative",
                    "type": "integer",
                    "default": 1
                  },
                  "comment": {
                    "type": "string"
                  },
                  "log": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Performance-PerformanceTrackerLogModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Performance/Tracker Logs"
        ],
        "summary": "Remove Logs from a Performance Tracker",
        "operationId": "remove-logs-from-a-performance-tracker",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "trackerId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/performance/trackers/{trackerId}/logs/{id}": {
      "get": {
        "tags": [
          "Performance/Tracker Logs"
        ],
        "summary": "Get a Log from a Performance Tracker",
        "operationId": "get-a-log-from-a-performance-tracker",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "trackerId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Performance-PerformanceTrackerLogModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Performance/Tracker Logs"
        ],
        "summary": "Update a Log from a Performance Tracker",
        "operationId": "update-a-log-from-a-performance-tracker",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "trackerId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "achievement",
                  "comment",
                  "log"
                ],
                "properties": {
                  "achievement": {
                    "description": "Should be either 1 for postive and 2 for egative",
                    "type": "integer",
                    "default": 1
                  },
                  "comment": {
                    "type": "string"
                  },
                  "log": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Performance-PerformanceTrackerLogModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/performance/trackers/reviewers": {
      "get": {
        "tags": [
          "Performance/Tracker Configuration"
        ],
        "summary": "List All Available Tracker Reviewers",
        "operationId": "list-all-available-employees",
        "parameters": [
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The Id of the employee selected - this employee will be excluded from available reviewers",
              "type": "string"
            }
          },
          {
            "name": "nameOrId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeEmployees",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "onlyCurrent",
                "currentAndPast",
                "onlyPast"
              ]
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "employee.lastName",
                "employee.firstName",
                "employee.middleName",
                "employee.empNumber",
                "employee.employeeId",
                "jobTitle.jobTitleName",
                "empStatus.name",
                "subunit.name",
                "supervisor.firstName"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pim-EmployeeModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/performance/supervisors": {
      "get": {
        "tags": [
          "Performance/Review Configuration"
        ],
        "summary": "List an Employee's Supervisors",
        "operationId": "list-an-employees-supervisors",
        "parameters": [
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The Id of the employee selected - The supervisors for this employee will be returned",
              "type": "integer"
            }
          },
          {
            "name": "nameOrId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "employee.empNumber"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Performance-SupervisorModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/performance/reviews/{reviewId}/kpis": {
      "get": {
        "tags": [
          "Performance/Review Evaluation"
        ],
        "summary": "List KPIs for a Review",
        "operationId": "list-kpis-for-a-review",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "reviewId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "kpi.title"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Performance-KpiSummaryModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/performance/employees/reviews": {
      "get": {
        "tags": [
          "Performance/Reviews"
        ],
        "summary": "List All Reviews",
        "operationId": "list-all-reviews",
        "parameters": [
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "jobTitleId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "statusId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "subunitId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "includeEmployees",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "onlyCurrent",
                "onlyPast",
                "currentAndPast"
              ]
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "employee.lastName",
                "performanceReview.reviewPeriodStart",
                "performanceReview.dueDate",
                "performanceReview.statusId"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Performance-PerformanceReviewModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/performance/reviews/{reviewId}/evaluation/supervisor": {
      "get": {
        "tags": [
          "Performance/Review Evaluation by Supervisor"
        ],
        "summary": "Get the Supervisor's Evaluation in a Review",
        "operationId": "get-the-supervisors-evaluation-in-a-review",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "reviewId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": []
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Performance-ReviewerRatingModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "generalComment": {
                          "type": "string"
                        },
                        "kpis": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Performance-KpiSummaryModel"
                          }
                        },
                        "reviewer": {
                          "$ref": "#/components/schemas/Performance-KpiSummaryModel"
                        },
                        "allowedActions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Core-WorkflowStateModel"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Performance/Review Evaluation by Supervisor"
        ],
        "summary": "Update the Supervisor's Evaluation in a Review",
        "operationId": "update-the-supervisors-evaluation-in-a-review",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "reviewId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "reviewers"
                ],
                "properties": {
                  "reviewers": {
                    "type": "array",
                    "items": {
                      "required": [
                        "id",
                        "rating",
                        "comment"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "rating": {
                          "type": "number"
                        },
                        "comment": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "generalComment": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Performance-ReviewerRatingModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/custom-fields/{id}": {
      "get": {
        "tags": [
          "PIM/Custom Field"
        ],
        "summary": "Get a Custom Field",
        "operationId": "get-a-custom-field",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-CustomFieldModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Custom Field"
        ],
        "summary": "Update a Custom Field",
        "operationId": "update-a-custom-field",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "fieldName": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "fieldType": {
                    "type": "integer",
                    "maxLength": 11,
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "screen": {
                    "type": "string",
                    "maxLength": 100,
                    "enum": [
                      "personal",
                      "contact",
                      "emergency",
                      "dependents",
                      "immigration",
                      "qualifications",
                      "tax",
                      "salary",
                      "job",
                      "report-to",
                      "membership"
                    ]
                  },
                  "extraData": {
                    "type": "string",
                    "maxLength": 250
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Leave-HolidayModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "default": "Bad Request"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pim/custom-fields": {
      "get": {
        "tags": [
          "PIM/Custom Field"
        ],
        "summary": "List All Custom Fields",
        "operationId": "list-all-custom-fields",
        "parameters": [
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "cf.name",
                "cf.screen",
                "cf.type"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-CustomFieldModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "post": {
        "tags": [
          "PIM/Custom Field"
        ],
        "summary": "Create a Custom Field",
        "operationId": "create-a-custom-field",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "fieldName": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "fieldType": {
                    "type": "integer",
                    "maxLength": 11,
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "screen": {
                    "type": "string",
                    "maxLength": 100,
                    "enum": [
                      "personal",
                      "contact",
                      "emergency",
                      "dependents",
                      "immigration",
                      "qualifications",
                      "tax",
                      "salary",
                      "job",
                      "report-to",
                      "membership"
                    ]
                  },
                  "extraData": {
                    "type": "string",
                    "maxLength": 250
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-CustomFieldModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Custom Field"
        ],
        "summary": "Delete Custom Fields",
        "operationId": "delete-custom-fields",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/emergency-contacts": {
      "get": {
        "tags": [
          "PIM/Employee Emergency Contact"
        ],
        "summary": "List an Employee's Emergency Contacts",
        "operationId": "list-an-employees-emergency-contacts",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "eec.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmpEmergencyContactModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "post": {
        "tags": [
          "PIM/Employee Emergency Contact"
        ],
        "summary": "Add an Emergnency Contact to an Employee",
        "operationId": "add-an-emergency-contact-to-an-employee",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "relationship",
                  "homePhone",
                  "officePhone",
                  "mobilePhone"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "relationship": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "homePhone": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "officePhone": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "mobilePhone": {
                    "type": "string",
                    "maxLength": 30
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmpEmergencyContactModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Employee Emergency Contact"
        ],
        "summary": "Delete an Employee's Emergency Contacts",
        "operationId": "delete-an-employees-emergency-contacts",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/emergency-contacts/{id}": {
      "get": {
        "tags": [
          "PIM/Employee Emergency Contact"
        ],
        "summary": "Get an Employee's Emergency Contact",
        "operationId": "get-an-employees-emergency-contact",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmpEmergencyContactModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Emergency Contact"
        ],
        "summary": "Update an Employee's Emergency Contact",
        "operationId": "update-an-employees-emergency-contact",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "relationship": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "homePhone": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "officePhone": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "mobilePhone": {
                    "type": "string",
                    "maxLength": 30
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmpEmergencyContactModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/tax-exemption": {
      "get": {
        "tags": [
          "PIM/Employee US Tax Exemption"
        ],
        "summary": "Get an Employee's US Tax Exemption Details",
        "operationId": "get-an-employees-us-tax-expemption-details",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmpUsTaxExemptionModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee US Tax Exemption"
        ],
        "summary": "Update an Employee's US Tax Exemption Details",
        "operationId": "update-an-employees-us-tax-exemption-details",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "federalStatus": {
                    "type": "string"
                  },
                  "federalExemptions": {
                    "type": "integer"
                  },
                  "taxStateCode": {
                    "type": "string"
                  },
                  "stateStatus": {
                    "type": "string"
                  },
                  "stateExemptions": {
                    "type": "integer"
                  },
                  "unemploymentStateCode": {
                    "type": "string"
                  },
                  "workStateCode": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmpUsTaxExemptionModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}": {
      "get": {
        "tags": [
          "PIM/Employee"
        ],
        "summary": "Get an Employee",
        "operationId": "get-an-employee",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "detailed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Pim-EmployeeModel"
                        },
                        {
                          "$ref": "#/components/schemas/Pim-EmployeeDetailedModel"
                        }
                      ]
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/employees": {
      "get": {
        "tags": [
          "PIM/Employee"
        ],
        "summary": "List All Employees",
        "operationId": "list-all-employees",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "name": "nameOrId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "name": "employeeId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maxLength": 10
            }
          },
          {
            "name": "jobTitleId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "subunitId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "empStatusId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "includeEmployees",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "enum": [
                {
                  "1": "onlyCurrent",
                  "2": "currentAndPast",
                  "3": "onlyPast"
                }
              ]
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "detailed"
              ]
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "employee.lastName",
                "employee.firstName",
                "employee.middleName",
                "employee.empNumber",
                "employee.employeeId",
                "jobTitle.jobTitleName",
                "empStatus.name",
                "subunit.name",
                "supervisor.firstName"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Pim-EmployeeModel"
                        },
                        {
                          "$ref": "#/components/schemas/Pim-EmployeeDetailedModel"
                        }
                      ]
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PIM/Employee"
        ],
        "summary": "Create an Employee",
        "operationId": "create-an-employee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "firstName",
                  "lastName"
                ],
                "properties": {
                  "empNumber": {
                    "type": "integer"
                  },
                  "lastName": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "firstName": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "middleName": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "employeeId": {
                    "type": "string",
                    "maxLength": 10
                  },
                  "empPicture": {
                    "$ref": "#/components/schemas/Base64Attachment"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "example": "Logged in User Not Allowed to Create an Employee"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Employee"
        ],
        "summary": "Delete Employees",
        "operationId": "delete-employees",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          },
          "400": {
            "description": "Bad Request - Employees not accessible",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "messsage": {
                          "type": "string",
                          "default": "Employees not accessible"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/languages/allowed": {
      "get": {
        "tags": [
          "PIM/Employee Language"
        ],
        "summary": "List Allowed Languages for an Employee",
        "operationId": "list-allowed-languages-for-an-employee",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "l.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeAllowedLanguageModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/licenses/allowed": {
      "get": {
        "tags": [
          "PIM/Employee License"
        ],
        "summary": "List ALlowed Licenses for an Employee",
        "operationId": "list-allowed-licenses-for-an-employee",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/report-to/allowed": {
      "get": {
        "tags": [
          "PIM/Employee Report To"
        ],
        "summary": "List Available Employees",
        "operationId": "list-available-employees",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nameOrId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "employee.lastName",
                "employee.firstName",
                "employee.middleName",
                "employee.empNumber",
                "employee.employeeId",
                "jobTitle.jobTitleName",
                "empStatus.name",
                "subunit.name",
                "supervisor.firstName"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeAllowedReportToEmployeeModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/skills/allowed": {
      "get": {
        "tags": [
          "PIM/Employee Skill"
        ],
        "summary": "List Alowed Skills for an Employee",
        "operationId": "list-allowed-skills-for-an-employee",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nameOrId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "s.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeAllowedSkillModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/screen/{screen}/attachments/{id}": {
      "get": {
        "tags": [
          "PIM/Employee Attachment"
        ],
        "summary": "Get an Employee's Attachment on a Screen",
        "operationId": "get-an-employees-attachment-on-a-screen",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "screen",
            "schema": {
              "type": "string",
              "enum": [
                "personal",
                "contact",
                "emergency",
                "dependents",
                "immigration",
                "qualifications",
                "tax",
                "salary",
                "job",
                "report-to",
                "membership"
              ]
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeAttachmentModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        },
                        "screen": {
                          "type": "string",
                          "example": "personal"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Attachment"
        ],
        "summary": "Update an Employee's Attachment on a Screen",
        "operationId": "update-an-employees-attachment-on-a-screen",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "screen",
            "schema": {
              "type": "string",
              "enum": [
                "personal",
                "contact",
                "emergency",
                "dependents",
                "immigration",
                "qualifications",
                "tax",
                "salary",
                "job",
                "report-to",
                "membership"
              ]
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "attachment": {
                    "$ref": "#/components/schemas/Base64Attachment"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeAttachmentModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/screen/{screen}/attachments": {
      "get": {
        "tags": [
          "PIM/Employee Attachment"
        ],
        "summary": "List an Employee's Attachments on a Screen",
        "operationId": "list-an-employees-attachments-on-a-screen",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "screen",
            "schema": {
              "type": "string",
              "enum": [
                "personal",
                "contact",
                "emergency",
                "dependents",
                "immigration",
                "qualifications",
                "tax",
                "salary",
                "job",
                "report-to",
                "membership"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeAttachmentModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        },
                        "screen": {
                          "type": "string",
                          "example": "personal"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PIM/Employee Attachment"
        ],
        "summary": "Add an Attachment to an Employee on a Screen",
        "operationId": "add-an-attachment-to-an-employee-on-a-screen",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "screen",
            "schema": {
              "type": "string",
              "enum": [
                "personal",
                "contact",
                "emergency",
                "dependents",
                "immigration",
                "qualifications",
                "tax",
                "salary",
                "job",
                "report-to",
                "membership"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "attachment": {
                    "$ref": "#/components/schemas/Base64Attachment"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeAttachmentModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        },
                        "screen": {
                          "type": "string",
                          "enum": [
                            "personal",
                            "contact",
                            "emergency",
                            "dependents",
                            "immigration",
                            "qualifications",
                            "tax",
                            "salary",
                            "job",
                            "report-to",
                            "membership"
                          ]
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Employee Attachment"
        ],
        "summary": "Delete an Employee's Attachments on a Screen",
        "operationId": "delete-an-employees-attachments-on-a-screen",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "screen",
            "schema": {
              "type": "string",
              "enum": [
                "personal",
                "contact",
                "emergency",
                "dependents",
                "immigration",
                "qualifications",
                "tax",
                "salary",
                "job",
                "report-to",
                "membership"
              ]
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/pim/csv-import": {
      "post": {
        "tags": [
          "PIM/Employee CSV Import"
        ],
        "summary": "Import Employee Records",
        "operationId": "import-employee-records",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "attachment"
                ],
                "properties": {
                  "attachment": {
                    "$ref": "#/components/schemas/Base64Attachment"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "failed": {
                          "type": "integer"
                        },
                        "failedRows": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "success": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pim/employee/{empNumber}/contact-details": {
      "get": {
        "tags": [
          "PIM/Employee Contact Details"
        ],
        "summary": "Get an Employee's Contact Details",
        "operationId": "get-an-employees-contact-details",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeContactDetailsModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Contact Details"
        ],
        "summary": "Update an Employee's Contact Details",
        "operationId": "update-an-employees-contact-details",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "street1": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "street2": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "province": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "zipCode": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "countryCode": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "homeTelephone": {
                    "type": "string",
                    "maxLength": 25
                  },
                  "workTelephone": {
                    "type": "string",
                    "maxLength": 25
                  },
                  "mobile": {
                    "type": "string",
                    "maxLength": 25
                  },
                  "workEmail": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "otherEmail": {
                    "type": "string",
                    "maxLength": 50
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeContactDetailsModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/employees/count": {
      "get": {
        "tags": [
          "PIM/Employee Count"
        ],
        "summary": "Get the Number of Employees",
        "operationId": "get-the-number-of-employees",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "name": "nameOrId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "name": "employeeId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maxLength": 10
            }
          },
          {
            "name": "jobTitleId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "subunitId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "empStatusId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locationId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "includeEmployees",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "onlyCurrent",
                "currentAndPast",
                "onlyPast"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeAttachmentModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        },
                        "screen": {
                          "type": "string",
                          "example": "personal"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/custom-fields": {
      "get": {
        "tags": [
          "PIM/Employee Custom Field"
        ],
        "summary": "List an Employee's Custom Fields",
        "operationId": "list-an-employees-custom-fields",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "screen",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "enum": [
                "personal",
                "contact",
                "emergency",
                "dependents",
                "immigration",
                "qualifications",
                "tax",
                "salary",
                "job",
                "report-to",
                "membership"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": true
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Pim-CustomFieldModel"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Custom Field"
        ],
        "summary": "Update an Employee's Custom Fields",
        "operationId": "update-an-employees-custom-fields",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true
              },
              "example": {
                "custom1": "Field1",
                "custom2": "Field2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": true
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Pim-CustomFieldModel"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/dependents/{id}": {
      "get": {
        "tags": [
          "PIM/Employee Dependent"
        ],
        "summary": "Get an Employee's Dependent",
        "operationId": "get-an-employees-dependent",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeDependentModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Dependent"
        ],
        "summary": "Update an Employee's Dependent",
        "operationId": "update-an-employees-dependent",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "relationshipType": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "relationship": {
                    "type": "string"
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeDependentModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/dependents": {
      "get": {
        "tags": [
          "PIM/Employee Dependent"
        ],
        "summary": "List an Employee's Dependents",
        "operationId": "list-an-employees-dependents",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relationshipType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": [
                "child"
              ]
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "d.name",
                "d.relationshipType"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeDependentModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PIM/Employee Dependent"
        ],
        "summary": "Add a Dependent to an Employee",
        "operationId": "add-a-dependent-to-an-employee",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "relationshipType"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "relationshipType": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "relationship": {
                    "type": "string"
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeDependentModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Employee Dependent"
        ],
        "summary": "Delete an Employee's Dependents",
        "operationId": "delete-an-employees-dependents",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/educations/{id}": {
      "get": {
        "tags": [
          "PIM/Employee Education"
        ],
        "summary": "Get an Employee's Educational Qualification",
        "operationId": "get-an-employees-educational-qualification",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeEducationModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Education"
        ],
        "summary": "Update an Employee's Educational Qualification",
        "operationId": "update-an-employees-educational-qualification",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "educationId"
                ],
                "properties": {
                  "educationId": {
                    "type": "integer"
                  },
                  "institute": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "major": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "year": {
                    "type": "integer",
                    "maxLength": 4
                  },
                  "score": {
                    "type": "string",
                    "maxLength": 25
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeEducationModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/educations": {
      "get": {
        "tags": [
          "PIM/Employee Education"
        ],
        "summary": "List an Employee's Educational Qualifications",
        "operationId": "list-an-employees-educational-qualifications",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "e.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeEducationModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PIM/Employee Education"
        ],
        "summary": "Add an Educational Qualification to an Employee",
        "operationId": "add-an-educational-qualification-to-an-employee",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "educationId"
                ],
                "properties": {
                  "educationId": {
                    "type": "integer"
                  },
                  "institute": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "major": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "year": {
                    "type": "integer",
                    "maxLength": 4
                  },
                  "score": {
                    "type": "string",
                    "maxLength": 25
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeEducationModel"
                    },
                    "meta": {}
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Employee Education"
        ],
        "summary": "Delete an Employee's Educational Qualifications",
        "operationId": "delete-an-employees-educational-qualifications",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/immigrations": {
      "get": {
        "tags": [
          "PIM/Employee Immigration"
        ],
        "summary": "List an Employee's Immigration Record",
        "operationId": "list-an-employees-immigration-record",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "eir.number"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeImmigrationModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PIM/Employee Immigration"
        ],
        "summary": "Add an Immigration Record to an Employee",
        "operationId": "add-an-immigration-record-to-an-employee",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "type"
                ],
                "properties": {
                  "number": {
                    "type": "string"
                  },
                  "issuedDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "expiryDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "type": {
                    "type": "integer"
                  },
                  "status": {
                    "type": "string"
                  },
                  "reviewDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "countryCode": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "comment": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "additionalProperties": {
                    "type": "boolean",
                    "default": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeImmigrationModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Employee Immigration"
        ],
        "summary": "Delete an Employee's Immigration Records",
        "operationId": "delete-an-employees-immigration-records",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/immigrations/{id}": {
      "get": {
        "tags": [
          "PIM/Employee Immigration"
        ],
        "summary": "Get an Employee's Immigration Record",
        "operationId": "get-an-employees-immigration-record",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeImmigrationModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Immigration"
        ],
        "summary": "Update an Employee's Immigration Record",
        "operationId": "update-an-employees-immigration-record",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "type"
                ],
                "properties": {
                  "number": {
                    "type": "string"
                  },
                  "issuedDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "expiryDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "type": {
                    "type": "integer"
                  },
                  "status": {
                    "type": "string"
                  },
                  "reviewDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "countryCode": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "comment": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "additionalProperties": {
                    "type": "boolean",
                    "default": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeImmigrationModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/job-details": {
      "get": {
        "tags": [
          "PIM/Employee Job Details"
        ],
        "summary": "Get an Employee's Job Details",
        "operationId": "get-an-employees-job-details",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeJobDetailModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Job Details"
        ],
        "summary": "Update an Employee's Job Details",
        "operationId": "update-an-employees-job-details",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "joinedDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "jobTitleId": {
                    "type": "integer"
                  },
                  "empStatusId": {
                    "type": "integer"
                  },
                  "jobCategoryId": {
                    "type": "integer"
                  },
                  "subunitId": {
                    "type": "integer"
                  },
                  "locationId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeJobDetailModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/languages/{languageId}/fluencies/{fluencyId}": {
      "get": {
        "tags": [
          "PIM/Employee Language"
        ],
        "summary": "Get an Employee's Language and Fluency",
        "operationId": "get-an-employees-language-and-fluency",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "languageId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "fluencyId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeLanguageModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Language"
        ],
        "summary": "Update an Employee's Language and Fluency",
        "operationId": "update-an-employees-langauge-and-fluency",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "languageId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "fluencyId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "competencyId"
                ],
                "properties": {
                  "languageId": {
                    "type": "integer"
                  },
                  "fluencyId": {
                    "type": "integer",
                    "enum": [
                      "Writing",
                      "Speaking",
                      "Reading"
                    ]
                  },
                  "competencyId": {
                    "type": "integer",
                    "enum": [
                      "Poor",
                      "Basic",
                      "Good",
                      "Mother Tongue"
                    ]
                  },
                  "comment": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeLanguageModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/languages": {
      "get": {
        "tags": [
          "PIM/Employee Language"
        ],
        "summary": "List an Employee's Languages",
        "operationId": "list-an-employees-languages",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "l.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeLanguageModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PIM/Employee Language"
        ],
        "summary": "Add a Language to an Employee",
        "operationId": "add-a-language-to-an-employee",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "languageId",
                  "fluencyId",
                  "competencyId",
                  "comment"
                ],
                "properties": {
                  "languageId": {
                    "type": "integer"
                  },
                  "fluencyId": {
                    "type": "integer",
                    "enum": [
                      "Writing",
                      "Speaking",
                      "Reading"
                    ]
                  },
                  "competencyId": {
                    "type": "integer",
                    "enum": [
                      "Poor",
                      "Basic",
                      "Good",
                      "Mother Tongue"
                    ]
                  },
                  "comment": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeLanguageModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Repeated languageId & empNumber combination",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "messsage": {
                          "type": "string",
                          "default": "Given `fluencyId` already there for given `languageId` & `empNumber` combination"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Employee Language"
        ],
        "summary": "Delete an Employee's Languages",
        "operationId": "delete-an-employees-languages",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/licenses/{id}": {
      "get": {
        "tags": [
          "PIM/Employee Licenses"
        ],
        "summary": "Get an Employee's License",
        "operationId": "get-an-employees-license",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeLicenseModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Licenses"
        ],
        "summary": "Update an Employee's License",
        "operationId": "update-an-employees-license",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "licenseNo"
                ],
                "properties": {
                  "licenseId": {
                    "type": "integer"
                  },
                  "licenseNo": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "issuedDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "expiryDate": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeLicenseModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/licenses": {
      "get": {
        "tags": [
          "PIM/Employee Licenses"
        ],
        "summary": "List an Employee's Licenses",
        "operationId": "list-an-employees-licenses",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "el.licenseIssuedDate"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeLicenseModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PIM/Employee Licenses"
        ],
        "summary": "Add a License to an Employee",
        "operationId": "add-a-license-to-an-employee",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "licenseNo"
                ],
                "properties": {
                  "licenseId": {
                    "type": "integer"
                  },
                  "licenseNo": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "issuedDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "expiryDate": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeLicenseModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Employee Licenses"
        ],
        "summary": "Delete an Employee's Licenses",
        "operationId": "delete-an-employees-licenses",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/memberships/{id}": {
      "get": {
        "tags": [
          "PIM/Employee Membership"
        ],
        "summary": "Get an Employee's Membership",
        "operationId": "get-an-employees-membership",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeMembershipModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Membership"
        ],
        "summary": "Update an Employee's Membership",
        "operationId": "update-an-employees-membership",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "membershipId"
                ],
                "properties": {
                  "membershipId": {
                    "type": "integer"
                  },
                  "subscriptionFee": {
                    "type": "number"
                  },
                  "subscriptionPaidBy": {
                    "type": "string"
                  },
                  "currencyTypeId": {
                    "type": "string"
                  },
                  "subscriptionCommenceDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "subscriptionRenewalDate": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeMembershipModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/memberships": {
      "get": {
        "tags": [
          "PIM/Employee Membership"
        ],
        "summary": "List an Employee's Memberships",
        "operationId": "list-an-employees-memberships",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "m.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeDependentModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PIM/Employee Membership"
        ],
        "summary": "Add a Membership to an Employee",
        "operationId": "add-a-membership-to-an-employee",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "membershipId"
                ],
                "properties": {
                  "membershipId": {
                    "type": "integer"
                  },
                  "subscriptionFee": {
                    "type": "number"
                  },
                  "subscriptionPaidBy": {
                    "type": "string"
                  },
                  "currencyTypeId": {
                    "type": "string"
                  },
                  "subscriptionCommenceDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "subscriptionRenewalDate": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeMembershipModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Employee Membership"
        ],
        "summary": "Delete an Employee's Memberships",
        "operationId": "delete-an-employees-memberships",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/personal-details": {
      "get": {
        "tags": [
          "PIM/Employee Personal Details"
        ],
        "summary": "Get an Employee's Personal Details",
        "operationId": "get-an-employees-personal-details",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeePersonalDetailModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Personal Details"
        ],
        "summary": "Update an Employee's Personal Details",
        "operationId": "update-an-employees-personal-details",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "lastName",
                  "firstName"
                ],
                "properties": {
                  "lastName": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "firstName": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "middleName": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "employeeId": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "otherId": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "drivingLicenseNo": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "drivingLicenseExpiredDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "ssnNumber": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "sinNumber": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "gender": {
                    "type": "integer"
                  },
                  "maritalStatus": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "birthday": {
                    "type": "string",
                    "format": "date"
                  },
                  "nationalityId": {
                    "type": "integer"
                  },
                  "nickname": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "smoker": {
                    "type": "boolean"
                  },
                  "militaryService": {
                    "type": "string",
                    "maxLength": 100
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeDependentModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/picture": {
      "get": {
        "tags": [
          "PIM/Employee Picture"
        ],
        "summary": "Get an Employee's Picture",
        "operationId": "get-an-employees-picture",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeePictureModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Picture"
        ],
        "summary": "Update an Employee's Picture",
        "operationId": "update-an-employees-picture",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "empPicture": {
                    "$ref": "#/components/schemas/Base64Attachment"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeePictureModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/salary-components/{id}": {
      "get": {
        "tags": [
          "PIM/Employee Salary"
        ],
        "summary": "Get an Employee's Salary Component",
        "operationId": "get-an-employees-salary-component",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeSalaryModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Salary"
        ],
        "summary": "Update an Employee's Salary Component",
        "operationId": "update-an-employees-salary-component",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "salaryComponent",
                  "currencyId",
                  "salaryAmount"
                ],
                "properties": {
                  "payGradeId": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "salaryComponent": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "payFrequencyId": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "currencyId": {
                    "type": "string"
                  },
                  "salaryAmount": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "comment": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "maxLength": 250
                  },
                  "addDirectDeposit": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeSalaryModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/salary-components": {
      "get": {
        "tags": [
          "PIM/Employee Salary"
        ],
        "summary": "List an Employee's Salary Components",
        "operationId": "list-an-employees-salary-components",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "es.salaryName"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeSalaryModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PIM/Employee Salary"
        ],
        "summary": "Add a Salary Component to an Employee",
        "operationId": "add-a-salary-component-to-an-employee",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "salaryComponent",
                  "currencyId",
                  "salaryAmount"
                ],
                "properties": {
                  "payGradeId": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "salaryComponent": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "payFrequencyId": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "currencyId": {
                    "type": "string"
                  },
                  "salaryAmount": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "comment": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "maxLength": 250
                  },
                  "addDirectDeposit": {
                    "type": "boolean"
                  },
                  "directDepositAccount": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "maxLength": 100
                  },
                  "directDepositAccountType": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "maxLength": 20
                  },
                  "directDepositRoutingNumber": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "maxLength": 9
                  },
                  "directDepositAmount": {
                    "type": [
                      "number",
                      "null"
                    ],
                    "maximum": 999999999.99,
                    "minimum": 0
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeSalaryModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Employee Salary"
        ],
        "summary": "Delete an Employee's Salary Components",
        "operationId": "delete-an-employees-salary-componenets",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/skills/{id}": {
      "get": {
        "tags": [
          "PIM/Employee Skill"
        ],
        "summary": "Get an Employee's Skill",
        "operationId": "get-an-employees-skill",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeSkillModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Skill"
        ],
        "summary": "Update an Employee's Skill",
        "operationId": "update-an-employees-skill",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "yearsOfExperience": {
                    "type": "integer",
                    "maxLength": 2
                  },
                  "comments": {
                    "type": "string",
                    "maxLength": 100
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeSkillModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/skills": {
      "get": {
        "tags": [
          "PIM/Employee Skill"
        ],
        "summary": "List an Employee's Skills",
        "operationId": "list-an-employees-skills",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "s.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeSkillModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PIM/Employee Skill"
        ],
        "summary": "Add a Skill to an Employee",
        "operationId": "add-a-skill-to-an-employee",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "skillId"
                ],
                "properties": {
                  "yearsOfExperience": {
                    "type": "integer",
                    "maxLength": 2
                  },
                  "comments": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "skillId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeSkillModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Employee Skill"
        ],
        "summary": "Delete an Employee's Skills",
        "operationId": "delete-an-employees-skills",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/subordinates": {
      "get": {
        "tags": [
          "PIM/Employee Subordinates"
        ],
        "summary": "List an Employee's Subordinates",
        "operationId": "list-an-employees-subordinates",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "subordinate.lastName"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeSubordinateModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PIM/Employee Subordinates"
        ],
        "summary": "Add a Subordinate to an Employee",
        "operationId": "add-a-subordinate-to-an-employee",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "empNumber",
                  "reportingMethodId"
                ],
                "properties": {
                  "empNumber": {
                    "type": "integer"
                  },
                  "reportingMethodId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeSubordinateModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Employee Subordinates"
        ],
        "summary": "Delete an Employee's Subordinates",
        "operationId": "delete-an-employees-subordinates",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/subordinates/{id}": {
      "get": {
        "tags": [
          "PIM/Employee Subordinates"
        ],
        "summary": "Get an Employee's Subordinate",
        "operationId": "get-an-employees-subordinate",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeSubordinateModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Subordinates"
        ],
        "summary": "Update an Employee's Subordinate",
        "operationId": "update-an-employees-subordinate",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "reportingMethodId"
                ],
                "properties": {
                  "reportingMethodId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeSubordinateModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/supervisors/{id}": {
      "get": {
        "tags": [
          "PIM/Employee Supervisor"
        ],
        "summary": "Get an Employee's Supervisor",
        "operationId": "get-an-employees-supervisor",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeSupervisorModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Subordinates"
        ],
        "summary": "Update an Employee's Supervisor",
        "operationId": "update-an-employees-supervisor",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "reportingMethodId"
                ],
                "properties": {
                  "reportingMethodId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeSupervisorModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/supervisors": {
      "get": {
        "tags": [
          "PIM/Employee Supervisor"
        ],
        "summary": "List an Employee's Supervisors",
        "operationId": "list-an-employees-supervisors-pim",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "supervisor.lastName"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeSupervisorModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PIM/Employee Supervisor"
        ],
        "summary": "Add a Supervisor to an Employee",
        "operationId": "add-a-supervisor-to-an-employee",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "empNumber",
                  "reportingMethodId"
                ],
                "properties": {
                  "empNumber": {
                    "type": "integer"
                  },
                  "reportingMethodId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeSupervisorModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Employee Supervisor"
        ],
        "summary": "Delete an Employee's Supervisors",
        "operationId": "delete-an-employees-supervisors",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/terminations/{id}": {
      "get": {
        "tags": [
          "PIM/Employee Termination"
        ],
        "summary": "Get an Employee's Termination Record",
        "operationId": "get-an-employees-termination-record",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeTerminationModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Termination"
        ],
        "summary": "Update an Employee's Termination Record",
        "operationId": "update-an-employees-termination-record",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "terminationReasonId",
                  "date"
                ],
                "properties": {
                  "terminationReasonId": {
                    "type": "integer"
                  },
                  "date": {
                    "type": "string"
                  },
                  "note": {
                    "type": "string",
                    "maxLength": 255
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeTerminationModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/terminations": {
      "post": {
        "tags": [
          "PIM/Employee Termination"
        ],
        "summary": "Terminate an Employee",
        "operationId": "terminate-an-employee",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "terminationReasonId",
                  "date"
                ],
                "properties": {
                  "terminationReasonId": {
                    "type": "integer"
                  },
                  "date": {
                    "type": "string",
                    "format": "date"
                  },
                  "note": {
                    "type": "string",
                    "maxLength": 255
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeTerminationModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Employee Termination"
        ],
        "summary": "Delete an Employee's Termination Record",
        "operationId": "delete-an-employees-termination-record",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/work-experiences/{id}": {
      "get": {
        "tags": [
          "PIM/Employee Work Experience"
        ],
        "summary": "Get an Employee's Work Experience Record",
        "operationId": "get-an-employees-work-experience-record",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeWorkExperienceModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employee Work Experience"
        ],
        "summary": "Update an Employee's Work Experiece Record",
        "operationId": "update-an-employees-work-experience-record",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "jobTitle",
                  "company"
                ],
                "properties": {
                  "company": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "jobTitle": {
                    "type": "string",
                    "maxLength": 120
                  },
                  "fromDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "toDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "comment": {
                    "type": "string",
                    "maxLength": 200
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeWorkExperienceModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/work-experiences": {
      "get": {
        "tags": [
          "PIM/Employee Work Experience"
        ],
        "summary": "List Employee's Work Experience Records",
        "operationId": "list-employees-work-experience-records",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "we.jobTitle",
                "we.employer"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeWorkExperienceModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PIM/Employee Work Experience"
        ],
        "summary": "Add a Work Experience Record to an Employee",
        "operationId": "add-a-work-experience-record-to-an-employee",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "jobTitle",
                  "company"
                ],
                "properties": {
                  "company": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "jobTitle": {
                    "type": "string",
                    "maxLength": 120
                  },
                  "fromDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "toDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "comment": {
                    "type": "string",
                    "maxLength": 200
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeWorkExperienceModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Employee Work Experience"
        ],
        "summary": "Delete an Employee's Work Experience Records",
        "operationId": "delete-an-employees-work-experience-records",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/work-shift": {
      "get": {
        "tags": [
          "PIM/Employee Work Shift"
        ],
        "summary": "Get an Employee's Work Shift",
        "operationId": "get-an-employees-work-shift",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeWorkShiftModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/employment-contract": {
      "get": {
        "tags": [
          "PIM/Employement Contract"
        ],
        "summary": "Get an Employee's Employment Contract",
        "operationId": "get-an-employees-employment-contract",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmploymentContractModel"
                    },
                    "meta": {
                      "properties": {
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Employement Contract"
        ],
        "summary": "Update an Employee's Employment Contract",
        "operationId": "update-an-employees-employment-contract",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "currentContractAttachment": {
                    "type": "string",
                    "enum": [
                      "replaceCurrent",
                      "keepCurrent",
                      "deleteCurrent"
                    ]
                  },
                  "contractAttachment": {
                    "$ref": "#/components/schemas/Base64Attachment"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmploymentContractModel"
                    },
                    "empNumber": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pim/myself": {
      "get": {
        "tags": [
          "PIM/My Self"
        ],
        "summary": "Get My Details",
        "operationId": "get-my-details",
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "detailed",
                "summary"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Pim-EmployeeModel"
                        },
                        {
                          "$ref": "#/components/schemas/Pim-MyInfoDetailedModel"
                        },
                        {
                          "$ref": "#/components/schemas/Pim-EmployeeDetailedModel"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pim/optional-field": {
      "get": {
        "tags": [
          "PIM/Optional Field"
        ],
        "summary": "Get Optional Field Configuration",
        "operationId": "get-optional-field-configuration",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "pimShowDeprecatedFields": {
                            "type": "boolean"
                          },
                          "showSSN": {
                            "type": "boolean"
                          },
                          "showSIN": {
                            "type": "boolean"
                          },
                          "showTaxExemptions": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Optional Field"
        ],
        "summary": "Update Optional Field Configuration",
        "operationId": "update-optional-field-configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "pimShowDeprecatedFields",
                  "showSSN",
                  "showSIN",
                  "showTaxExemptions"
                ],
                "properties": {
                  "pimShowDeprecatedFields": {
                    "type": "boolean"
                  },
                  "showSSN": {
                    "type": "boolean"
                  },
                  "showSIN": {
                    "type": "boolean"
                  },
                  "showTaxExemptions": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "pimShowDeprecatedFields": {
                            "type": "boolean"
                          },
                          "showSSN": {
                            "type": "boolean"
                          },
                          "showSIN": {
                            "type": "boolean"
                          },
                          "showTaxExemptions": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/reports/defined": {
      "get": {
        "tags": [
          "PIM/Defined Report"
        ],
        "summary": "List All PIM Reports",
        "operationId": "list-all-pim-reports",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "report.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-PimDefinedReportModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "empNumber": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PIM/Defined Report"
        ],
        "summary": "Create a PIM Report",
        "operationId": "create-a-pim-report",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "include",
                  "criteria",
                  "fieldGroup"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "include": {
                    "type": "string",
                    "enum": [
                      "onlyPast",
                      "currentAndPast",
                      "onlyCurrent"
                    ]
                  },
                  "criteria": {
                    "properties": {
                      "": {
                        "properties": {
                          "x": {
                            "type": "string"
                          },
                          "y": {
                            "type": "string"
                          },
                          "operator": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "fieldGroup": {
                    "properties": {
                      "": {
                        "required": [
                          "fields",
                          "includeHeader"
                        ],
                        "properties": {
                          "fields": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "includeHeader": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-PimDefinedReportModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Defined Report"
        ],
        "summary": "Delete PIM Reports",
        "operationId": "delete-pim-reports",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/pim/reports/defined/{id}": {
      "put": {
        "tags": [
          "PIM/Defined Report"
        ],
        "summary": "Update a PIM Report",
        "operationId": "update-a-pim-report",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "include": {
                    "type": "string",
                    "enum": [
                      "onlyPast",
                      "currentAndPast",
                      "onlyCurrent"
                    ]
                  },
                  "criteria": {
                    "properties": {
                      "": {
                        "properties": {
                          "x": {
                            "type": "string"
                          },
                          "y": {
                            "type": "string"
                          },
                          "operator": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "fieldGroup": {
                    "properties": {
                      "": {
                        "required": [
                          "fields",
                          "includeHeader"
                        ],
                        "properties": {
                          "fields": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "includeHeader": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-PimDefinedReportModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/reporting-methods/{id}": {
      "get": {
        "tags": [
          "PIM/Reporting Method Configuration"
        ],
        "summary": "Get a Reporting Method",
        "operationId": "get-a-reporting-method",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-ReportingMethodConfigurationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Reporting Method Configuration"
        ],
        "summary": "Update a Reporting Method",
        "operationId": "update-a-reporting-method",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-ReportingMethodConfigurationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/pim/reporting-methods": {
      "get": {
        "tags": [
          "PIM/Reporting Method Configuration"
        ],
        "summary": "List All Reporting Methods",
        "operationId": "list-all-reporting-methods",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "rm.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-ReportingMethodConfigurationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PIM/Reporting Method Configuration"
        ],
        "summary": "Create a Reporting Method",
        "operationId": "create-a-reporting-method",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-ReportingMethodConfigurationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Reporting Method Configuration"
        ],
        "summary": "Delete Reporting Methods",
        "operationId": "delete-reporting-methods",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/pim/termination-reasons": {
      "get": {
        "tags": [
          "PIM/Termination Reason Configuration"
        ],
        "summary": "List All Termination Reasons",
        "operationId": "list-all-termination-reasons",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "tr.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-TerminationReasonConfigurationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PIM/Termination Reason Configuration"
        ],
        "summary": "Create a Termination Reason",
        "operationId": "create-a-termination-reason",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-TerminationReasonConfigurationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PIM/Termination Reason Configuration"
        ],
        "summary": "Delete Termination Reasons",
        "operationId": "delete-termination-reasons",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/pim/termination-reasons/{id}": {
      "get": {
        "tags": [
          "PIM/Termination Reason Configuration"
        ],
        "summary": "Get a Termination Reason",
        "operationId": "get-a-termination-reason",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-TerminationReasonConfigurationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "PIM/Termination Reason Configuration"
        ],
        "summary": "Update a Termination Reason",
        "operationId": "update-a-termination-reason",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-ReportingMethodConfigurationModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pim/update-password": {
      "put": {
        "tags": [
          "PIM/Update Password"
        ],
        "summary": "Update Password",
        "operationId": "update-password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "currentPassword",
                  "newPassword"
                ],
                "properties": {
                  "currentPassword": {
                    "type": "string",
                    "maxLength": 64
                  },
                  "newPassword": {
                    "type": "string",
                    "maxLength": 64
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Admin-UserModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/contact-details/validation/work-emails": {
      "get": {
        "tags": [
          "PIM/Employee Email Validation"
        ],
        "summary": "Validate an Employee's Work Email",
        "operationId": "validate-an-employees-work-email",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "workEmail",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "valid": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pim/employees/{empNumber}/contact-details/validation/other-emails": {
      "get": {
        "tags": [
          "PIM/Employee Email Validation"
        ],
        "summary": "Validate an Employee's Other Email",
        "operationId": "validate-an-employee-other-email",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "otherEmail",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "valid": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/recruitment/candidates": {
      "get": {
        "tags": [
          "Recruitment/Candidates"
        ],
        "summary": "List All Candidates",
        "operationId": "list-all-candidates",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "vacancy.name",
                "candidate.lastName",
                "hiringManager.lastName",
                "candidate.dateOfApplication",
                "candidateVacancy.status"
              ]
            }
          },
          {
            "name": "candidateId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "jobTitleId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "vacancyId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "hiringManagerId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "APPLICATION INITIATED",
                "SHORTLISTED",
                "REJECTED",
                "INTERVIEW SCHEDULED",
                "INTERVIEW PASSED",
                "INTERVIEW FAILED",
                "JOB OFFERED",
                "OFFER DECLINED",
                "HIRED"
              ]
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "keywords",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "methodOfApplication",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "candidateName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "default",
                "list",
                "detailed"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/Recruitment-CandidateModel"
                          },
                          {
                            "$ref": "#/components/schemas/Recruitment-CandidateListModel"
                          },
                          {
                            "$ref": "#/components/schemas/Recruitment-CandidateDetailedModel"
                          }
                        ]
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/recruitment/candidates/{candidateId}/actions/allowed": {
      "get": {
        "tags": [
          "Recruitment/Candidate Workflow"
        ],
        "summary": "Get Allowed Actions for Candidate",
        "operationId": "get-allowed-actions-for-candidate",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "candidateId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "label": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/recruitment/candidate/attachments": {
      "post": {
        "tags": [
          "Recruitment/Candidate Attachments"
        ],
        "summary": "Add an Attachment to a Candidate",
        "operationId": "add-an-attachment-to-a-candidate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "candidateId",
                  "attachment"
                ],
                "properties": {
                  "candidateId": {
                    "type": "integer"
                  },
                  "attachment": {
                    "$ref": "#/components/schemas/Base64Attachment"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-CandidateAttachmentModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/recruitment/candidate/{candidateId}/attachment": {
      "get": {
        "tags": [
          "Recruitment/Candidate Attachments"
        ],
        "summary": "Get a Candidate's Attachment",
        "operationId": "get-a-candidates-attachment",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "candidateId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-CandidateAttachmentModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Recruitment/Candidate Attachments"
        ],
        "summary": "Update a Candidate's Attachment",
        "operationId": "update-a-candidates-attachment",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "candidateId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "currentAttachment": {
                    "type": "string",
                    "maxLength": 16
                  },
                  "attachment": {
                    "$ref": "#/components/schemas/Base64Attachment"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-CandidateAttachmentModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/recruitment/candidates/{candidateId}/hire": {
      "put": {
        "tags": [
          "Recruitment/Candidate Workflow"
        ],
        "summary": "Hire Candidate",
        "operationId": "hire-candidate",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "candidateId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "note": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-CandidateHistoryDefaultModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/recruitment/candidates/{candidateId}/history": {
      "get": {
        "tags": [
          "Recruitment/Candidate History"
        ],
        "summary": "List a Candidate's History",
        "operationId": "list-a-candidates-history",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "candidateId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/recruitment/candidates/{candidateId}/history/{historyId}": {
      "get": {
        "tags": [
          "Recruitment/Candidate History"
        ],
        "summary": "Get a Candidate's History Record",
        "operationId": "get-a-candidates-history-record",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "candidateId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "historyId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-CandidateHistoryDetailedModel"
                    },
                    "meta": {
                      "properties": {
                        "disabled": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Recruitment/Candidate History"
        ],
        "summary": "Update a Candidate's History Record",
        "operationId": "update-a-candidates-history-record",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "candidateId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "historyId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "note": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-CandidateHistoryDetailedModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/recruitment/candidates/{candidateId}/shedule-interview": {
      "post": {
        "tags": [
          "Recruitment/Candidate Workflow"
        ],
        "summary": "Schedule Interview for a Candidate",
        "operationId": "schedule-interview-for-a-candidate",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "candidateId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "interviewName",
                  "interviewDate",
                  "interviewerEmpNumbers"
                ],
                "properties": {
                  "interviewName": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "interviewDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "interviewTime": {
                    "type": "string",
                    "format": "time"
                  },
                  "note": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "interviewerEmpNumbers": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-CandidateInterviewModel"
                    },
                    "meta": {
                      "properties": {
                        "historyId": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          },
          "400": {
            "description": "Bad Request - Exceeded max interview per vacancy count",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "default": "You Can not Schedule More Than Two Interviews Per Candidate For The Same Vacancy"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/recruitment/candidates/{candidateId}/interview/{interviewId}": {
      "get": {
        "tags": [
          "Recruitment/Candidate Interview"
        ],
        "summary": "Get a Candidate's Inteview",
        "operationId": "get-a-candidates-interview",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "candidateId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "interviewId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-CandidateInterviewModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/recruitment/candidate/{candidateId}/interview/{interviewId}": {
      "put": {
        "tags": [
          "Recruitment/Candidate Interview"
        ],
        "summary": "Update a Candidate's Interview",
        "operationId": "update-a-candidates-interview",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "candidateId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "interviewId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "interviewName",
                  "interviewDate",
                  "interviewerEmpNumbers"
                ],
                "properties": {
                  "interviewName": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "interviewDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "interviewTime": {
                    "type": "string",
                    "format": "time"
                  },
                  "note": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "interviewerEmpNumbers": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-CandidateInterviewModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/recruitment/candidates/{candidateId}/job/offer": {
      "put": {
        "tags": [
          "Recruitment/Candidate Workflow"
        ],
        "summary": "Offer Job to Candidate",
        "operationId": "offer-job-to-candidate",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "candidateId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "note": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-CandidateHistoryDefaultModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/recruitment/candidates/{candidateId}/interviews/{interviewId}/fail": {
      "put": {
        "tags": [
          "Recruitment/Candidate Workflow"
        ],
        "summary": "Mark Candidate Interview as Failed",
        "operationId": "mark-candidate-interview-as-failed",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "candidateId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "interviewId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "note": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-CandidateHistoryDefaultModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/recruitment/candidates/{candidateId}/interviews/{interviewId}/pass": {
      "put": {
        "tags": [
          "Recruitment/Candidate Workflow"
        ],
        "summary": "Mark Candidate Interview as Passed",
        "operationId": "mark-candidate-interview-as-passed",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "candidateId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "interviewId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "note": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-CandidateHistoryDefaultModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/recruitment/candidates/{candidateId}/job/decline": {
      "put": {
        "tags": [
          "Recruitment/Candidate Workflow"
        ],
        "summary": "Decline Job Offer for Candidate",
        "operationId": "decline-job-offer-for-candidate",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "candidateId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "note": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-CandidateHistoryDefaultModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/recruitment/candidates/{candidateId}/reject": {
      "put": {
        "tags": [
          "Recruitment/Candidate Workflow"
        ],
        "summary": "Reject Candidate",
        "operationId": "reject-candidate",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "candidateId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "note": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-CandidateHistoryDefaultModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/recruitment/candidates/{candidateId}/shortlist": {
      "put": {
        "tags": [
          "Recruitment/Candidate Workflow"
        ],
        "summary": "Shortlist Candidate",
        "operationId": "shortlist-candidate",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "candidateId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "note": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-CandidateHistoryDefaultModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/recruitment/candidates/status": {
      "get": {
        "tags": [
          "Recruitment/Candidates"
        ],
        "summary": "List All Statuses",
        "operationId": "list-all-statuses",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "label": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/recruitment/interviwers": {
      "get": {
        "tags": [
          "Recruitment/Employee List"
        ],
        "summary": "List Employees Available for Interviewing",
        "operationId": "list-employees-available-for-interviewing",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "employee.lastName",
                "employee.firstName",
                "employee.middleName",
                "employee.empNumber",
                "employee.employeeId",
                "jobTitle.jobTitleName",
                "empStatus.name",
                "subunit.name",
                "supervisor.firstName"
              ]
            }
          },
          {
            "name": "nameOrId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/recruitment/hiring-managers": {
      "get": {
        "tags": [
          "Recruitment/Hiring Managers"
        ],
        "summary": "List Available Employees for Hiring Manager",
        "operationId": "list-available-employees-for-hiring-manager",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "employee.lastName",
                "employee.firstName",
                "employee.middleName",
                "employee.empNumber",
                "employee.employeeId",
                "jobTitle.jobTitleName",
                "empStatus.name",
                "subunit.name",
                "supervisor.firstName"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/recruitment/interviews/{interviewId}/attachments": {
      "get": {
        "tags": [
          "Recruitment/Interview Attachments"
        ],
        "summary": "List All Interview Attachments",
        "operationId": "list-all-interview-attachments",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "interviewId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "attachment.id",
                "attachment.interviewId"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-InterviewAttachmentModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Recruitment/Interview Attachments"
        ],
        "summary": "Add an Attachment to an Interview",
        "operationId": "add-an-attachment-to-an-interview",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "interviewId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "attachment"
                ],
                "properties": {
                  "comment": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "attachment": {
                    "$ref": "#/components/schemas/Base64Attachment"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-InterviewAttachmentModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "Recruitment/Interview Attachments"
        ],
        "summary": "Delete Interview Attachments",
        "operationId": "delete-interview-attachments",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "interviewId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/recruitment/interviews/{interviewId}/attachments/{attachmentId}": {
      "get": {
        "tags": [
          "Recruitment/Interview Attachments"
        ],
        "summary": "Get an Interview Attachment",
        "operationId": "get-an-interview-attachment",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "interviewId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "attachmentId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-InterviewAttachmentModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Recruitment/Interview Attachments"
        ],
        "summary": "Update an Interview Attachment",
        "operationId": "update-an-interview-attachment",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "interviewId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "attachmentId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "currentAttachment": {
                    "type": "string",
                    "maxLength": 16
                  },
                  "attachment": {
                    "$ref": "#/components/schemas/Base64Attachment"
                  },
                  "comment": {
                    "type": "string",
                    "maxLength": 255
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-InterviewAttachmentModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/recruitment/vacancies/{id}": {
      "get": {
        "tags": [
          "Recruitment/Vacancy"
        ],
        "summary": "Get a Vacancy",
        "operationId": "get-a-vacancy",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-VacancyDetailedModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Recruitment/Vacancy"
        ],
        "summary": "Update a Vacancy",
        "operationId": "update-a-vacancy",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "status",
                  "jobTitleId",
                  "isPublished",
                  "employeeId"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "jobTitleId": {
                    "type": "integer"
                  },
                  "isPublished": {
                    "type": "boleean"
                  },
                  "description": {
                    "type": "string"
                  },
                  "numOfPositions": {
                    "type": "integer",
                    "maximum": 13
                  },
                  "employeeId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-VacancyDetailedModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/recruitment/vacancies": {
      "get": {
        "tags": [
          "Recruitment/Vacancy"
        ],
        "summary": "List All Vacancies",
        "operationId": "list-all-vacancies",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "vacancy.name",
                "vacancy.status",
                "jobTitle.jobTitleName",
                "hiringManager.lastName"
              ]
            }
          },
          {
            "name": "jobTitleId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "hiringManagerId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vacancyId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/Recruitment-VacancyModel"
                          },
                          {
                            "$ref": "#/components/schemas/Recruitment-VacancySummaryModel"
                          },
                          {
                            "$ref": "#/components/schemas/Recruitment-VacancyDetailedModel"
                          }
                        ]
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Recruitment/Vacancy"
        ],
        "summary": "Create a Vacancy",
        "operationId": "create-a-vacancy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "status",
                  "jobTitleId",
                  "isPublished",
                  "employeeId"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "jobTitleId": {
                    "type": "integer"
                  },
                  "isPublished": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "string"
                  },
                  "numOfPositions": {
                    "type": "integer",
                    "maximum": 13
                  },
                  "employeeId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-VacancyDetailedModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Recruitment/Vacancy"
        ],
        "summary": "Delete Vacancies",
        "operationId": "delete-vacancies",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/recruitment/vacancy/attachments": {
      "post": {
        "tags": [
          "Recruitment/Vacancy Attachments"
        ],
        "summary": "Add an Attachment to a Vacancy",
        "operationId": "add-an-attachment-to-a-vacancy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "vacancyId",
                  "attachment"
                ],
                "properties": {
                  "vacancyId": {
                    "type": "integer"
                  },
                  "comment": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "attachmentType": {
                    "type": "integer",
                    "maximum": 4
                  },
                  "attachment": {
                    "$ref": "#/components/schemas/Base64Attachment"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-VacancyAttachmentModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Recruitment/Vacancy Attachments"
        ],
        "summary": "Delete Vacancy Attachments",
        "operationId": "delete-vacancy-attachments",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/recruitment/vacancies/{vacancyId}/attachments": {
      "get": {
        "tags": [
          "Recruitment/Vacancy Attachments"
        ],
        "summary": "Get a Vacancy Attachment",
        "operationId": "get-a-vacancy-attachment",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "vacancyId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-VacancyAttachmentModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/recruitment/vacancies/{vacancyId}/attachments/{attachmentId}": {
      "put": {
        "tags": [
          "Recruitment/Vacancy Attachments"
        ],
        "summary": "Update a Vacancy Attachment",
        "operationId": "update-a-vacancy-attachment",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "attachmentId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "vacancyId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "currentAttachment": {
                    "type": "string"
                  },
                  "attachment": {
                    "$ref": "#/components/schemas/Base64Attachment"
                  },
                  "vacancyId": {
                    "type": "integer"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "attachmentType": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Recruitment-VacancyAttachmentModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/time/projects/{toProjectId}/activities/copy/{fromProjectId}": {
      "get": {
        "tags": [
          "Time/Copy Project Activity"
        ],
        "summary": "List Copyable Activities Between Two Projects",
        "operationId": "list-copyable-activities-between-two-projects",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "toProjectId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "fromProjectId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "projectActivity.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-CopyActivityModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Time/Copy Project Activity"
        ],
        "summary": "Copy Activities From One Project",
        "operationId": "copy-activities-from-one-project",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "toProjectId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "fromProjectId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "activityIds"
                ],
                "properties": {
                  "activityIds": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Already exist",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "default": "Already exist"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/time/customers": {
      "get": {
        "tags": [
          "Time/Customers"
        ],
        "summary": "List All Customers",
        "operationId": "list-all-customers",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "customer.name"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-CustomerModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Time/Customers"
        ],
        "summary": "Create a Customer",
        "operationId": "create-a-customer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 255
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-CustomerModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Time/Customers"
        ],
        "summary": "Delete Customers",
        "operationId": "delete-customers",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "default": "Not Allowed to Delete Customer(s) Which Have Time Logged Against"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/time/customers/{id}": {
      "get": {
        "tags": [
          "Time/Customers"
        ],
        "summary": "Get a Customer",
        "operationId": "get-a-customer",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-CustomerModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Time/Customers"
        ],
        "summary": "Update a Customer",
        "operationId": "update-a-customer",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 255
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-CustomerModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/time/timesheets/default": {
      "get": {
        "tags": [
          "Time/Default Timesheet"
        ],
        "summary": "Get Default Timesheet",
        "operationId": "get-default-timesheet",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-DefaultTimesheetModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/time/employees/{empNumber}/timesheets": {
      "get": {
        "tags": [
          "Time/Employee Timesheet"
        ],
        "summary": "List an Employee's Timesheets",
        "operationId": "list-an-employees-timesheets",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Time-TimesheetModel"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "example": "To Date is required"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Time/Employee Timesheet"
        ],
        "summary": "Create a Timesheet for an Employee",
        "operationId": "create-a-timesheet-for-an-employee",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "date"
                ],
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-TimesheetModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/time/employees/{empNumber}/timesheets/{id}": {
      "put": {
        "tags": [
          "Time/Employee Timesheet"
        ],
        "summary": "Update an Employee's Timesheet",
        "operationId": "update-an-employees-timesheet",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "empNumber",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "date"
                ],
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "VIEW",
                      "SUBMIT",
                      "APPROVE",
                      "REJECT",
                      "RESET",
                      "MODIFY",
                      "CREATE"
                    ]
                  },
                  "comment": {
                    "type": "string",
                    "maxLength": 2000
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-TimesheetModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/time/employees/timesheets/{timesheetId}/entries": {
      "get": {
        "tags": [
          "Time/Employee Timesheet"
        ],
        "summary": "Get a Timesheet's Entries",
        "operationId": "get-a-timesheets-entries",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "timesheetId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-DetailedTimesheetModel"
                    },
                    "meta": {
                      "properties": {
                        "timesheet": {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "status": {
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "name": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "startDate": {
                              "type": "string",
                              "format": "date"
                            },
                            "endDate": {
                              "type": "string",
                              "format": "date"
                            }
                          },
                          "type": "object"
                        },
                        "sum": {
                          "properties": {
                            "hours": {
                              "type": "integer"
                            },
                            "minutes": {
                              "type": "integer"
                            },
                            "label": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "columns": {
                          "type": "object",
                          "additionalProperties": {
                            "properties": {
                              "total": {
                                "properties": {
                                  "hours": {
                                    "type": "integer"
                                  },
                                  "minutes": {
                                    "type": "integer"
                                  },
                                  "label": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "dates": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "date"
                          }
                        },
                        "employee": {
                          "properties": {
                            "empNumber": {
                              "type": "integer"
                            },
                            "firstName": {
                              "type": "string"
                            },
                            "lastName": {
                              "type": "string"
                            },
                            "middleName": {
                              "type": "string"
                            },
                            "employeeId": {
                              "type": "string"
                            },
                            "terminationId": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "allowedActions": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "action": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Time/Employee Timesheet"
        ],
        "summary": "Update a Timesheet's Entries",
        "operationId": "update-a-timesheets-entries",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "timesheetId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "countryCode"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "province": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "zipCode": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "fax": {
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-DetailedTimesheetModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "example": "Performed action not allowed"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/time/employees/timesheets/list": {
      "get": {
        "tags": [
          "Time/Employee Timesheet"
        ],
        "summary": "List All Employee Timesheets",
        "operationId": "list-all-employee-timesheets",
        "parameters": [
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "timesheet.startDate"
              ]
            }
          },
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-EmployeeTimesheetModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/time/timesheets/{timesheetId}/entries": {
      "get": {
        "tags": [
          "Time/My Timesheet"
        ],
        "summary": "List My Timesheet Entries",
        "operationId": "list-my-timesheet-entries",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "timesheetId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-DetailedTimesheetModel"
                    },
                    "meta": {
                      "properties": {
                        "timesheet": {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "status": {
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "name": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "startDate": {
                              "type": "string",
                              "format": "date"
                            },
                            "endDate": {
                              "type": "string",
                              "format": "date"
                            }
                          },
                          "type": "object"
                        },
                        "sum": {
                          "properties": {
                            "hours": {
                              "type": "integer"
                            },
                            "minutes": {
                              "type": "integer"
                            },
                            "label": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "columns": {
                          "type": "object",
                          "additionalProperties": {
                            "properties": {
                              "total": {
                                "properties": {
                                  "hours": {
                                    "type": "integer"
                                  },
                                  "minutes": {
                                    "type": "integer"
                                  },
                                  "label": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "dates": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "date"
                          }
                        },
                        "employee": {
                          "properties": {
                            "empNumber": {
                              "type": "integer"
                            },
                            "firstName": {
                              "type": "string"
                            },
                            "lastName": {
                              "type": "string"
                            },
                            "middleName": {
                              "type": "string"
                            },
                            "employeeId": {
                              "type": "string"
                            },
                            "terminationId": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "allowedActions": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "action": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Time/My Timesheet"
        ],
        "summary": "Update My Timesheet Entries",
        "operationId": "update-my-timesheet-entries",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "timesheetId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "entries": {
                    "required": [
                      "projectId",
                      "activityId"
                    ],
                    "properties": {
                      "projectId": {
                        "type": "integer"
                      },
                      "activityId": {
                        "type": "integer"
                      },
                      "dates": {
                        "type": "object",
                        "additionalProperties": {
                          "properties": {
                            "duration": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-DetailedTimesheetModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/time/projects": {
      "get": {
        "tags": [
          "Time/Project"
        ],
        "summary": "List All Projects",
        "operationId": "list-all-projects",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "onlyAllowed",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "name": "empNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "customerOrProjectName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "name": "excludeProjectIds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "detailed"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Time-ProjectModel"
                        },
                        {
                          "$ref": "#/components/schemas/Time-ProjectDetailedModel"
                        }
                      ]
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Time/Project"
        ],
        "summary": "Crete a Project",
        "operationId": "create-a-project",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "customerId",
                  "name"
                ],
                "properties": {
                  "customerId": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 256
                  },
                  "projectAdminsEmpNumbers": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-TimesheetModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "Time/Project"
        ],
        "summary": "Delete Projects",
        "operationId": "delete-projects",
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          }
        }
      }
    },
    "/api/v2/time/projects/{id}": {
      "get": {
        "tags": [
          "Time/Project"
        ],
        "summary": "Get a Project",
        "operationId": "get-a-project",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "default",
                "detailed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Time-ProjectModel"
                        },
                        {
                          "$ref": "#/components/schemas/Time-ProjectDetailedModel"
                        }
                      ]
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Time/Project"
        ],
        "summary": "Update a Project",
        "operationId": "update-a-project",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "customerId",
                  "name"
                ],
                "properties": {
                  "customerId": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 256
                  },
                  "projectAdminsEmpNumbers": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-ProjectDetailedModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/time/project/{projectId}/activities": {
      "get": {
        "tags": [
          "Time/Project Activity"
        ],
        "summary": "List a Project's Activities",
        "operationId": "list-a-projects-activities",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "projectId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "projectActivityName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-ProjectActivityModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Time/Project Activity"
        ],
        "summary": "Add an Activity to a Project",
        "operationId": "add-an-activity-to-a-project",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "projectId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-ProjectActivityModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Time/Project Activity"
        ],
        "summary": "Delete a Project's Activities",
        "operationId": "delete-a-projects-activities",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "projectId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteResponse"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "example": "Not Allowed to Delete Project Activities Which Have Time Logged Against"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/time/project/{projectId}/activities/{id}": {
      "get": {
        "tags": [
          "Time/Project Activity"
        ],
        "summary": "Get a Project's Activity",
        "operationId": "get-a-projects-activity",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "projectId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-ProjectActivityModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Time/Project Activity"
        ],
        "summary": "Update a Project's Activity",
        "operationId": "update-a-projects-activity",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "projectId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-ProjectActivityModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/time/project-admins": {
      "get": {
        "tags": [
          "Time/Project Admins"
        ],
        "summary": "List Available Employees for Project Admin",
        "operationId": "list-available-employees-for-project-admin",
        "parameters": [
          {
            "name": "includeEmployees",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "enum": [
                "onlyCurrent",
                "currentAndPast",
                "onlyPast"
              ]
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "name": "nameOrId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "employee.lastName",
                "employee.firstName",
                "employee.middleName",
                "employee.empNumber",
                "employee.employeeId",
                "jobTitle.jobTitleName",
                "empStatus.name",
                "subunit.name",
                "supervisor.firstName"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Pim-EmployeeModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/time/time-sheet-period": {
      "get": {
        "tags": [
          "Time/Timesheet Period"
        ],
        "summary": "Get the Timesheet Period",
        "operationId": "get-the-timesheet-period",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-TimeConfigPeriodModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Time/Timesheet Period"
        ],
        "summary": "Update the Timesheet Period",
        "operationId": "update-the-timesheet-period",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "startDay"
                ],
                "properties": {
                  "startDay": {
                    "type": "integer",
                    "maximum": 7,
                    "minimum": 1
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-TimeConfigPeriodModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Already defined",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "default": "Already defined"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/time/reports": {
      "get": {
        "tags": [
          "Time/Timesheet Report"
        ],
        "summary": "Get Time Reports",
        "operationId": "get-time-reports",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "headers": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "prop": {
                                  "type": "string"
                                },
                                "size": {
                                  "type": "integer"
                                },
                                "pin": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "cellProperties": {
                                  "properties": {
                                    "class": {
                                      "properties": {
                                        "cell-action": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      }
                    },
                    "meta": {
                      "properties": {
                        "headers": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "filters": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid report name",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "default": "Invalid report name"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/time/reports/data": {
      "get": {
        "tags": [
          "Time/Timesheet Report"
        ],
        "summary": "Get Time Report Data",
        "operationId": "get-time-report-data",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "headers": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "activityId": {
                                  "type": "integer"
                                },
                                "activityName": {
                                  "type": "string"
                                },
                                "deleted": {
                                  "type": "boolean"
                                },
                                "time": {
                                  "type": "string"
                                },
                                "_url": {
                                  "properties": {
                                    "activityName": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      }
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "sum": {
                          "properties": {
                            "hours": {
                              "type": "integer"
                            },
                            "minutes": {
                              "type": "integer"
                            },
                            "label": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "project": {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "deleted": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid report name",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "default": "400"
                        },
                        "message": {
                          "type": "string",
                          "default": "Invalid report name"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/time/timesheets/{timesheetId}/action-logs": {
      "get": {
        "tags": [
          "Time/Timesheet Action Log"
        ],
        "summary": "Get a Timesheet's Action Logs",
        "operationId": "get-a-timesheets-action-logs",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "timesheetId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "timesheetActionLog.date"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-TimesheetActionLogModel"
                    },
                    "meta": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/time/timesheets/{timesheetId}/entries/comment": {
      "put": {
        "tags": [
          "Time/Timesheet Comment"
        ],
        "summary": "Update a Timesheet Comment",
        "operationId": "update-a-timesheet-comment",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "timesheetId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "projectId",
                  "projectId",
                  "date"
                ],
                "properties": {
                  "projectId": {
                    "type": "integer"
                  },
                  "activityId": {
                    "type": "integer"
                  },
                  "date": {
                    "type": "string",
                    "format": "date"
                  },
                  "comment": {
                    "type": "string",
                    "maxLength": 2000
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-TimesheetItemModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/time/timesheets/{timesheetId}/entries/{id}/comment": {
      "get": {
        "tags": [
          "Time/Timesheet Comment"
        ],
        "summary": "Get a Timesheet Comment",
        "operationId": "get-a-timesheet-comment",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "timesheetId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-TimesheetItemModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/time/validation/{timesheetId}/project-activity": {
      "get": {
        "tags": [
          "Time/Validation"
        ],
        "summary": "Validate Project Acitvity Uniqueness in Timesheet",
        "operationId": "validate-project-activity-uniqueness-in-timesheet",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "timesheetId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "activityId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "duplicate": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/time/config/time-format": {
      "get": {
        "tags": [
          "Time/Timesheet Time Format"
        ],
        "summary": "Get Timesheet Time Format",
        "operationId": "get-timesheet-time-format",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Time-TimeFormatModel"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/time/validation/project-name": {
      "get": {
        "tags": [
          "Time/Validation"
        ],
        "summary": "Validate Project Name Uniqueness",
        "operationId": "validate-project-name-uniqueness",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "projectName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "valid": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/time/validation/customer-name": {
      "get": {
        "tags": [
          "Time/Validation"
        ],
        "summary": "Validate Customer Name Uniqueness",
        "operationId": "validate-customer-name-uniqueness",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "customerName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "valid": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    },
    "/api/v2/time/validation/activity-name/{id}": {
      "get": {
        "tags": [
          "Time/Validation"
        ],
        "summary": "Validate Project Activity Name Uniqueness",
        "operationId": "validate-project-activity-name-uniqueness",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "activityId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "activityName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "valid": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "meta": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/RecordNotFound"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Admin-CurrencyTypeModel": {
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Admin-EducationModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Admin-EmailConfigurationModel": {
        "properties": {
          "mailType": {
            "type": "string"
          },
          "sentAs": {
            "type": "string"
          },
          "smtpHost": {
            "type": "string"
          },
          "smtpPort": {
            "type": "integer"
          },
          "smtpUsername": {
            "type": "string"
          },
          "smtpAuthType": {
            "type": "string"
          },
          "smtpSecurityType": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Admin-EmailSubscriberModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Admin-EmailSubscriptionModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "subscribers": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Admin-EmploymentStatusModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Admin-I18NGroupModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string",
            "example": "admin,pim"
          },
          "title": {
            "type": "string",
            "example": "Admin,PIM"
          }
        },
        "type": "object"
      },
      "Admin-I18NLanguageModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string",
            "example": "nl,fr"
          },
          "code": {
            "type": "string",
            "example": "Dutch - Nederlands, French - Français"
          }
        },
        "type": "object"
      },
      "Admin-JobCategoryModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Admin-JobSpecificationModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "filename": {
            "type": "string"
          },
          "fileType": {
            "type": "string"
          },
          "fileSize": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Admin-JobTitleModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "jobSpecification": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "filename": {
                "type": "string"
              },
              "fileType": {
                "type": "string"
              },
              "fileSize": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Admin-LanguageModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Admin-LicenseModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Admin-LocationModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "country": {
            "properties": {
              "countryCode": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "countryName": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "province": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "noOfEmployees": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Admin-MembershipModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Admin-NationalityModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Admin-OrganizationModel": {
        "properties": {
          "name": {
            "type": "string"
          },
          "registrationNumber": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "province": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "street1": {
            "type": "string"
          },
          "street2": {
            "type": "string"
          },
          "note": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Admin-PayGradeCurrencyModel": {
        "properties": {
          "minSalary": {
            "type": "number"
          },
          "maxSalary": {
            "type": "number"
          },
          "currencyType": {
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Admin-PayGradeModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "currencies": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Admin-SkillModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Admin-SubunitModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "unitId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "level": {
            "type": "integer"
          },
          "left": {
            "type": "integer"
          },
          "right": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Admin-SubunitTreeModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "unitId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "level": {
            "type": "integer"
          },
          "children": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "unitId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "level": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Admin-UserModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "userName": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "employeeId": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "userRole": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Admin-WorkShiftDetailedModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "hoursPerDay": {
            "type": "number"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pim-EmployeeModel"
            }
          }
        },
        "type": "object"
      },
      "Admin-WorkShiftModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "hoursPerDay": {
            "type": "number"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Attendance-AttendanceConfigurationModel": {
        "properties": {
          "canUserChangeCurrentTime": {
            "type": "boolean"
          },
          "canUserModifyAttendance": {
            "type": "boolean"
          },
          "canSupervisorModifyAttendance": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Attendance-AttendanceRecordListModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "punchIn": {
            "properties": {
              "userDate": {
                "type": "string",
                "format": "date"
              },
              "userTime": {
                "type": "string"
              },
              "offset": {
                "type": "string"
              },
              "note": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "punchOut": {
            "properties": {
              "userDate": {
                "type": "string",
                "format": "date"
              },
              "userTime": {
                "type": "string"
              },
              "offset": {
                "type": "string"
              },
              "note": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "duration": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Attendance-AttendanceRecordModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "punchIn": {
            "properties": {
              "utcDate": {
                "type": "string",
                "format": "date"
              },
              "utcTime": {
                "type": "string"
              },
              "userDate": {
                "type": "string",
                "format": "date"
              },
              "userTime": {
                "type": "string"
              },
              "timezoneOffset": {
                "type": "string"
              },
              "note": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "punchOut": {
            "properties": {
              "utcDate": {
                "type": "string",
                "format": "date"
              },
              "utcTime": {
                "type": "string"
              },
              "userDate": {
                "type": "string",
                "format": "date"
              },
              "userTime": {
                "type": "string"
              },
              "timezoneOffset": {
                "type": "string"
              },
              "note": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "state": {
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "employeeId": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "duration": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Attendance-DateTimeModel": {
        "properties": {
          "utcDate": {
            "type": "string",
            "format": "date"
          },
          "utcTime": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Attendance-DetailedAttendanceRecordModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "punchIn": {
            "properties": {
              "utcDate": {
                "type": "string",
                "format": "date"
              },
              "utcTime": {
                "type": "string"
              },
              "userDate": {
                "type": "string",
                "format": "date"
              },
              "userTime": {
                "type": "string"
              },
              "timezoneOffset": {
                "type": "string"
              },
              "timezone": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "note": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "punchOut": {
            "properties": {
              "utcDate": {
                "type": "string",
                "format": "date"
              },
              "utcTime": {
                "type": "string"
              },
              "userDate": {
                "type": "string",
                "format": "date"
              },
              "userTime": {
                "type": "string"
              },
              "timezoneOffset": {
                "type": "string"
              },
              "timezone": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "note": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "state": {
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "employeeId": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Attendance-EmployeeAttendanceSummeryListModel": {
        "properties": {
          "empNumber": {
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "terminationId": {
            "type": "integer"
          },
          "sum": {
            "properties": {
              "hours": {
                "type": "integer"
              },
              "minutes": {
                "type": "integer"
              },
              "label": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Attendance-EmployeeLatestAttendanceRecordModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "punchIn": {
            "properties": {
              "utcDate": {
                "type": "string",
                "format": "date"
              },
              "utcTime": {
                "type": "string",
                "format": "time"
              },
              "userDate": {
                "type": "string",
                "format": "date"
              },
              "userTime": {
                "type": "string",
                "format": "time"
              },
              "offset": {
                "type": "string"
              },
              "note": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "punchOut": {
            "properties": {
              "utcDate": {
                "type": "string",
                "format": "date"
              },
              "utcTime": {
                "type": "string",
                "format": "time"
              },
              "userDate": {
                "type": "string",
                "format": "date"
              },
              "userTime": {
                "type": "string",
                "format": "time"
              },
              "offset": {
                "type": "string"
              },
              "note": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "state": {
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Buzz-Post-Text": {
        "properties": {
          "text": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Buzz-Post-Photo": {
        "properties": {
          "text": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Base64Attachment"
            }
          }
        },
        "type": "object"
      },
      "Buzz-Post-Video": {
        "properties": {
          "text": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Buzz-Post-Text-Edit": {
        "properties": {
          "text": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Buzz-Post-Photo-Edit": {
        "properties": {
          "text": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "deletedPhotos": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "example": "59,60"
          },
          "photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Base64Attachment"
            }
          }
        },
        "type": "object"
      },
      "Buzz-Post-Video-Edit": {
        "properties": {
          "text": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Buzz-BuzzCommentModel": {
        "properties": {
          "comment": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "createdDate": {
                "type": "string"
              },
              "createdTime": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "share": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Buzz-BuzzDetailedCommentModel": {
        "properties": {
          "comment": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "text": {
                "type": "string"
              },
              "numOfLikes": {
                "type": "integer"
              },
              "liked": {
                "type": "boolean"
              },
              "createdDate": {
                "type": "string"
              },
              "createdTime": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "share": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "permission": {
            "properties": {
              "canUpdate": {
                "type": "boolean"
              },
              "canDelete": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Buzz-FeedPostModel": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/Buzz-FeedPostModel-Text"
          },
          {
            "$ref": "#/components/schemas/Buzz-FeedPostModel-Photo"
          },
          {
            "$ref": "#/components/schemas/Buzz-FeedPostModel-Video"
          },
          {
            "$ref": "#/components/schemas/Buzz-FeedPostModel-Share"
          }
        ]
      },
      "Buzz-FeedPostModel-Text": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "post": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": {
            "type": "string",
            "default": "text"
          },
          "liked": {
            "type": "boolean"
          },
          "text": {
            "type": "string"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "stats": {
            "properties": {
              "numOfLikes": {
                "type": "integer"
              },
              "numOfComments": {
                "type": "integer"
              },
              "numOfShares": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "createdDate": {
            "type": "string",
            "format": "date"
          },
          "createdTime": {
            "type": "string"
          },
          "originalPost": {
            "type": [
              "object",
              "null"
            ]
          },
          "permission": {
            "properties": {
              "canUpdate": {
                "type": "boolean"
              },
              "canDelete": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Buzz-FeedPostModel-Photo": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "post": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": {
            "type": "string",
            "default": "photo"
          },
          "liked": {
            "type": "boolean"
          },
          "text": {
            "type": "string"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "stats": {
            "properties": {
              "numOfLikes": {
                "type": "integer"
              },
              "numOfComments": {
                "type": "integer"
              },
              "numOfShares": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "createdDate": {
            "type": "string",
            "format": "date"
          },
          "createdTime": {
            "type": "string"
          },
          "originalPost": {
            "type": [
              "object",
              "null"
            ]
          },
          "permission": {
            "properties": {
              "canUpdate": {
                "type": "boolean"
              },
              "canDelete": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "photoIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "type": "object"
      },
      "Buzz-FeedPostModel-Video": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "post": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": {
            "type": "string",
            "default": "video"
          },
          "liked": {
            "type": "boolean"
          },
          "text": {
            "type": "string"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "stats": {
            "properties": {
              "numOfLikes": {
                "type": "integer"
              },
              "numOfComments": {
                "type": "integer"
              },
              "numOfShares": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "createdDate": {
            "type": "string",
            "format": "date"
          },
          "createdTime": {
            "type": "string"
          },
          "originalPost": {
            "type": [
              "object",
              "null"
            ]
          },
          "permission": {
            "properties": {
              "canUpdate": {
                "type": "boolean"
              },
              "canDelete": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "video": {
            "properties": {
              "link": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Buzz-FeedPostModel-Share": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "post": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": {
            "type": "string",
            "default": "text"
          },
          "liked": {
            "type": "boolean"
          },
          "text": {
            "type": "string"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "stats": {
            "properties": {
              "numOfLikes": {
                "type": "integer"
              },
              "numOfComments": {
                "type": "integer"
              },
              "numOfShares": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "createdDate": {
            "type": "string",
            "format": "date"
          },
          "createdTime": {
            "type": "string"
          },
          "originalPost": {
            "properties": {
              "text": {
                "type": "string"
              },
              "employee": {
                "properties": {
                  "empNumber": {
                    "type": "integer"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "middleName": {
                    "type": "string"
                  },
                  "employeeId": {
                    "type": "string"
                  },
                  "terminationId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "createdDate": {
                "type": "string",
                "format": "date"
              },
              "createdTime": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "permission": {
            "properties": {
              "canUpdate": {
                "type": "boolean"
              },
              "canDelete": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Buzz-BuzzLikeOnCommentModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "likedAtDate": {
            "type": "string"
          },
          "likedAtTime": {
            "type": "string"
          },
          "comment": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Buzz-BuzzLikeOnShareModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "likedAtDate": {
            "type": "string"
          },
          "likedAtTime": {
            "type": "string"
          },
          "share": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Buzz-PostModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Buzz-ShareModel": {
        "properties": {
          "share": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "post": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Buzz-EmployeeAnniversaryModel": {
        "properties": {
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "jobTitle": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "isDeleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "joinedDate": {
            "type": "string",
            "format": "date"
          }
        },
        "type": "object"
      },
      "Claim-AttachmentModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "attachment": {
            "properties": {
              "fileName": {
                "type": "string"
              },
              "fileType": {
                "type": "string"
              },
              "fileSize": {
                "type": "integer"
              },
              "fileDescription": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "attachedBy": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "date": {
            "type": "string",
            "format": "date"
          }
        },
        "type": "object"
      },
      "Claim-ClaimEventModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Claim-ExpenseModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "claimRequest": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "referenceId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "expenseType": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "status": {
                "type": "boolean"
              },
              "isDeleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "amount": {
            "type": "number",
            "format": "float"
          },
          "note": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Claim-ExpenseTypeModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Claim-RequestModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "referenceId": {
            "type": "string"
          },
          "claimEvent": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "status": {
                "type": "boolean"
              },
              "isDeleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "currency": {
            "properties": {
              "currencyId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Claim-ClaimRequestSummaryModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "referenceId": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Claim-EmployeeClaimRequestModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "referenceId": {
            "type": "integer"
          },
          "claimEvent": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "currencyType": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "INITIATED",
              "SUBMITTED",
              "APPROVED",
              "REJECTED",
              "CANCELLED",
              "PAID"
            ]
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "amount": {
            "type": "number",
            "format": "float"
          },
          "submittedDate": {
            "type": "string",
            "format": "date"
          }
        },
        "type": "object"
      },
      "Claim-MyClaimRequestModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "referenceId": {
            "type": "integer"
          },
          "claimEvent": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "currencyType": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "INITIATED",
              "SUBMITTED",
              "APPROVED",
              "REJECTED",
              "CANCELLED",
              "PAID"
            ]
          },
          "amount": {
            "type": "number",
            "format": "float"
          },
          "submittedDate": {
            "type": "string",
            "format": "date"
          }
        },
        "type": "object"
      },
      "OAuth-OAuthClientModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "redirectUri": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "confidential": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Core-AboutOrganizationModel": {
        "properties": {
          "companyName": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "numberOfActiveEmployee": {
            "type": "integer"
          },
          "numberOfPastEmployee": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Core-WorkflowStateModel": {
        "properties": {
          "action": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Base64Attachment": {
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "base64": {
            "type": "string",
            "format": "base64"
          },
          "size": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Base64AttachmentOrNull": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/Base64Attachment"
          },
          {
            "$ref": "#/components/schemas/Null"
          }
        ]
      },
      "Null": {
        "type": "null"
      },
      "CorporateBranding-ThemeModel": {
        "properties": {
          "name": {
            "type": "string",
            "example": "default"
          },
          "variables": {
            "properties": {
              "primaryColor": {
                "type": "string",
                "example": "#FF7B1D"
              },
              "primaryFontColor": {
                "type": "string",
                "example": "#FFFFFF"
              },
              "secondaryColor": {
                "type": "string",
                "example": "#76BC21"
              },
              "secondaryFontColor": {
                "type": "string",
                "example": "#FFFFFF"
              },
              "primaryGradientStartColor": {
                "type": "string",
                "example": "#FF920B"
              },
              "primaryGradientEndColor": {
                "type": "string",
                "example": "#F35C17"
              }
            },
            "type": "object"
          },
          "showSocialMediaImages": {
            "type": "boolean",
            "example": true
          },
          "clientLogo": {
            "type": "string"
          },
          "clientBanner": {
            "type": "string"
          },
          "loginBanner": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CorporateDirectory-EmployeeDirectoryDetailedModel": {
        "properties": {
          "empNumber": {
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "terminationId": {
            "type": "integer"
          },
          "jobTitle": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "isDeleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "subunit": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "location": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "contactInfo": {
            "properties": {
              "workEmail": {
                "type": "string"
              },
              "workTelephone": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "CorporateDirectory-EmployeeDirectoryModel": {
        "properties": {
          "empNumber": {
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "terminationId": {
            "type": "integer"
          },
          "jobTitle": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "isDeleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "subunit": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "location": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Dashboard-LocationModel": {
        "properties": {
          "location": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "count": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Dashboard-SubunitModel": {
        "properties": {
          "subunit": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "count": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Dashboard-EmployeeOnLeaveListModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "lengthHours": {
            "type": "number"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "employeeId": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "duration": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "leaveType": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "LDAP-LDAPConfigModel": {
        "properties": {
          "enable": {
            "type": "boolean"
          },
          "hostname": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "encryption": {
            "type": "string"
          },
          "ldapImplementation": {
            "type": "string"
          },
          "bindAnonymously": {
            "type": "boolean"
          },
          "bindUserDN": {
            "type": [
              "string",
              "null"
            ]
          },
          "hasBindUserPassword": {
            "type": "boolean"
          },
          "userLookupSettings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dataMapping": {
            "properties": {
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "lastName": {
                "type": "string"
              },
              "workEmail": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "employeeId": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "userStatus": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "type": "object"
          },
          "mergeLDAPUsersWithExistingSystemUsers": {
            "type": "boolean"
          },
          "syncInterval": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "LDAP-LDAPSyncStatusModel": {
        "properties": {
          "syncStartedAt": {
            "properties": {
              "date": {
                "type": "string",
                "format": "date"
              },
              "time": {
                "type": "string",
                "format": "time"
              }
            },
            "type": "object"
          },
          "syncFinishedAt": {
            "properties": {
              "date": {
                "type": "string",
                "format": "date"
              },
              "time": {
                "type": "string",
                "format": "time"
              }
            },
            "type": "object"
          },
          "syncStatus": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Leave-EmployeeLeaveBalanceModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "usageBreakdown": {
            "properties": {
              "entitlement": {
                "type": "number"
              },
              "used": {
                "type": "number"
              },
              "scheduled": {
                "type": "number"
              },
              "pending": {
                "type": "number"
              },
              "taken": {
                "type": "number"
              },
              "balance": {
                "type": "number"
              }
            },
            "type": [
              "object",
              "null"
            ]
          },
          "leaveType": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "fromDate": {
            "type": "string",
            "format": "date"
          },
          "toDate": {
            "type": "string",
            "format": "date"
          }
        },
        "type": "object"
      },
      "Leave-BulkLeaveEntitlementMatchingEmployeeModel": {
        "properties": {
          "empNumber": {
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "terminationId": {
            "type": "integer"
          },
          "entitlement": {
            "properties": {
              "current": {
                "type": "integer"
              },
              "updateAs": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Leave-EmployeeLeaveEntitlementModel": {
        "properties": {
          "empNumber": {
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "terminationId": {
            "type": "integer"
          },
          "entitlement": {
            "properties": {
              "current": {
                "type": "integer"
              },
              "updateAs": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Leave-EmployeeLeaveModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "lengthHours": {
            "type": "string"
          },
          "lengthDays": {
            "type": "string"
          },
          "status": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "leaveRequest": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "leaveType": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "durationType": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Leave-HolidayModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "recurring": {
            "type": "boolean"
          },
          "length": {
            "type": "string",
            "enum": [
              0,
              4
            ]
          },
          "lengthName": {
            "type": "string",
            "enum": [
              "Full Day",
              "Half Day"
            ]
          }
        },
        "type": "object"
      },
      "Leave-LeaveBalanceModel": {
        "properties": {
          "entitled": {
            "type": "integer"
          },
          "used": {
            "type": "integer"
          },
          "scheduled": {
            "type": "integer"
          },
          "pending": {
            "type": "integer"
          },
          "taken": {
            "type": "integer"
          },
          "balance": {
            "type": "integer"
          },
          "asAtDate": {
            "type": "number"
          },
          "endDate": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "Leave-LeaveCommentModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "leave": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "time": {
            "type": "string",
            "format": "time"
          },
          "createdByEmployee": {
            "properties": {
              "empNumber": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "integer"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "comment": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Leave-LeaveDetailedModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "dates": {
            "properties": {
              "fromDate": {
                "type": "string",
                "format": "date"
              },
              "toDate": {
                "type": "string",
                "format": "date"
              },
              "durationType": {
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "startTime": {
                "type": "string",
                "format": "time"
              }
            },
            "type": "object"
          },
          "endTime": {
            "type": "string",
            "format": "time"
          },
          "lengthHours": {
            "type": "integer"
          },
          "leaveBalance": {
            "type": "object"
          },
          "leaveStatus": {
            "type": "object"
          },
          "allowedActions": {
            "type": "object"
          },
          "leaveType": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "lastComment": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "comment": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date"
              },
              "time": {
                "type": "string",
                "format": "time"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Leave-LeaveEntitlementModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "entitlement": {
            "type": "integer"
          },
          "daysUsed": {
            "type": "integer"
          },
          "leaveType": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "fromDate": {
            "type": "number"
          },
          "toDate": {
            "type": "number"
          },
          "creditedDate": {
            "type": "number"
          },
          "entitlementType": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "deleted": {
            "type": "boolean"
          },
          "deletable": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Leave-LeaveEntitlementSummaryModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "usageBreakdown": {
            "properties": {
              "entitlement": {
                "type": "number"
              },
              "used": {
                "type": "number"
              },
              "scheduled": {
                "type": "number"
              },
              "pending": {
                "type": "number"
              },
              "taken": {
                "type": "number"
              },
              "balance": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "leaveType": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "fromDate": {
            "type": "string"
          },
          "toDate": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Leave-LeaveModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "lengthHours": {
            "type": "number"
          },
          "lengthDays": {
            "type": "number"
          },
          "status": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "leaveRequest": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "leaveType": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "startTime": {
            "type": "string",
            "format": "time"
          },
          "endTime": {
            "type": "string",
            "format": "time"
          },
          "durationType": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "lastComment": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "comment": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date"
              },
              "time": {
                "type": "string",
                "format": "time"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Leave-LeavePeriodHistoryModel": {
        "properties": {
          "startMonth": {
            "type": "integer"
          },
          "startDay": {
            "type": "integer"
          },
          "createdAt": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "Leave-LeavePeriodModel": {
        "properties": {
          "startDate": {
            "type": "number"
          },
          "endDate": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "Leave-LeaveRequestCommentModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "leaveRequest": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "time": {
            "type": "string",
            "format": "time"
          },
          "createdByEmployee": {
            "properties": {
              "empNumber": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "integer"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "comment": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Leave-LeaveRequestDetailedModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "dates": {
            "properties": {
              "durationType": {
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "endTime": {
                "type": "number"
              },
              "fromDate": {
                "type": "number"
              },
              "startTime": {
                "type": "number"
              },
              "toDate": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "noOfDays": {
            "type": "integer"
          },
          "leaveBalances": {
            "type": "array",
            "items": {
              "properties": {
                "period": {
                  "$ref": "#/components/schemas/Leave-LeavePeriodModel"
                },
                "balance": {
                  "$ref": "#/components/schemas/Leave-LeaveBalanceModel"
                }
              },
              "type": "object"
            }
          },
          "multiPeriod": {
            "type": "boolean"
          },
          "leaveBreakdown": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "lengthDays": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "allowedActions": {
            "type": "array",
            "items": {
              "properties": {
                "action": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "hasMultipleStatus": {
            "type": "boolean"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "leaveType": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "lastComment": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "comment": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date"
              },
              "time": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Leave-LeaveRequestModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "leaveType": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "dateApplied": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "Leave-LeaveTypeModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "situational": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Leave-OverlapLeaveModel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Leave-LeaveModel"
          },
          {
            "properties": {
              "id": {
                "type": "integer"
              },
              "date": {
                "type": "string",
                "format": "date"
              },
              "lengthHours": {
                "type": "integer"
              },
              "lengthDays": {
                "type": "integer"
              },
              "status": {
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "leaveRequest": {
                "properties": {
                  "id": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "leaveType": {
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "deleted": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "startTime": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "time"
              },
              "endTime": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "time"
              },
              "durationType": {
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "lastComment": {
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date"
                  },
                  "time": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "time"
                  }
                },
                "type": "object"
              }
            }
          }
        ]
      },
      "Leave-WorkWeekIndexedModel": {
        "properties": {
          "0": {
            "type": "integer"
          },
          "1": {
            "type": "integer"
          },
          "2": {
            "type": "integer"
          },
          "3": {
            "type": "integer"
          },
          "4": {
            "type": "integer"
          },
          "5": {
            "type": "integer"
          },
          "6": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Leave-WorkWeekModel": {
        "properties": {
          "monday": {
            "type": "integer"
          },
          "tuesday": {
            "type": "integer"
          },
          "wednesday": {
            "type": "integer"
          },
          "thursday": {
            "type": "integer"
          },
          "friday": {
            "type": "integer"
          },
          "saturday": {
            "type": "integer"
          },
          "sunday": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Maintenance-PurgeCandidateListModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "dateOfApplication": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "label": {
                "type": "string",
                "enum": [
                  "application initiated",
                  "shortlisted",
                  "rejected",
                  "interview scheduled",
                  "interview passed",
                  "interview failed",
                  "job offered",
                  "offer declined",
                  "hired"
                ]
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Maintenance-PurgeCandidateModel": {
        "properties": {
          "purged": {
            "properties": {
              "vacancyId": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Maintenance-PurgeEmployeeModel": {
        "properties": {
          "purged": {
            "properties": {
              "empNumber": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Performance-CompletedPerformanceReviewModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "jobTitle": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "subunit": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "reviewPeriodStart": {
            "type": "number"
          },
          "reviewPeriodEnd": {
            "type": "number"
          },
          "dueDate": {
            "type": "number"
          },
          "overallStatus": {
            "properties": {
              "statusId": {
                "type": "integer"
              },
              "statusName": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "finalRating": {
            "type": "number"
          },
          "finalComment": {
            "type": "string"
          },
          "completedDate": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "Performance-DetailedPerformanceReviewModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "jobTitle": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "subunit": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "reviewPeriodStart": {
            "type": "number"
          },
          "reviewPeriodEnd": {
            "type": "number"
          },
          "dueDate": {
            "type": "number"
          },
          "overallStatus": {
            "properties": {
              "statusId": {
                "type": "integer"
              },
              "statusName": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Performance-DetailedPerformanceTrackerModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "trackerName": {
            "type": "string"
          },
          "addedDate": {
            "type": "number"
          },
          "modifiedDate": {
            "type": "number"
          },
          "status": {
            "type": "integer"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "reviewers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Performance-PerformanceTrackReviewerModel"
            }
          },
          "ownerEditable": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Performance-EmployeeTrackerModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "addedDate": {
            "type": "number"
          },
          "modifiedDate": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "Performance-KpiModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "jobTitle": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "minRating": {
            "type": "integer"
          },
          "maxRating": {
            "type": "integer"
          },
          "isDefault": {
            "type": "boolean"
          },
          "deletable": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Performance-KpiSummaryModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "minRating": {
            "type": "integer"
          },
          "maxRating": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Performance-PerformanceReviewModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "jobTitle": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "subunit": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "reviewPeriodStart": {
            "type": "number"
          },
          "reviewPeriodEnd": {
            "type": "number"
          },
          "dueDate": {
            "type": "number"
          },
          "overallStatus": {
            "properties": {
              "statusId": {
                "type": "integer"
              },
              "statusName": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "reviewer": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "employee": {
                "properties": {
                  "empNumber": {
                    "type": "integer"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "terminationId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Performance-PerformanceTrackReviewerModel": {
        "properties": {
          "empNumber": {
            "type": "integer"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "terminationId": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Performance-PerformanceTrackerLogModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "log": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "achievement": {
            "type": "string"
          },
          "addedDate": {
            "type": "number"
          },
          "modifiedDate": {
            "type": "number"
          },
          "reviewer": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Performance-PerformanceTrackerModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "trackerName": {
            "type": "string"
          },
          "addedDate": {
            "type": "number"
          },
          "modifiedDate": {
            "type": "number"
          },
          "status": {
            "type": "integer"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Performance-ReviewerModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              },
              "jobTitle": {
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "deleted": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Performance-ReviewerRatingModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "rating": {
            "type": "number"
          },
          "comment": {
            "type": "string"
          },
          "kpi": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Performance-SupervisorModel": {
        "properties": {
          "empNumber": {
            "type": "integer"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "terminationId": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Performance-SupervisorReviewerModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "employeeId": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              },
              "jobTitle": {
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "deleted": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Pim-CustomFieldModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "fieldName": {
            "type": "string"
          },
          "fieldType": {
            "type": "string"
          },
          "extraData": {
            "type": "string"
          },
          "screen": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Pim-EmpEmergencyContactModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "relationship": {
            "type": "string"
          },
          "homePhone": {
            "type": "string"
          },
          "officePhone": {
            "type": "string"
          },
          "mobilePhone": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Pim-EmpUsTaxExemptionModel": {
        "properties": {
          "federalStatus": {
            "type": "string"
          },
          "federalExemptions": {
            "type": "integer"
          },
          "taxState": {
            "properties": {
              "code": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "stateStatus": {
            "type": "string"
          },
          "stateExemptions": {
            "type": "integer"
          },
          "unemploymentState": {
            "properties": {
              "code": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "workState": {
            "properties": {
              "code": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeAllowedLanguageModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "allowedFluencyIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "type": "object"
      },
      "Pim-EmployeeAllowedReportToEmployeeModel": {
        "properties": {
          "empNumber": {
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "employeeId": {
            "type": "integer"
          },
          "terminationId": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeAllowedSkillModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeAttachmentModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "fileType": {
            "type": "string"
          },
          "attachedBy": {
            "type": "integer"
          },
          "attachedByName": {
            "type": "string"
          },
          "attachedTime": {
            "type": "string",
            "format": "time"
          },
          "attachedDate": {
            "type": "string",
            "format": "date"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeContactDetailsModel": {
        "properties": {
          "street1": {
            "type": "string"
          },
          "street2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "province": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "homeTelephone": {
            "type": "string"
          },
          "workTelephone": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "workEmail": {
            "type": "string"
          },
          "otherEmail": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeDependentModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "relationshipType": {
            "type": "string"
          },
          "relationship": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeDetailedModel": {
        "properties": {
          "empNumber": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "terminationId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "jobTitle": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "isDeleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "subunit": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "empStatus": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "supervisors": {
            "type": "array",
            "items": {
              "properties": {
                "empNumber": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "middleName": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Pim-EmployeeEducationModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "institute": {
            "type": "string"
          },
          "major": {
            "type": "string"
          },
          "year": {
            "type": "integer"
          },
          "score": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "education": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeImmigrationModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "number": {
            "type": "string"
          },
          "issuedDate": {
            "type": "string",
            "format": "date"
          },
          "expiryDate": {
            "type": "string",
            "format": "date"
          },
          "type": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "reviewDate": {
            "type": "string",
            "format": "date"
          },
          "country": {
            "properties": {
              "code": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "comment": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeJobDetailModel": {
        "properties": {
          "empNumber": {
            "type": "integer"
          },
          "joinedDate": {
            "type": "string",
            "format": "date"
          },
          "jobTitle": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "isDeleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "jobSpecificationAttachment": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "filename": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "empStatus": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "jobCategory": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "subunit": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "unitId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "location": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "employeeTerminationRecord": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "date": {
                "type": "string",
                "format": "date"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeLanguageModel": {
        "properties": {
          "language": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "fluency": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "competency": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "comment": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeLicenseModel": {
        "properties": {
          "licenseNo": {
            "type": "string"
          },
          "issuedDate": {
            "type": "string",
            "format": "date"
          },
          "expiryDate": {
            "type": "string",
            "format": "date"
          },
          "license": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeMembershipModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "membership": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "subscriptionFee": {
            "type": "number"
          },
          "subscriptionPaidBy": {
            "type": "string"
          },
          "currencyType": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "subscriptionCommenceDate": {
            "type": "string",
            "format": "date"
          },
          "subscriptionRenewalDate": {
            "type": "string",
            "format": "date"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeModel": {
        "properties": {
          "empNumber": {
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "terminationId": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Pim-EmployeePersonalDetailModel": {
        "properties": {
          "empNumber": {
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "otherId": {
            "type": "string"
          },
          "drivingLicenseNo": {
            "type": "string"
          },
          "drivingLicenseExpiredDate": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string"
          },
          "maritalStatus": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "format": "date"
          },
          "terminationId": {
            "type": "integer"
          },
          "nationality": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "ssnNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "sinNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "nickname": {
            "type": [
              "string",
              "null"
            ]
          },
          "smoker": {
            "type": [
              "integer",
              "null"
            ]
          },
          "militaryService": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "type": "object"
      },
      "Pim-EmployeePictureModel": {
        "properties": {
          "empNumber": {
            "type": "integer"
          },
          "filename": {
            "type": "string"
          },
          "fileType": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "width": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeSalaryModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "amount": {
            "type": "number"
          },
          "salaryName": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "payPeriod": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "payGrade": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "currencyType": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "directDebit": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "routingNumber": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              },
              "accountType": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeSkillModel": {
        "properties": {
          "yearsOfExperience": {
            "type": "number"
          },
          "comments": {
            "type": "string"
          },
          "skill": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeSubordinateModel": {
        "properties": {
          "subordinate": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "reportingMethod": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeSupervisorModel": {
        "properties": {
          "supervisor": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "reportingMethod": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeTerminationModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "note": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "terminationReason": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeWorkExperienceModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "company": {
            "type": "string"
          },
          "jobTitle": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "fromDate": {
            "type": "string",
            "format": "date"
          },
          "toDate": {
            "type": "string",
            "format": "date"
          },
          "education": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Pim-EmployeeWorkShiftModel": {
        "properties": {
          "startTime": {
            "type": "string",
            "format": "time"
          },
          "endTime": {
            "type": "string",
            "format": "time"
          }
        },
        "type": "object"
      },
      "Pim-EmploymentContractModel": {
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "contractAttachment": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "filename": {
                "type": "string"
              },
              "size": {
                "type": "integer"
              },
              "fileType": {
                "type": "string"
              },
              "attachedBy": {
                "type": "string"
              },
              "attachedByName": {
                "type": "string"
              },
              "attachedTime": {
                "type": "string",
                "format": "time"
              },
              "attachedDate": {
                "type": "string",
                "format": "date"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Pim-MyInfoDetailedModel": {
        "properties": {
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "terminationId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "jobTitle": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "isDeleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "subunit": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Pim-PimDefinedReportModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Pim-ReportingMethodConfigurationModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Pim-TerminationReasonConfigurationModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Recruitment-CandidateAttachmentModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "candidateId": {
            "type": "integer"
          },
          "attachment": {
            "properties": {
              "fileName": {
                "type": "string"
              },
              "fileType": {
                "type": "string"
              },
              "fileSize": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Recruitment-CandidateDetailedModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "contactNumber": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "keywords": {
            "type": "string"
          },
          "modeOfApplication": {
            "type": "string"
          },
          "dateOfApplication": {
            "type": "string",
            "format": "date"
          },
          "vacancy": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "status": {
                "type": "boolean"
              },
              "jobTitle": {
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "title": {
                    "type": "string"
                  },
                  "isDeleted": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "hiringManager": {
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "middleName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "terminationId": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "lable": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "hasAttachment": {
            "type": "boolean"
          },
          "consentToKeepData": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Recruitment-CandidateHistoryDefaultModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "candidate": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "vacancy": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "hiringManager": {
                "properties": {
                  "empNumber": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "middleName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "terminationId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "note": {
            "type": "string"
          },
          "action": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "label": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Recruitment-CandidateHistoryDetailedModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "action": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "label": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "candidate": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "vacancy": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "hiringManger": {
                "properties": {
                  "empNumber": {
                    "type": "integer"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "middleName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "terminationId": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "performedBy": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "interview": {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "performedDate": {
            "type": "string",
            "format": "date"
          },
          "note": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Recruitment-CandidateHistoryListModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "action": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "label": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "vacancyName": {
            "type": "string"
          },
          "performedBy": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "performedDate": {
            "type": "string",
            "format": "date"
          },
          "note": {
            "type": "string"
          },
          "editable": {
            "type": "boolean"
          },
          "interview": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date"
              },
              "time": {
                "type": "string",
                "format": "time"
              },
              "interviewers": {
                "type": "array",
                "items": {
                  "properties": {
                    "empNumber": {
                      "type": "integer"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "middleName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "terminationId": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": [
              "object",
              "null"
            ]
          }
        },
        "type": "object"
      },
      "Recruitment-CandidateInterviewModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "candidate": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "vacancy": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "interviewers": {
            "type": "array",
            "items": {
              "properties": {
                "empNumber": {
                  "type": "integer"
                },
                "lastName": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "middleName": {
                  "type": "string"
                },
                "terminationId": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "interviewDate": {
            "type": "string",
            "format": "date"
          },
          "interviewTime": {
            "type": "string",
            "format": "time"
          },
          "note": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Recruitment-CandidateListModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "dateOfApplication": {
            "type": "string",
            "format": "date"
          },
          "vacancy": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "status": {
                "type": "boolean"
              },
              "hiringManager": {
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "middleName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "terminationId": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "hasAttachment": {
            "type": "boolean"
          },
          "deletable": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Recruitment-CandidateModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Recruitment-InterviewAttachmentModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "interviewId": {
            "type": "integer"
          },
          "attachment": {
            "properties": {
              "fileName": {
                "type": "string"
              },
              "fileType": {
                "type": "string"
              },
              "fileSize": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "comment": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Recruitment-VacancyAttachmentModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "vacancyId": {
            "type": "integer"
          },
          "attachment": {
            "properties": {
              "fileName": {
                "type": "string"
              },
              "fileType": {
                "type": "string"
              },
              "fileSize": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "comment": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Recruitment-VacancyDetailedModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "numOfPositions": {
            "type": "integer"
          },
          "status": {
            "type": "boolean"
          },
          "isPublished": {
            "type": "boolean"
          },
          "jobTitle": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "isDeleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "hiringManager": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "terminationId": {
                "type": [
                  "integer",
                  "null"
                ]
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Recruitment-VacancyModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "numOfPositions": {
            "type": "integer"
          },
          "status": {
            "type": "boolean"
          },
          "isPublished": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Recruitment-VacancySummaryModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "isPublished": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Time-CopyActivityModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "unique": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Time-CustomerModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Time-DefaultTimesheetModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "status": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          }
        },
        "type": "object"
      },
      "Time-DetailedTimesheetModel": {
        "properties": {
          "project": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "customer": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "activity": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "total": {
            "properties": {
              "hours": {
                "type": "integer"
              },
              "minutes": {
                "type": "integer"
              },
              "label": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "dates": {
            "type": "object",
            "additionalProperties": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "date": {
                  "type": "string",
                  "format": "date"
                },
                "comment": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "duration": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Time-EmployeeTimesheetModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "employee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "status": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          }
        },
        "type": "object"
      },
      "Time-ProjectActivityModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Time-ProjectDetailedModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "description"
          },
          "customer": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "deleted": {
            "type": "boolean"
          },
          "projectAdmins": {
            "type": "array",
            "items": {
              "properties": {
                "empNumber": {
                  "type": "integer"
                },
                "lastName": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "middleName": {
                  "type": "string"
                },
                "terminationId": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Time-ProjectModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Time-TimeConfigPeriodModel": {
        "properties": {
          "startDay": {
            "type": "string",
            "format": "date"
          }
        },
        "type": "object"
      },
      "Time-TimeFormatModel": {
        "properties": {
          "formatId": {
            "type": "integer"
          },
          "format": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Time-TimesheetActionLogModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "action": {
            "properties": {
              "name": {
                "type": "string"
              },
              "label": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "comment": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "performedEmployee": {
            "properties": {
              "empNumber": {
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "terminationId": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Time-TimesheetItemModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "comment": {
            "type": "string"
          },
          "project": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "activity": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Time-TimesheetModel": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "status": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          }
        },
        "type": "object"
      },
      "Time-TotalDurationModel": {
        "properties": {
          "hours": {
            "type": "integer"
          },
          "minutes": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "responses": {
      "DeleteResponse": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "meta": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "RecordNotFound": {
        "description": "Record Not Found",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "error": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "404"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "example": {
              "error": {
                "status": "404",
                "message": "Record Not Found"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "sortOrder": {
        "name": "sortOrder",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 50
        }
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 0
        }
      }
    },
    "requestBodies": {
      "DeleteRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "ids"
              ],
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Cookie-HTTPS": {
        "type": "apiKey",
        "name": "orangehrm",
        "in": "cookie"
      },
      "Cookie-HTTP": {
        "type": "apiKey",
        "name": "_orangehrm",
        "in": "cookie"
      }
    }
  }
}
